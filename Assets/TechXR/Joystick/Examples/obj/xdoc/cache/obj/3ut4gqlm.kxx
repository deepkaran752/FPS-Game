id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Global
  language: CSharp
  name:
    CSharp: Global
    VB: ''
  nameWithType:
    CSharp: Global
    VB: ''
  qualifiedName:
    CSharp: Global
    VB: ''
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Global.JoystickPlayerExample
    commentId: T:Global.JoystickPlayerExample
    language: CSharp
    name:
      CSharp: JoystickPlayerExample
      VB: JoystickPlayerExample
    nameWithType:
      CSharp: JoystickPlayerExample
      VB: JoystickPlayerExample
    qualifiedName:
      CSharp: JoystickPlayerExample
      VB: JoystickPlayerExample
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: JoystickPlayerExample
      path: ''
      startLine: 4
    syntax:
      content:
        CSharp: 'public class JoystickPlayerExample : MonoBehaviour'
        VB: >-
          Public Class JoystickPlayerExample

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.JoystickPlayerExample.speed
      commentId: F:Global.JoystickPlayerExample.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: JoystickPlayerExample.speed
        VB: JoystickPlayerExample.speed
      qualifiedName:
        CSharp: JoystickPlayerExample.speed
        VB: JoystickPlayerExample.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: speed
        path: ''
        startLine: 6
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickPlayerExample.variableJoystick
      commentId: F:Global.JoystickPlayerExample.variableJoystick
      language: CSharp
      name:
        CSharp: variableJoystick
        VB: variableJoystick
      nameWithType:
        CSharp: JoystickPlayerExample.variableJoystick
        VB: JoystickPlayerExample.variableJoystick
      qualifiedName:
        CSharp: JoystickPlayerExample.variableJoystick
        VB: JoystickPlayerExample.variableJoystick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: variableJoystick
        path: ''
        startLine: 7
      syntax:
        content:
          CSharp: public VariableJoystick variableJoystick
          VB: Public variableJoystick As VariableJoystick
        return:
          type: Global.VariableJoystick
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickPlayerExample.rb
      commentId: F:Global.JoystickPlayerExample.rb
      language: CSharp
      name:
        CSharp: rb
        VB: rb
      nameWithType:
        CSharp: JoystickPlayerExample.rb
        VB: JoystickPlayerExample.rb
      qualifiedName:
        CSharp: JoystickPlayerExample.rb
        VB: JoystickPlayerExample.rb
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rb
        path: ''
        startLine: 8
      syntax:
        content:
          CSharp: public Rigidbody rb
          VB: Public rb As Rigidbody
        return:
          type: Global.Rigidbody
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickPlayerExample.FixedUpdate
      commentId: M:Global.JoystickPlayerExample.FixedUpdate
      language: CSharp
      name:
        CSharp: FixedUpdate()
        VB: FixedUpdate()
      nameWithType:
        CSharp: JoystickPlayerExample.FixedUpdate()
        VB: JoystickPlayerExample.FixedUpdate()
      qualifiedName:
        CSharp: JoystickPlayerExample.FixedUpdate()
        VB: JoystickPlayerExample.FixedUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FixedUpdate
        path: ''
        startLine: 10
      syntax:
        content:
          CSharp: public void FixedUpdate()
          VB: Public Sub FixedUpdate
      overload: Global.JoystickPlayerExample.FixedUpdate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.JoystickSetterExample
    commentId: T:Global.JoystickSetterExample
    language: CSharp
    name:
      CSharp: JoystickSetterExample
      VB: JoystickSetterExample
    nameWithType:
      CSharp: JoystickSetterExample
      VB: JoystickSetterExample
    qualifiedName:
      CSharp: JoystickSetterExample
      VB: JoystickSetterExample
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: JoystickSetterExample
      path: ''
      startLine: 21
    syntax:
      content:
        CSharp: 'public class JoystickSetterExample : MonoBehaviour'
        VB: >-
          Public Class JoystickSetterExample

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.JoystickSetterExample.variableJoystick
      commentId: F:Global.JoystickSetterExample.variableJoystick
      language: CSharp
      name:
        CSharp: variableJoystick
        VB: variableJoystick
      nameWithType:
        CSharp: JoystickSetterExample.variableJoystick
        VB: JoystickSetterExample.variableJoystick
      qualifiedName:
        CSharp: JoystickSetterExample.variableJoystick
        VB: JoystickSetterExample.variableJoystick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: variableJoystick
        path: ''
        startLine: 23
      syntax:
        content:
          CSharp: public VariableJoystick variableJoystick
          VB: Public variableJoystick As VariableJoystick
        return:
          type: Global.VariableJoystick
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickSetterExample.valueText
      commentId: F:Global.JoystickSetterExample.valueText
      language: CSharp
      name:
        CSharp: valueText
        VB: valueText
      nameWithType:
        CSharp: JoystickSetterExample.valueText
        VB: JoystickSetterExample.valueText
      qualifiedName:
        CSharp: JoystickSetterExample.valueText
        VB: JoystickSetterExample.valueText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: valueText
        path: ''
        startLine: 24
      syntax:
        content:
          CSharp: public Text valueText
          VB: Public valueText As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickSetterExample.background
      commentId: F:Global.JoystickSetterExample.background
      language: CSharp
      name:
        CSharp: background
        VB: background
      nameWithType:
        CSharp: JoystickSetterExample.background
        VB: JoystickSetterExample.background
      qualifiedName:
        CSharp: JoystickSetterExample.background
        VB: JoystickSetterExample.background
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: background
        path: ''
        startLine: 25
      syntax:
        content:
          CSharp: public Image background
          VB: Public background As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickSetterExample.axisSprites
      commentId: F:Global.JoystickSetterExample.axisSprites
      language: CSharp
      name:
        CSharp: axisSprites
        VB: axisSprites
      nameWithType:
        CSharp: JoystickSetterExample.axisSprites
        VB: JoystickSetterExample.axisSprites
      qualifiedName:
        CSharp: JoystickSetterExample.axisSprites
        VB: JoystickSetterExample.axisSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: axisSprites
        path: ''
        startLine: 26
      syntax:
        content:
          CSharp: public Sprite[] axisSprites
          VB: Public axisSprites As Sprite()
        return:
          type: Global.Sprite[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickSetterExample.ModeChanged(System.Int32)
      commentId: M:Global.JoystickSetterExample.ModeChanged(System.Int32)
      language: CSharp
      name:
        CSharp: ModeChanged(Int32)
        VB: ModeChanged(Int32)
      nameWithType:
        CSharp: JoystickSetterExample.ModeChanged(Int32)
        VB: JoystickSetterExample.ModeChanged(Int32)
      qualifiedName:
        CSharp: JoystickSetterExample.ModeChanged(System.Int32)
        VB: JoystickSetterExample.ModeChanged(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ModeChanged
        path: ''
        startLine: 28
      syntax:
        content:
          CSharp: public void ModeChanged(int index)
          VB: Public Sub ModeChanged(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Global.JoystickSetterExample.ModeChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickSetterExample.AxisChanged(System.Int32)
      commentId: M:Global.JoystickSetterExample.AxisChanged(System.Int32)
      language: CSharp
      name:
        CSharp: AxisChanged(Int32)
        VB: AxisChanged(Int32)
      nameWithType:
        CSharp: JoystickSetterExample.AxisChanged(Int32)
        VB: JoystickSetterExample.AxisChanged(Int32)
      qualifiedName:
        CSharp: JoystickSetterExample.AxisChanged(System.Int32)
        VB: JoystickSetterExample.AxisChanged(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AxisChanged
        path: ''
        startLine: 46
      syntax:
        content:
          CSharp: public void AxisChanged(int index)
          VB: Public Sub AxisChanged(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Global.JoystickSetterExample.AxisChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickSetterExample.SnapX(System.Boolean)
      commentId: M:Global.JoystickSetterExample.SnapX(System.Boolean)
      language: CSharp
      name:
        CSharp: SnapX(Boolean)
        VB: SnapX(Boolean)
      nameWithType:
        CSharp: JoystickSetterExample.SnapX(Boolean)
        VB: JoystickSetterExample.SnapX(Boolean)
      qualifiedName:
        CSharp: JoystickSetterExample.SnapX(System.Boolean)
        VB: JoystickSetterExample.SnapX(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SnapX
        path: ''
        startLine: 67
      syntax:
        content:
          CSharp: public void SnapX(bool value)
          VB: Public Sub SnapX(value As Boolean)
        parameters:
        - id: value
          type: System.Boolean
      overload: Global.JoystickSetterExample.SnapX*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JoystickSetterExample.SnapY(System.Boolean)
      commentId: M:Global.JoystickSetterExample.SnapY(System.Boolean)
      language: CSharp
      name:
        CSharp: SnapY(Boolean)
        VB: SnapY(Boolean)
      nameWithType:
        CSharp: JoystickSetterExample.SnapY(Boolean)
        VB: JoystickSetterExample.SnapY(Boolean)
      qualifiedName:
        CSharp: JoystickSetterExample.SnapY(System.Boolean)
        VB: JoystickSetterExample.SnapY(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SnapY
        path: ''
        startLine: 72
      syntax:
        content:
          CSharp: public void SnapY(bool value)
          VB: Public Sub SnapY(value As Boolean)
        parameters:
        - id: value
          type: System.Boolean
      overload: Global.JoystickSetterExample.SnapY*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Joystick
    commentId: T:Global.Joystick
    language: CSharp
    name:
      CSharp: Joystick
      VB: Joystick
    nameWithType:
      CSharp: Joystick
      VB: Joystick
    qualifiedName:
      CSharp: Joystick
      VB: Joystick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Joystick
      path: ''
      startLine: 87
    syntax:
      content:
        CSharp: 'public class Joystick : MonoBehaviour, IPointerDownHandler, IDragHandler, IPointerUpHandler'
        VB: >-
          Public Class Joystick

              Inherits MonoBehaviour

              Implements IPointerDownHandler, IDragHandler, IPointerUpHandler
    inheritance:
    - System.Object
    implements:
    - Global.IPointerDownHandler
    - Global.IDragHandler
    - Global.IPointerUpHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Joystick.Horizontal
      commentId: P:Global.Joystick.Horizontal
      language: CSharp
      name:
        CSharp: Horizontal
        VB: Horizontal
      nameWithType:
        CSharp: Joystick.Horizontal
        VB: Joystick.Horizontal
      qualifiedName:
        CSharp: Joystick.Horizontal
        VB: Joystick.Horizontal
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Horizontal
        path: ''
        startLine: 89
      syntax:
        content:
          CSharp: public float Horizontal { get; }
          VB: Public ReadOnly Property Horizontal As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.Joystick.Horizontal*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.Joystick.Vertical
      commentId: P:Global.Joystick.Vertical
      language: CSharp
      name:
        CSharp: Vertical
        VB: Vertical
      nameWithType:
        CSharp: Joystick.Vertical
        VB: Joystick.Vertical
      qualifiedName:
        CSharp: Joystick.Vertical
        VB: Joystick.Vertical
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Vertical
        path: ''
        startLine: 90
      syntax:
        content:
          CSharp: public float Vertical { get; }
          VB: Public ReadOnly Property Vertical As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.Joystick.Vertical*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.Joystick.Direction
      commentId: P:Global.Joystick.Direction
      language: CSharp
      name:
        CSharp: Direction
        VB: Direction
      nameWithType:
        CSharp: Joystick.Direction
        VB: Joystick.Direction
      qualifiedName:
        CSharp: Joystick.Direction
        VB: Joystick.Direction
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Direction
        path: ''
        startLine: 91
      syntax:
        content:
          CSharp: public Vector2 Direction { get; }
          VB: Public ReadOnly Property Direction As Vector2
        parameters: []
        return:
          type: Global.Vector2
      overload: Global.Joystick.Direction*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.Joystick.HandleRange
      commentId: P:Global.Joystick.HandleRange
      language: CSharp
      name:
        CSharp: HandleRange
        VB: HandleRange
      nameWithType:
        CSharp: Joystick.HandleRange
        VB: Joystick.HandleRange
      qualifiedName:
        CSharp: Joystick.HandleRange
        VB: Joystick.HandleRange
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HandleRange
        path: ''
        startLine: 93
      syntax:
        content:
          CSharp: public float HandleRange { get; set; }
          VB: Public Property HandleRange As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.Joystick.HandleRange*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.Joystick.DeadZone
      commentId: P:Global.Joystick.DeadZone
      language: CSharp
      name:
        CSharp: DeadZone
        VB: DeadZone
      nameWithType:
        CSharp: Joystick.DeadZone
        VB: Joystick.DeadZone
      qualifiedName:
        CSharp: Joystick.DeadZone
        VB: Joystick.DeadZone
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DeadZone
        path: ''
        startLine: 99
      syntax:
        content:
          CSharp: public float DeadZone { get; set; }
          VB: Public Property DeadZone As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.Joystick.DeadZone*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.Joystick.AxisOptions
      commentId: P:Global.Joystick.AxisOptions
      language: CSharp
      name:
        CSharp: AxisOptions
        VB: AxisOptions
      nameWithType:
        CSharp: Joystick.AxisOptions
        VB: Joystick.AxisOptions
      qualifiedName:
        CSharp: Joystick.AxisOptions
        VB: Joystick.AxisOptions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AxisOptions
        path: ''
        startLine: 105
      syntax:
        content:
          CSharp: public AxisOptions AxisOptions { get; set; }
          VB: Public Property AxisOptions As AxisOptions
        parameters: []
        return:
          type: Global.AxisOptions
      overload: Global.Joystick.AxisOptions*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.Joystick.SnapX
      commentId: P:Global.Joystick.SnapX
      language: CSharp
      name:
        CSharp: SnapX
        VB: SnapX
      nameWithType:
        CSharp: Joystick.SnapX
        VB: Joystick.SnapX
      qualifiedName:
        CSharp: Joystick.SnapX
        VB: Joystick.SnapX
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SnapX
        path: ''
        startLine: 106
      syntax:
        content:
          CSharp: public bool SnapX { get; set; }
          VB: Public Property SnapX As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.Joystick.SnapX*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.Joystick.SnapY
      commentId: P:Global.Joystick.SnapY
      language: CSharp
      name:
        CSharp: SnapY
        VB: SnapY
      nameWithType:
        CSharp: Joystick.SnapY
        VB: Joystick.SnapY
      qualifiedName:
        CSharp: Joystick.SnapY
        VB: Joystick.SnapY
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SnapY
        path: ''
        startLine: 107
      syntax:
        content:
          CSharp: public bool SnapY { get; set; }
          VB: Public Property SnapY As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.Joystick.SnapY*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.Joystick.background
      commentId: F:Global.Joystick.background
      language: CSharp
      name:
        CSharp: background
        VB: background
      nameWithType:
        CSharp: Joystick.background
        VB: Joystick.background
      qualifiedName:
        CSharp: Joystick.background
        VB: Joystick.background
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: background
        path: ''
        startLine: 115
      syntax:
        content:
          CSharp: protected RectTransform background
          VB: Protected background As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.Joystick.Start
      commentId: M:Global.Joystick.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Joystick.Start()
        VB: Joystick.Start()
      qualifiedName:
        CSharp: Joystick.Start()
        VB: Joystick.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 124
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: Global.Joystick.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.Joystick.OnPointerDown(PointerEventData)
      commentId: M:Global.Joystick.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: Joystick.OnPointerDown(PointerEventData)
        VB: Joystick.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: Joystick.OnPointerDown(PointerEventData)
        VB: Joystick.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 141
      syntax:
        content:
          CSharp: public virtual void OnPointerDown(PointerEventData eventData)
          VB: Public Overridable Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.Joystick.OnPointerDown*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.Joystick.OnDrag(PointerEventData)
      commentId: M:Global.Joystick.OnDrag(PointerEventData)
      language: CSharp
      name:
        CSharp: OnDrag(PointerEventData)
        VB: OnDrag(PointerEventData)
      nameWithType:
        CSharp: Joystick.OnDrag(PointerEventData)
        VB: Joystick.OnDrag(PointerEventData)
      qualifiedName:
        CSharp: Joystick.OnDrag(PointerEventData)
        VB: Joystick.OnDrag(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDrag
        path: ''
        startLine: 146
      syntax:
        content:
          CSharp: public void OnDrag(PointerEventData eventData)
          VB: Public Sub OnDrag(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.Joystick.OnDrag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      commentId: M:Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      language: CSharp
      name:
        CSharp: HandleInput(Single, Vector2, Vector2, Camera)
        VB: HandleInput(Single, Vector2, Vector2, Camera)
      nameWithType:
        CSharp: Joystick.HandleInput(Single, Vector2, Vector2, Camera)
        VB: Joystick.HandleInput(Single, Vector2, Vector2, Camera)
      qualifiedName:
        CSharp: Joystick.HandleInput(System.Single, Vector2, Vector2, Camera)
        VB: Joystick.HandleInput(System.Single, Vector2, Vector2, Camera)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HandleInput
        path: ''
        startLine: 160
      syntax:
        content:
          CSharp: protected virtual void HandleInput(float magnitude, Vector2 normalised, Vector2 radius, Camera cam)
          VB: Protected Overridable Sub HandleInput(magnitude As Single, normalised As Vector2, radius As Vector2, cam As Camera)
        parameters:
        - id: magnitude
          type: System.Single
        - id: normalised
          type: Global.Vector2
        - id: radius
          type: Global.Vector2
        - id: cam
          type: Global.Camera
      overload: Global.Joystick.HandleInput*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.Joystick.OnPointerUp(PointerEventData)
      commentId: M:Global.Joystick.OnPointerUp(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerUp(PointerEventData)
        VB: OnPointerUp(PointerEventData)
      nameWithType:
        CSharp: Joystick.OnPointerUp(PointerEventData)
        VB: Joystick.OnPointerUp(PointerEventData)
      qualifiedName:
        CSharp: Joystick.OnPointerUp(PointerEventData)
        VB: Joystick.OnPointerUp(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerUp
        path: ''
        startLine: 213
      syntax:
        content:
          CSharp: public virtual void OnPointerUp(PointerEventData eventData)
          VB: Public Overridable Sub OnPointerUp(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.Joystick.OnPointerUp*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
      commentId: M:Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
      language: CSharp
      name:
        CSharp: ScreenPointToAnchoredPosition(Vector2)
        VB: ScreenPointToAnchoredPosition(Vector2)
      nameWithType:
        CSharp: Joystick.ScreenPointToAnchoredPosition(Vector2)
        VB: Joystick.ScreenPointToAnchoredPosition(Vector2)
      qualifiedName:
        CSharp: Joystick.ScreenPointToAnchoredPosition(Vector2)
        VB: Joystick.ScreenPointToAnchoredPosition(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ScreenPointToAnchoredPosition
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: protected Vector2 ScreenPointToAnchoredPosition(Vector2 screenPosition)
          VB: Protected Function ScreenPointToAnchoredPosition(screenPosition As Vector2) As Vector2
        parameters:
        - id: screenPosition
          type: Global.Vector2
        return:
          type: Global.Vector2
      overload: Global.Joystick.ScreenPointToAnchoredPosition*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: Global.AxisOptions
    commentId: T:Global.AxisOptions
    language: CSharp
    name:
      CSharp: AxisOptions
      VB: AxisOptions
    nameWithType:
      CSharp: AxisOptions
      VB: AxisOptions
    qualifiedName:
      CSharp: AxisOptions
      VB: AxisOptions
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AxisOptions
      path: ''
      startLine: 231
    syntax:
      content:
        CSharp: public enum AxisOptions
        VB: Public Enum AxisOptions
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.AxisOptions.Both
      commentId: F:Global.AxisOptions.Both
      language: CSharp
      name:
        CSharp: Both
        VB: Both
      nameWithType:
        CSharp: AxisOptions.Both
        VB: AxisOptions.Both
      qualifiedName:
        CSharp: AxisOptions.Both
        VB: AxisOptions.Both
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Both
        path: ''
        startLine: 231
      syntax:
        content:
          CSharp: Both = 0
          VB: Both = 0
        return:
          type: Global.AxisOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AxisOptions.Horizontal
      commentId: F:Global.AxisOptions.Horizontal
      language: CSharp
      name:
        CSharp: Horizontal
        VB: Horizontal
      nameWithType:
        CSharp: AxisOptions.Horizontal
        VB: AxisOptions.Horizontal
      qualifiedName:
        CSharp: AxisOptions.Horizontal
        VB: AxisOptions.Horizontal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Horizontal
        path: ''
        startLine: 231
      syntax:
        content:
          CSharp: Horizontal = 1
          VB: Horizontal = 1
        return:
          type: Global.AxisOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AxisOptions.Vertical
      commentId: F:Global.AxisOptions.Vertical
      language: CSharp
      name:
        CSharp: Vertical
        VB: Vertical
      nameWithType:
        CSharp: AxisOptions.Vertical
        VB: AxisOptions.Vertical
      qualifiedName:
        CSharp: AxisOptions.Vertical
        VB: AxisOptions.Vertical
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Vertical
        path: ''
        startLine: 231
      syntax:
        content:
          CSharp: Vertical = 2
          VB: Vertical = 2
        return:
          type: Global.AxisOptions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.DynamicJoystickEditor
    commentId: T:Global.DynamicJoystickEditor
    language: CSharp
    name:
      CSharp: DynamicJoystickEditor
      VB: DynamicJoystickEditor
    nameWithType:
      CSharp: DynamicJoystickEditor
      VB: DynamicJoystickEditor
    qualifiedName:
      CSharp: DynamicJoystickEditor
      VB: DynamicJoystickEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DynamicJoystickEditor
      path: ''
      startLine: 237
    syntax:
      content:
        CSharp: 'public class DynamicJoystickEditor : JoystickEditor'
        VB: >-
          Public Class DynamicJoystickEditor

              Inherits JoystickEditor
    inheritance:
    - System.Object
    - Global.JoystickEditor
    inheritedMembers:
    - Global.JoystickEditor.background
    - Global.JoystickEditor.center
    - Global.JoystickEditor.DrawComponents
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.DynamicJoystickEditor.OnEnable
      commentId: M:Global.DynamicJoystickEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: DynamicJoystickEditor.OnEnable()
        VB: DynamicJoystickEditor.OnEnable()
      qualifiedName:
        CSharp: DynamicJoystickEditor.OnEnable()
        VB: DynamicJoystickEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 242
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.DynamicJoystickEditor.OnEnable*
      overridden: Global.JoystickEditor.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.DynamicJoystickEditor.OnInspectorGUI
      commentId: M:Global.DynamicJoystickEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: DynamicJoystickEditor.OnInspectorGUI()
        VB: DynamicJoystickEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: DynamicJoystickEditor.OnInspectorGUI()
        VB: DynamicJoystickEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 248
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.DynamicJoystickEditor.OnInspectorGUI*
      overridden: Global.JoystickEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.DynamicJoystickEditor.DrawValues
      commentId: M:Global.DynamicJoystickEditor.DrawValues
      language: CSharp
      name:
        CSharp: DrawValues()
        VB: DrawValues()
      nameWithType:
        CSharp: DynamicJoystickEditor.DrawValues()
        VB: DynamicJoystickEditor.DrawValues()
      qualifiedName:
        CSharp: DynamicJoystickEditor.DrawValues()
        VB: DynamicJoystickEditor.DrawValues()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DrawValues
        path: ''
        startLine: 261
      syntax:
        content:
          CSharp: protected override void DrawValues()
          VB: Protected Overrides Sub DrawValues
      overload: Global.DynamicJoystickEditor.DrawValues*
      overridden: Global.JoystickEditor.DrawValues
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Global.FloatingJoystickEditor
    commentId: T:Global.FloatingJoystickEditor
    language: CSharp
    name:
      CSharp: FloatingJoystickEditor
      VB: FloatingJoystickEditor
    nameWithType:
      CSharp: FloatingJoystickEditor
      VB: FloatingJoystickEditor
    qualifiedName:
      CSharp: FloatingJoystickEditor
      VB: FloatingJoystickEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FloatingJoystickEditor
      path: ''
      startLine: 272
    syntax:
      content:
        CSharp: 'public class FloatingJoystickEditor : JoystickEditor'
        VB: >-
          Public Class FloatingJoystickEditor

              Inherits JoystickEditor
    inheritance:
    - System.Object
    - Global.JoystickEditor
    inheritedMembers:
    - Global.JoystickEditor.background
    - Global.JoystickEditor.center
    - Global.JoystickEditor.OnEnable
    - Global.JoystickEditor.DrawValues
    - Global.JoystickEditor.DrawComponents
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FloatingJoystickEditor.OnInspectorGUI
      commentId: M:Global.FloatingJoystickEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: FloatingJoystickEditor.OnInspectorGUI()
        VB: FloatingJoystickEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: FloatingJoystickEditor.OnInspectorGUI()
        VB: FloatingJoystickEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 275
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.FloatingJoystickEditor.OnInspectorGUI*
      overridden: Global.JoystickEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.JoystickEditor
    commentId: T:Global.JoystickEditor
    language: CSharp
    name:
      CSharp: JoystickEditor
      VB: JoystickEditor
    nameWithType:
      CSharp: JoystickEditor
      VB: JoystickEditor
    qualifiedName:
      CSharp: JoystickEditor
      VB: JoystickEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: JoystickEditor
      path: ''
      startLine: 293
    syntax:
      content:
        CSharp: 'public class JoystickEditor : Editor'
        VB: >-
          Public Class JoystickEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.JoystickEditor.background
      commentId: F:Global.JoystickEditor.background
      language: CSharp
      name:
        CSharp: background
        VB: background
      nameWithType:
        CSharp: JoystickEditor.background
        VB: JoystickEditor.background
      qualifiedName:
        CSharp: JoystickEditor.background
        VB: JoystickEditor.background
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: background
        path: ''
        startLine: 301
      syntax:
        content:
          CSharp: protected SerializedProperty background
          VB: Protected background As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.JoystickEditor.center
      commentId: F:Global.JoystickEditor.center
      language: CSharp
      name:
        CSharp: center
        VB: center
      nameWithType:
        CSharp: JoystickEditor.center
        VB: JoystickEditor.center
      qualifiedName:
        CSharp: JoystickEditor.center
        VB: JoystickEditor.center
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: center
        path: ''
        startLine: 304
      syntax:
        content:
          CSharp: protected Vector2 center
          VB: Protected center As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.JoystickEditor.OnEnable
      commentId: M:Global.JoystickEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: JoystickEditor.OnEnable()
        VB: JoystickEditor.OnEnable()
      qualifiedName:
        CSharp: JoystickEditor.OnEnable()
        VB: JoystickEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 306
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: Global.JoystickEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.JoystickEditor.OnInspectorGUI
      commentId: M:Global.JoystickEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: JoystickEditor.OnInspectorGUI()
        VB: JoystickEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: JoystickEditor.OnInspectorGUI()
        VB: JoystickEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 317
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.JoystickEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.JoystickEditor.DrawValues
      commentId: M:Global.JoystickEditor.DrawValues
      language: CSharp
      name:
        CSharp: DrawValues()
        VB: DrawValues()
      nameWithType:
        CSharp: JoystickEditor.DrawValues()
        VB: JoystickEditor.DrawValues()
      qualifiedName:
        CSharp: JoystickEditor.DrawValues()
        VB: JoystickEditor.DrawValues()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DrawValues
        path: ''
        startLine: 337
      syntax:
        content:
          CSharp: protected virtual void DrawValues()
          VB: Protected Overridable Sub DrawValues
      overload: Global.JoystickEditor.DrawValues*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Global.JoystickEditor.DrawComponents
      commentId: M:Global.JoystickEditor.DrawComponents
      language: CSharp
      name:
        CSharp: DrawComponents()
        VB: DrawComponents()
      nameWithType:
        CSharp: JoystickEditor.DrawComponents()
        VB: JoystickEditor.DrawComponents()
      qualifiedName:
        CSharp: JoystickEditor.DrawComponents()
        VB: JoystickEditor.DrawComponents()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DrawComponents
        path: ''
        startLine: 346
      syntax:
        content:
          CSharp: protected virtual void DrawComponents()
          VB: Protected Overridable Sub DrawComponents
      overload: Global.JoystickEditor.DrawComponents*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: Global.VariableJoystickEditor
    commentId: T:Global.VariableJoystickEditor
    language: CSharp
    name:
      CSharp: VariableJoystickEditor
      VB: VariableJoystickEditor
    nameWithType:
      CSharp: VariableJoystickEditor
      VB: VariableJoystickEditor
    qualifiedName:
      CSharp: VariableJoystickEditor
      VB: VariableJoystickEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VariableJoystickEditor
      path: ''
      startLine: 358
    syntax:
      content:
        CSharp: 'public class VariableJoystickEditor : JoystickEditor'
        VB: >-
          Public Class VariableJoystickEditor

              Inherits JoystickEditor
    inheritance:
    - System.Object
    - Global.JoystickEditor
    inheritedMembers:
    - Global.JoystickEditor.background
    - Global.JoystickEditor.center
    - Global.JoystickEditor.DrawComponents
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.VariableJoystickEditor.OnEnable
      commentId: M:Global.VariableJoystickEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: VariableJoystickEditor.OnEnable()
        VB: VariableJoystickEditor.OnEnable()
      qualifiedName:
        CSharp: VariableJoystickEditor.OnEnable()
        VB: VariableJoystickEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 364
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.VariableJoystickEditor.OnEnable*
      overridden: Global.JoystickEditor.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.VariableJoystickEditor.OnInspectorGUI
      commentId: M:Global.VariableJoystickEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: VariableJoystickEditor.OnInspectorGUI()
        VB: VariableJoystickEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: VariableJoystickEditor.OnInspectorGUI()
        VB: VariableJoystickEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 371
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.VariableJoystickEditor.OnInspectorGUI*
      overridden: Global.JoystickEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.VariableJoystickEditor.DrawValues
      commentId: M:Global.VariableJoystickEditor.DrawValues
      language: CSharp
      name:
        CSharp: DrawValues()
        VB: DrawValues()
      nameWithType:
        CSharp: VariableJoystickEditor.DrawValues()
        VB: VariableJoystickEditor.DrawValues()
      qualifiedName:
        CSharp: VariableJoystickEditor.DrawValues()
        VB: VariableJoystickEditor.DrawValues()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DrawValues
        path: ''
        startLine: 382
      syntax:
        content:
          CSharp: protected override void DrawValues()
          VB: Protected Overrides Sub DrawValues
      overload: Global.VariableJoystickEditor.DrawValues*
      overridden: Global.JoystickEditor.DrawValues
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Global.DynamicJoystick
    commentId: T:Global.DynamicJoystick
    language: CSharp
    name:
      CSharp: DynamicJoystick
      VB: DynamicJoystick
    nameWithType:
      CSharp: DynamicJoystick
      VB: DynamicJoystick
    qualifiedName:
      CSharp: DynamicJoystick
      VB: DynamicJoystick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DynamicJoystick
      path: ''
      startLine: 394
    syntax:
      content:
        CSharp: 'public class DynamicJoystick : Joystick, IPointerDownHandler, IDragHandler, IPointerUpHandler'
        VB: >-
          Public Class DynamicJoystick

              Inherits Joystick

              Implements IPointerDownHandler, IDragHandler, IPointerUpHandler
    inheritance:
    - System.Object
    - Global.Joystick
    implements:
    - Global.IPointerDownHandler
    - Global.IDragHandler
    - Global.IPointerUpHandler
    inheritedMembers:
    - Global.Joystick.Horizontal
    - Global.Joystick.Vertical
    - Global.Joystick.Direction
    - Global.Joystick.HandleRange
    - Global.Joystick.DeadZone
    - Global.Joystick.AxisOptions
    - Global.Joystick.SnapX
    - Global.Joystick.SnapY
    - Global.Joystick.background
    - Global.Joystick.OnDrag(PointerEventData)
    - Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.DynamicJoystick.MoveThreshold
      commentId: P:Global.DynamicJoystick.MoveThreshold
      language: CSharp
      name:
        CSharp: MoveThreshold
        VB: MoveThreshold
      nameWithType:
        CSharp: DynamicJoystick.MoveThreshold
        VB: DynamicJoystick.MoveThreshold
      qualifiedName:
        CSharp: DynamicJoystick.MoveThreshold
        VB: DynamicJoystick.MoveThreshold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveThreshold
        path: ''
        startLine: 396
      syntax:
        content:
          CSharp: public float MoveThreshold { get; set; }
          VB: Public Property MoveThreshold As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.DynamicJoystick.MoveThreshold*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.DynamicJoystick.Start
      commentId: M:Global.DynamicJoystick.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: DynamicJoystick.Start()
        VB: DynamicJoystick.Start()
      qualifiedName:
        CSharp: DynamicJoystick.Start()
        VB: DynamicJoystick.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 400
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: Global.DynamicJoystick.Start*
      overridden: Global.Joystick.Start
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.DynamicJoystick.OnPointerDown(PointerEventData)
      commentId: M:Global.DynamicJoystick.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: DynamicJoystick.OnPointerDown(PointerEventData)
        VB: DynamicJoystick.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: DynamicJoystick.OnPointerDown(PointerEventData)
        VB: DynamicJoystick.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 407
      syntax:
        content:
          CSharp: public override void OnPointerDown(PointerEventData eventData)
          VB: Public Overrides Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.DynamicJoystick.OnPointerDown*
      overridden: Global.Joystick.OnPointerDown(PointerEventData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.DynamicJoystick.OnPointerUp(PointerEventData)
      commentId: M:Global.DynamicJoystick.OnPointerUp(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerUp(PointerEventData)
        VB: OnPointerUp(PointerEventData)
      nameWithType:
        CSharp: DynamicJoystick.OnPointerUp(PointerEventData)
        VB: DynamicJoystick.OnPointerUp(PointerEventData)
      qualifiedName:
        CSharp: DynamicJoystick.OnPointerUp(PointerEventData)
        VB: DynamicJoystick.OnPointerUp(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerUp
        path: ''
        startLine: 414
      syntax:
        content:
          CSharp: public override void OnPointerUp(PointerEventData eventData)
          VB: Public Overrides Sub OnPointerUp(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.DynamicJoystick.OnPointerUp*
      overridden: Global.Joystick.OnPointerUp(PointerEventData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.DynamicJoystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      commentId: M:Global.DynamicJoystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      language: CSharp
      name:
        CSharp: HandleInput(Single, Vector2, Vector2, Camera)
        VB: HandleInput(Single, Vector2, Vector2, Camera)
      nameWithType:
        CSharp: DynamicJoystick.HandleInput(Single, Vector2, Vector2, Camera)
        VB: DynamicJoystick.HandleInput(Single, Vector2, Vector2, Camera)
      qualifiedName:
        CSharp: DynamicJoystick.HandleInput(System.Single, Vector2, Vector2, Camera)
        VB: DynamicJoystick.HandleInput(System.Single, Vector2, Vector2, Camera)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HandleInput
        path: ''
        startLine: 420
      syntax:
        content:
          CSharp: protected override void HandleInput(float magnitude, Vector2 normalised, Vector2 radius, Camera cam)
          VB: Protected Overrides Sub HandleInput(magnitude As Single, normalised As Vector2, radius As Vector2, cam As Camera)
        parameters:
        - id: magnitude
          type: System.Single
        - id: normalised
          type: Global.Vector2
        - id: radius
          type: Global.Vector2
        - id: cam
          type: Global.Camera
      overload: Global.DynamicJoystick.HandleInput*
      overridden: Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Global.FixedJoystick
    commentId: T:Global.FixedJoystick
    language: CSharp
    name:
      CSharp: FixedJoystick
      VB: FixedJoystick
    nameWithType:
      CSharp: FixedJoystick
      VB: FixedJoystick
    qualifiedName:
      CSharp: FixedJoystick
      VB: FixedJoystick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FixedJoystick
      path: ''
      startLine: 434
    syntax:
      content:
        CSharp: 'public class FixedJoystick : Joystick, IPointerDownHandler, IDragHandler, IPointerUpHandler'
        VB: >-
          Public Class FixedJoystick

              Inherits Joystick

              Implements IPointerDownHandler, IDragHandler, IPointerUpHandler
    inheritance:
    - System.Object
    - Global.Joystick
    implements:
    - Global.IPointerDownHandler
    - Global.IDragHandler
    - Global.IPointerUpHandler
    inheritedMembers:
    - Global.Joystick.Horizontal
    - Global.Joystick.Vertical
    - Global.Joystick.Direction
    - Global.Joystick.HandleRange
    - Global.Joystick.DeadZone
    - Global.Joystick.AxisOptions
    - Global.Joystick.SnapX
    - Global.Joystick.SnapY
    - Global.Joystick.background
    - Global.Joystick.Start
    - Global.Joystick.OnPointerDown(PointerEventData)
    - Global.Joystick.OnDrag(PointerEventData)
    - Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
    - Global.Joystick.OnPointerUp(PointerEventData)
    - Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.FloatingJoystick
    commentId: T:Global.FloatingJoystick
    language: CSharp
    name:
      CSharp: FloatingJoystick
      VB: FloatingJoystick
    nameWithType:
      CSharp: FloatingJoystick
      VB: FloatingJoystick
    qualifiedName:
      CSharp: FloatingJoystick
      VB: FloatingJoystick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FloatingJoystick
      path: ''
      startLine: 443
    syntax:
      content:
        CSharp: 'public class FloatingJoystick : Joystick, IPointerDownHandler, IDragHandler, IPointerUpHandler'
        VB: >-
          Public Class FloatingJoystick

              Inherits Joystick

              Implements IPointerDownHandler, IDragHandler, IPointerUpHandler
    inheritance:
    - System.Object
    - Global.Joystick
    implements:
    - Global.IPointerDownHandler
    - Global.IDragHandler
    - Global.IPointerUpHandler
    inheritedMembers:
    - Global.Joystick.Horizontal
    - Global.Joystick.Vertical
    - Global.Joystick.Direction
    - Global.Joystick.HandleRange
    - Global.Joystick.DeadZone
    - Global.Joystick.AxisOptions
    - Global.Joystick.SnapX
    - Global.Joystick.SnapY
    - Global.Joystick.background
    - Global.Joystick.OnDrag(PointerEventData)
    - Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
    - Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FloatingJoystick.Start
      commentId: M:Global.FloatingJoystick.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: FloatingJoystick.Start()
        VB: FloatingJoystick.Start()
      qualifiedName:
        CSharp: FloatingJoystick.Start()
        VB: FloatingJoystick.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 445
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: Global.FloatingJoystick.Start*
      overridden: Global.Joystick.Start
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.FloatingJoystick.OnPointerDown(PointerEventData)
      commentId: M:Global.FloatingJoystick.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: FloatingJoystick.OnPointerDown(PointerEventData)
        VB: FloatingJoystick.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: FloatingJoystick.OnPointerDown(PointerEventData)
        VB: FloatingJoystick.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 451
      syntax:
        content:
          CSharp: public override void OnPointerDown(PointerEventData eventData)
          VB: Public Overrides Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.FloatingJoystick.OnPointerDown*
      overridden: Global.Joystick.OnPointerDown(PointerEventData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.FloatingJoystick.OnPointerUp(PointerEventData)
      commentId: M:Global.FloatingJoystick.OnPointerUp(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerUp(PointerEventData)
        VB: OnPointerUp(PointerEventData)
      nameWithType:
        CSharp: FloatingJoystick.OnPointerUp(PointerEventData)
        VB: FloatingJoystick.OnPointerUp(PointerEventData)
      qualifiedName:
        CSharp: FloatingJoystick.OnPointerUp(PointerEventData)
        VB: FloatingJoystick.OnPointerUp(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerUp
        path: ''
        startLine: 458
      syntax:
        content:
          CSharp: public override void OnPointerUp(PointerEventData eventData)
          VB: Public Overrides Sub OnPointerUp(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.FloatingJoystick.OnPointerUp*
      overridden: Global.Joystick.OnPointerUp(PointerEventData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.VariableJoystick
    commentId: T:Global.VariableJoystick
    language: CSharp
    name:
      CSharp: VariableJoystick
      VB: VariableJoystick
    nameWithType:
      CSharp: VariableJoystick
      VB: VariableJoystick
    qualifiedName:
      CSharp: VariableJoystick
      VB: VariableJoystick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VariableJoystick
      path: ''
      startLine: 469
    syntax:
      content:
        CSharp: 'public class VariableJoystick : Joystick, IPointerDownHandler, IDragHandler, IPointerUpHandler'
        VB: >-
          Public Class VariableJoystick

              Inherits Joystick

              Implements IPointerDownHandler, IDragHandler, IPointerUpHandler
    inheritance:
    - System.Object
    - Global.Joystick
    implements:
    - Global.IPointerDownHandler
    - Global.IDragHandler
    - Global.IPointerUpHandler
    inheritedMembers:
    - Global.Joystick.Horizontal
    - Global.Joystick.Vertical
    - Global.Joystick.Direction
    - Global.Joystick.HandleRange
    - Global.Joystick.DeadZone
    - Global.Joystick.AxisOptions
    - Global.Joystick.SnapX
    - Global.Joystick.SnapY
    - Global.Joystick.background
    - Global.Joystick.OnDrag(PointerEventData)
    - Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.VariableJoystick.MoveThreshold
      commentId: P:Global.VariableJoystick.MoveThreshold
      language: CSharp
      name:
        CSharp: MoveThreshold
        VB: MoveThreshold
      nameWithType:
        CSharp: VariableJoystick.MoveThreshold
        VB: VariableJoystick.MoveThreshold
      qualifiedName:
        CSharp: VariableJoystick.MoveThreshold
        VB: VariableJoystick.MoveThreshold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveThreshold
        path: ''
        startLine: 471
      syntax:
        content:
          CSharp: public float MoveThreshold { get; set; }
          VB: Public Property MoveThreshold As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.VariableJoystick.MoveThreshold*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.VariableJoystick.SetMode(JoystickType)
      commentId: M:Global.VariableJoystick.SetMode(JoystickType)
      language: CSharp
      name:
        CSharp: SetMode(JoystickType)
        VB: SetMode(JoystickType)
      nameWithType:
        CSharp: VariableJoystick.SetMode(JoystickType)
        VB: VariableJoystick.SetMode(JoystickType)
      qualifiedName:
        CSharp: VariableJoystick.SetMode(JoystickType)
        VB: VariableJoystick.SetMode(JoystickType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetMode
        path: ''
        startLine: 478
      syntax:
        content:
          CSharp: public void SetMode(JoystickType joystickType)
          VB: Public Sub SetMode(joystickType As JoystickType)
        parameters:
        - id: joystickType
          type: Global.JoystickType
      overload: Global.VariableJoystick.SetMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VariableJoystick.Start
      commentId: M:Global.VariableJoystick.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: VariableJoystick.Start()
        VB: VariableJoystick.Start()
      qualifiedName:
        CSharp: VariableJoystick.Start()
        VB: VariableJoystick.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 490
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: Global.VariableJoystick.Start*
      overridden: Global.Joystick.Start
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.VariableJoystick.OnPointerDown(PointerEventData)
      commentId: M:Global.VariableJoystick.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: VariableJoystick.OnPointerDown(PointerEventData)
        VB: VariableJoystick.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: VariableJoystick.OnPointerDown(PointerEventData)
        VB: VariableJoystick.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 497
      syntax:
        content:
          CSharp: public override void OnPointerDown(PointerEventData eventData)
          VB: Public Overrides Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.VariableJoystick.OnPointerDown*
      overridden: Global.Joystick.OnPointerDown(PointerEventData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.VariableJoystick.OnPointerUp(PointerEventData)
      commentId: M:Global.VariableJoystick.OnPointerUp(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerUp(PointerEventData)
        VB: OnPointerUp(PointerEventData)
      nameWithType:
        CSharp: VariableJoystick.OnPointerUp(PointerEventData)
        VB: VariableJoystick.OnPointerUp(PointerEventData)
      qualifiedName:
        CSharp: VariableJoystick.OnPointerUp(PointerEventData)
        VB: VariableJoystick.OnPointerUp(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerUp
        path: ''
        startLine: 507
      syntax:
        content:
          CSharp: public override void OnPointerUp(PointerEventData eventData)
          VB: Public Overrides Sub OnPointerUp(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.VariableJoystick.OnPointerUp*
      overridden: Global.Joystick.OnPointerUp(PointerEventData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.VariableJoystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      commentId: M:Global.VariableJoystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      language: CSharp
      name:
        CSharp: HandleInput(Single, Vector2, Vector2, Camera)
        VB: HandleInput(Single, Vector2, Vector2, Camera)
      nameWithType:
        CSharp: VariableJoystick.HandleInput(Single, Vector2, Vector2, Camera)
        VB: VariableJoystick.HandleInput(Single, Vector2, Vector2, Camera)
      qualifiedName:
        CSharp: VariableJoystick.HandleInput(System.Single, Vector2, Vector2, Camera)
        VB: VariableJoystick.HandleInput(System.Single, Vector2, Vector2, Camera)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HandleInput
        path: ''
        startLine: 515
      syntax:
        content:
          CSharp: protected override void HandleInput(float magnitude, Vector2 normalised, Vector2 radius, Camera cam)
          VB: Protected Overrides Sub HandleInput(magnitude As Single, normalised As Vector2, radius As Vector2, cam As Camera)
        parameters:
        - id: magnitude
          type: System.Single
        - id: normalised
          type: Global.Vector2
        - id: radius
          type: Global.Vector2
        - id: cam
          type: Global.Camera
      overload: Global.VariableJoystick.HandleInput*
      overridden: Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Global.JoystickType
    commentId: T:Global.JoystickType
    language: CSharp
    name:
      CSharp: JoystickType
      VB: JoystickType
    nameWithType:
      CSharp: JoystickType
      VB: JoystickType
    qualifiedName:
      CSharp: JoystickType
      VB: JoystickType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: JoystickType
      path: ''
      startLine: 526
    syntax:
      content:
        CSharp: public enum JoystickType
        VB: Public Enum JoystickType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.JoystickType.Fixed
      commentId: F:Global.JoystickType.Fixed
      language: CSharp
      name:
        CSharp: Fixed
        VB: Fixed
      nameWithType:
        CSharp: JoystickType.Fixed
        VB: JoystickType.Fixed
      qualifiedName:
        CSharp: JoystickType.Fixed
        VB: JoystickType.Fixed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Fixed
        path: ''
        startLine: 526
      syntax:
        content:
          CSharp: Fixed = 0
          VB: Fixed = 0
        return:
          type: Global.JoystickType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.JoystickType.Floating
      commentId: F:Global.JoystickType.Floating
      language: CSharp
      name:
        CSharp: Floating
        VB: Floating
      nameWithType:
        CSharp: JoystickType.Floating
        VB: JoystickType.Floating
      qualifiedName:
        CSharp: JoystickType.Floating
        VB: JoystickType.Floating
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Floating
        path: ''
        startLine: 526
      syntax:
        content:
          CSharp: Floating = 1
          VB: Floating = 1
        return:
          type: Global.JoystickType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.JoystickType.Dynamic
      commentId: F:Global.JoystickType.Dynamic
      language: CSharp
      name:
        CSharp: Dynamic
        VB: Dynamic
      nameWithType:
        CSharp: JoystickType.Dynamic
        VB: JoystickType.Dynamic
      qualifiedName:
        CSharp: JoystickType.Dynamic
        VB: JoystickType.Dynamic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Dynamic
        path: ''
        startLine: 526
      syntax:
        content:
          CSharp: Dynamic = 2
          VB: Dynamic = 2
        return:
          type: Global.JoystickType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.VariableRotationJoystick
    commentId: T:Global.VariableRotationJoystick
    language: CSharp
    name:
      CSharp: VariableRotationJoystick
      VB: VariableRotationJoystick
    nameWithType:
      CSharp: VariableRotationJoystick
      VB: VariableRotationJoystick
    qualifiedName:
      CSharp: VariableRotationJoystick
      VB: VariableRotationJoystick
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VariableRotationJoystick
      path: ''
      startLine: 531
    syntax:
      content:
        CSharp: 'public class VariableRotationJoystick : Joystick, IPointerDownHandler, IDragHandler, IPointerUpHandler'
        VB: >-
          Public Class VariableRotationJoystick

              Inherits Joystick

              Implements IPointerDownHandler, IDragHandler, IPointerUpHandler
    inheritance:
    - System.Object
    - Global.Joystick
    implements:
    - Global.IPointerDownHandler
    - Global.IDragHandler
    - Global.IPointerUpHandler
    inheritedMembers:
    - Global.Joystick.Horizontal
    - Global.Joystick.Vertical
    - Global.Joystick.Direction
    - Global.Joystick.HandleRange
    - Global.Joystick.DeadZone
    - Global.Joystick.AxisOptions
    - Global.Joystick.SnapX
    - Global.Joystick.SnapY
    - Global.Joystick.background
    - Global.Joystick.Start
    - Global.Joystick.OnPointerDown(PointerEventData)
    - Global.Joystick.OnDrag(PointerEventData)
    - Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
    - Global.Joystick.OnPointerUp(PointerEventData)
    - Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.SliderValue
    commentId: T:Global.SliderValue
    language: CSharp
    name:
      CSharp: SliderValue
      VB: SliderValue
    nameWithType:
      CSharp: SliderValue
      VB: SliderValue
    qualifiedName:
      CSharp: SliderValue
      VB: SliderValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SliderValue
      path: ''
      startLine: 4485
    syntax:
      content:
        CSharp: 'public class SliderValue : MonoBehaviour'
        VB: >-
          Public Class SliderValue

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SliderValue.valueupdate(System.Single)
      commentId: M:Global.SliderValue.valueupdate(System.Single)
      language: CSharp
      name:
        CSharp: valueupdate(Single)
        VB: valueupdate(Single)
      nameWithType:
        CSharp: SliderValue.valueupdate(Single)
        VB: SliderValue.valueupdate(Single)
      qualifiedName:
        CSharp: SliderValue.valueupdate(System.Single)
        VB: SliderValue.valueupdate(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: valueupdate
        path: ''
        startLine: 4493
      syntax:
        content:
          CSharp: public void valueupdate(float value)
          VB: Public Sub valueupdate(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: Global.SliderValue.valueupdate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TechXR.Core.Editor
  commentId: N:TechXR.Core.Editor
  language: CSharp
  name:
    CSharp: TechXR.Core.Editor
    VB: TechXR.Core.Editor
  nameWithType:
    CSharp: TechXR.Core.Editor
    VB: TechXR.Core.Editor
  qualifiedName:
    CSharp: TechXR.Core.Editor
    VB: TechXR.Core.Editor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TechXR.Core.Editor.SenseManagerEditor
    commentId: T:TechXR.Core.Editor.SenseManagerEditor
    language: CSharp
    name:
      CSharp: SenseManagerEditor
      VB: SenseManagerEditor
    nameWithType:
      CSharp: SenseManagerEditor
      VB: SenseManagerEditor
    qualifiedName:
      CSharp: TechXR.Core.Editor.SenseManagerEditor
      VB: TechXR.Core.Editor.SenseManagerEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Editor
    source:
      id: SenseManagerEditor
      path: ''
      startLine: 568
    syntax:
      content:
        CSharp: 'public class SenseManagerEditor : UnityEditor.Editor'
        VB: >-
          Public Class SenseManagerEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI
      commentId: M:TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: SenseManagerEditor.OnInspectorGUI()
        VB: SenseManagerEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI()
        VB: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 598
      summary: "\nAdd the button to auto-populate the class objects\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TechXR.Core.Editor.SenseUIElements
    commentId: T:TechXR.Core.Editor.SenseUIElements
    language: CSharp
    name:
      CSharp: SenseUIElements
      VB: SenseUIElements
    nameWithType:
      CSharp: SenseUIElements
      VB: SenseUIElements
    qualifiedName:
      CSharp: TechXR.Core.Editor.SenseUIElements
      VB: TechXR.Core.Editor.SenseUIElements
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Editor
    source:
      id: SenseUIElements
      path: ''
      startLine: 620
    syntax:
      content:
        CSharp: 'public class SenseUIElements : EditorWindow'
        VB: >-
          Public Class SenseUIElements

              Inherits EditorWindow
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: TechXR.Core.Editor.TechXR
    commentId: T:TechXR.Core.Editor.TechXR
    language: CSharp
    name:
      CSharp: TechXR
      VB: TechXR
    nameWithType:
      CSharp: TechXR
      VB: TechXR
    qualifiedName:
      CSharp: TechXR.Core.Editor.TechXR
      VB: TechXR.Core.Editor.TechXR
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Editor
    source:
      id: TechXR
      path: ''
      startLine: 737
    syntax:
      content:
        CSharp: 'public class TechXR : EditorWindow'
        VB: >-
          Public Class TechXR

              Inherits EditorWindow
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Editor.TechXR.showUIElements
      commentId: F:TechXR.Core.Editor.TechXR.showUIElements
      language: CSharp
      name:
        CSharp: showUIElements
        VB: showUIElements
      nameWithType:
        CSharp: TechXR.showUIElements
        VB: TechXR.showUIElements
      qualifiedName:
        CSharp: TechXR.Core.Editor.TechXR.showUIElements
        VB: TechXR.Core.Editor.TechXR.showUIElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Editor
      source:
        id: showUIElements
        path: ''
        startLine: 778
      syntax:
        content:
          CSharp: protected static bool showUIElements
          VB: Protected Shared showUIElements As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        - static
        VB:
        - Protected
        - Shared
    - id: TechXR.Core.Editor.TechXR.ShowWindow
      commentId: M:TechXR.Core.Editor.TechXR.ShowWindow
      language: CSharp
      name:
        CSharp: ShowWindow()
        VB: ShowWindow()
      nameWithType:
        CSharp: TechXR.ShowWindow()
        VB: TechXR.ShowWindow()
      qualifiedName:
        CSharp: TechXR.Core.Editor.TechXR.ShowWindow()
        VB: TechXR.Core.Editor.TechXR.ShowWindow()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Editor
      source:
        id: ShowWindow
        path: ''
        startLine: 781
      syntax:
        content:
          CSharp: public static void ShowWindow()
          VB: Public Shared Sub ShowWindow
      overload: TechXR.Core.Editor.TechXR.ShowWindow*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Editor.TechXR.CreateLayer(System.String)
      commentId: M:TechXR.Core.Editor.TechXR.CreateLayer(System.String)
      language: CSharp
      name:
        CSharp: CreateLayer(String)
        VB: CreateLayer(String)
      nameWithType:
        CSharp: TechXR.CreateLayer(String)
        VB: TechXR.CreateLayer(String)
      qualifiedName:
        CSharp: TechXR.Core.Editor.TechXR.CreateLayer(System.String)
        VB: TechXR.Core.Editor.TechXR.CreateLayer(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Editor
      source:
        id: CreateLayer
        path: ''
        startLine: 1213
      syntax:
        content:
          CSharp: public static void CreateLayer(string name)
          VB: Public Shared Sub CreateLayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: TechXR.Core.Editor.TechXR.CreateLayer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: TechXR.Core.Sense
  commentId: N:TechXR.Core.Sense
  language: CSharp
  name:
    CSharp: TechXR.Core.Sense
    VB: TechXR.Core.Sense
  nameWithType:
    CSharp: TechXR.Core.Sense
    VB: TechXR.Core.Sense
  qualifiedName:
    CSharp: TechXR.Core.Sense
    VB: TechXR.Core.Sense
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TechXR.Core.Sense.IObject
    commentId: T:TechXR.Core.Sense.IObject
    language: CSharp
    name:
      CSharp: IObject
      VB: IObject
    nameWithType:
      CSharp: IObject
      VB: IObject
    qualifiedName:
      CSharp: TechXR.Core.Sense.IObject
      VB: TechXR.Core.Sense.IObject
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: IObject
      path: ''
      startLine: 1357
    syntax:
      content:
        CSharp: public interface IObject
        VB: Public Interface IObject
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: TechXR.Core.Sense.IObject.GetObjectPosition
      commentId: M:TechXR.Core.Sense.IObject.GetObjectPosition
      language: CSharp
      name:
        CSharp: GetObjectPosition()
        VB: GetObjectPosition()
      nameWithType:
        CSharp: IObject.GetObjectPosition()
        VB: IObject.GetObjectPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IObject.GetObjectPosition()
        VB: TechXR.Core.Sense.IObject.GetObjectPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectPosition
        path: ''
        startLine: 1363
      summary: "\nGet the Object global position\n"
      example: []
      syntax:
        content:
          CSharp: Vector3 GetObjectPosition()
          VB: Function GetObjectPosition As Vector3
        return:
          type: Global.Vector3
          description: ''
      overload: TechXR.Core.Sense.IObject.GetObjectPosition*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IObject.GetObjectLocalPosition
      commentId: M:TechXR.Core.Sense.IObject.GetObjectLocalPosition
      language: CSharp
      name:
        CSharp: GetObjectLocalPosition()
        VB: GetObjectLocalPosition()
      nameWithType:
        CSharp: IObject.GetObjectLocalPosition()
        VB: IObject.GetObjectLocalPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IObject.GetObjectLocalPosition()
        VB: TechXR.Core.Sense.IObject.GetObjectLocalPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectLocalPosition
        path: ''
        startLine: 1369
      summary: "\nGet the Object local position\n"
      example: []
      syntax:
        content:
          CSharp: Vector3 GetObjectLocalPosition()
          VB: Function GetObjectLocalPosition As Vector3
        return:
          type: Global.Vector3
          description: ''
      overload: TechXR.Core.Sense.IObject.GetObjectLocalPosition*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IObject.GetObjectRotation
      commentId: M:TechXR.Core.Sense.IObject.GetObjectRotation
      language: CSharp
      name:
        CSharp: GetObjectRotation()
        VB: GetObjectRotation()
      nameWithType:
        CSharp: IObject.GetObjectRotation()
        VB: IObject.GetObjectRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IObject.GetObjectRotation()
        VB: TechXR.Core.Sense.IObject.GetObjectRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectRotation
        path: ''
        startLine: 1375
      summary: "\nGet the Object rotation\n"
      example: []
      syntax:
        content:
          CSharp: Quaternion GetObjectRotation()
          VB: Function GetObjectRotation As Quaternion
        return:
          type: Global.Quaternion
          description: ''
      overload: TechXR.Core.Sense.IObject.GetObjectRotation*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IObject.GetObjectLocalRotation
      commentId: M:TechXR.Core.Sense.IObject.GetObjectLocalRotation
      language: CSharp
      name:
        CSharp: GetObjectLocalRotation()
        VB: GetObjectLocalRotation()
      nameWithType:
        CSharp: IObject.GetObjectLocalRotation()
        VB: IObject.GetObjectLocalRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IObject.GetObjectLocalRotation()
        VB: TechXR.Core.Sense.IObject.GetObjectLocalRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectLocalRotation
        path: ''
        startLine: 1381
      summary: "\nGet the Object local rotation\n"
      example: []
      syntax:
        content:
          CSharp: Quaternion GetObjectLocalRotation()
          VB: Function GetObjectLocalRotation As Quaternion
        return:
          type: Global.Quaternion
          description: ''
      overload: TechXR.Core.Sense.IObject.GetObjectLocalRotation*
      modifiers:
        CSharp: []
        VB: []
  - id: TechXR.Core.Sense.IXR
    commentId: T:TechXR.Core.Sense.IXR
    language: CSharp
    name:
      CSharp: IXR
      VB: IXR
    nameWithType:
      CSharp: IXR
      VB: IXR
    qualifiedName:
      CSharp: TechXR.Core.Sense.IXR
      VB: TechXR.Core.Sense.IXR
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: IXR
      path: ''
      startLine: 1391
    syntax:
      content:
        CSharp: public interface IXR
        VB: Public Interface IXR
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: TechXR.Core.Sense.IXR.GetCurrentObject
      commentId: M:TechXR.Core.Sense.IXR.GetCurrentObject
      language: CSharp
      name:
        CSharp: GetCurrentObject()
        VB: GetCurrentObject()
      nameWithType:
        CSharp: IXR.GetCurrentObject()
        VB: IXR.GetCurrentObject()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.GetCurrentObject()
        VB: TechXR.Core.Sense.IXR.GetCurrentObject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetCurrentObject
        path: ''
        startLine: 1397
      summary: "\nGet the current object hit by the raycast. Returns null if there is none.\n"
      example: []
      syntax:
        content:
          CSharp: GameObject GetCurrentObject()
          VB: Function GetCurrentObject As GameObject
        return:
          type: Global.GameObject
          description: ''
      overload: TechXR.Core.Sense.IXR.GetCurrentObject*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.GetController
      commentId: M:TechXR.Core.Sense.IXR.GetController
      language: CSharp
      name:
        CSharp: GetController()
        VB: GetController()
      nameWithType:
        CSharp: IXR.GetController()
        VB: IXR.GetController()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.GetController()
        VB: TechXR.Core.Sense.IXR.GetController()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetController
        path: ''
        startLine: 1403
      summary: "\nGet the controller gameobject on which contains the laser pointer\n"
      example: []
      syntax:
        content:
          CSharp: GameObject GetController()
          VB: Function GetController As GameObject
        return:
          type: Global.GameObject
          description: ''
      overload: TechXR.Core.Sense.IXR.GetController*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.GetXRPosition
      commentId: M:TechXR.Core.Sense.IXR.GetXRPosition
      language: CSharp
      name:
        CSharp: GetXRPosition()
        VB: GetXRPosition()
      nameWithType:
        CSharp: IXR.GetXRPosition()
        VB: IXR.GetXRPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.GetXRPosition()
        VB: TechXR.Core.Sense.IXR.GetXRPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRPosition
        path: ''
        startLine: 1409
      summary: "\nGet the controller global position\n"
      example: []
      syntax:
        content:
          CSharp: Vector3 GetXRPosition()
          VB: Function GetXRPosition As Vector3
        return:
          type: Global.Vector3
          description: ''
      overload: TechXR.Core.Sense.IXR.GetXRPosition*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.GetXRLocalPosition
      commentId: M:TechXR.Core.Sense.IXR.GetXRLocalPosition
      language: CSharp
      name:
        CSharp: GetXRLocalPosition()
        VB: GetXRLocalPosition()
      nameWithType:
        CSharp: IXR.GetXRLocalPosition()
        VB: IXR.GetXRLocalPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.GetXRLocalPosition()
        VB: TechXR.Core.Sense.IXR.GetXRLocalPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRLocalPosition
        path: ''
        startLine: 1415
      summary: "\nGet the controller local position\n"
      example: []
      syntax:
        content:
          CSharp: Vector3 GetXRLocalPosition()
          VB: Function GetXRLocalPosition As Vector3
        return:
          type: Global.Vector3
          description: ''
      overload: TechXR.Core.Sense.IXR.GetXRLocalPosition*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.GetXRRotation
      commentId: M:TechXR.Core.Sense.IXR.GetXRRotation
      language: CSharp
      name:
        CSharp: GetXRRotation()
        VB: GetXRRotation()
      nameWithType:
        CSharp: IXR.GetXRRotation()
        VB: IXR.GetXRRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.GetXRRotation()
        VB: TechXR.Core.Sense.IXR.GetXRRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRRotation
        path: ''
        startLine: 1421
      summary: "\nGet the controller rotation\n"
      example: []
      syntax:
        content:
          CSharp: Quaternion GetXRRotation()
          VB: Function GetXRRotation As Quaternion
        return:
          type: Global.Quaternion
          description: ''
      overload: TechXR.Core.Sense.IXR.GetXRRotation*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.GetXRLocalRotation
      commentId: M:TechXR.Core.Sense.IXR.GetXRLocalRotation
      language: CSharp
      name:
        CSharp: GetXRLocalRotation()
        VB: GetXRLocalRotation()
      nameWithType:
        CSharp: IXR.GetXRLocalRotation()
        VB: IXR.GetXRLocalRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.GetXRLocalRotation()
        VB: TechXR.Core.Sense.IXR.GetXRLocalRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRLocalRotation
        path: ''
        startLine: 1427
      summary: "\nGet the controller local rotation\n"
      example: []
      syntax:
        content:
          CSharp: Quaternion GetXRLocalRotation()
          VB: Function GetXRLocalRotation As Quaternion
        return:
          type: Global.Quaternion
          description: ''
      overload: TechXR.Core.Sense.IXR.GetXRLocalRotation*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject,System.Boolean)
      commentId: M:TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject,System.Boolean)
      language: CSharp
      name:
        CSharp: SetObjectInteractionMode(GameObject, Boolean)
        VB: SetObjectInteractionMode(GameObject, Boolean)
      nameWithType:
        CSharp: IXR.SetObjectInteractionMode(GameObject, Boolean)
        VB: IXR.SetObjectInteractionMode(GameObject, Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject, System.Boolean)
        VB: TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetObjectInteractionMode
        path: ''
        startLine: 1440
      summary: "\nSet raycast active-inactive state for the object\n"
      example: []
      syntax:
        content:
          CSharp: void SetObjectInteractionMode(GameObject gameObject, bool interactive)
          VB: Sub SetObjectInteractionMode(gameObject As GameObject, interactive As Boolean)
        parameters:
        - id: gameObject
          type: Global.GameObject
          description: ''
        - id: interactive
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.IXR.SetObjectInteractionMode*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      commentId: M:TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      language: CSharp
      name:
        CSharp: AddEventListener(SenseEvent, SenseEventDelegate)
        VB: AddEventListener(SenseEvent, SenseEventDelegate)
      nameWithType:
        CSharp: IXR.AddEventListener(SenseEvent, SenseEventDelegate)
        VB: IXR.AddEventListener(SenseEvent, SenseEventDelegate)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
        VB: TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: AddEventListener
        path: ''
        startLine: 1447
      summary: "\nAdd an event listener to the function\n"
      example: []
      syntax:
        content:
          CSharp: void AddEventListener(SenseEvent e, SenseEventDelegate listenerFunction)
          VB: Sub AddEventListener(e As SenseEvent, listenerFunction As SenseEventDelegate)
        parameters:
        - id: e
          type: TechXR.Core.Sense.SenseEvent
          description: ''
        - id: listenerFunction
          type: TechXR.Core.Sense.SenseEventDelegate
          description: ''
      overload: TechXR.Core.Sense.IXR.AddEventListener*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      commentId: M:TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      language: CSharp
      name:
        CSharp: RemoveEventListener(SenseEvent, SenseEventDelegate)
        VB: RemoveEventListener(SenseEvent, SenseEventDelegate)
      nameWithType:
        CSharp: IXR.RemoveEventListener(SenseEvent, SenseEventDelegate)
        VB: IXR.RemoveEventListener(SenseEvent, SenseEventDelegate)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
        VB: TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: RemoveEventListener
        path: ''
        startLine: 1454
      summary: "\nRemove event listener from a function\n"
      example: []
      syntax:
        content:
          CSharp: void RemoveEventListener(SenseEvent e, SenseEventDelegate listenerFunction)
          VB: Sub RemoveEventListener(e As SenseEvent, listenerFunction As SenseEventDelegate)
        parameters:
        - id: e
          type: TechXR.Core.Sense.SenseEvent
          description: ''
        - id: listenerFunction
          type: TechXR.Core.Sense.SenseEventDelegate
          description: ''
      overload: TechXR.Core.Sense.IXR.RemoveEventListener*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: TogglePointerDisplay(Boolean)
        VB: TogglePointerDisplay(Boolean)
      nameWithType:
        CSharp: IXR.TogglePointerDisplay(Boolean)
        VB: IXR.TogglePointerDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
        VB: TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TogglePointerDisplay
        path: ''
        startLine: 1462
      summary: "\nToggle VR Pointer display\n"
      example: []
      syntax:
        content:
          CSharp: void TogglePointerDisplay(bool flag)
          VB: Sub TogglePointerDisplay(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.IXR.TogglePointerDisplay*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      commentId: M:TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      language: CSharp
      name:
        CSharp: SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: SetPointerDisplayMode(Defs.PointerDisplayMode)
      nameWithType:
        CSharp: IXR.SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: IXR.SetPointerDisplayMode(Defs.PointerDisplayMode)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        VB: TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerDisplayMode
        path: ''
        startLine: 1468
      summary: "\nToggle display mode between pointer and teleportation\n"
      example: []
      syntax:
        content:
          CSharp: void SetPointerDisplayMode(Defs.PointerDisplayMode mode)
          VB: Sub SetPointerDisplayMode(mode As Defs.PointerDisplayMode)
        parameters:
        - id: mode
          type: TechXR.Core.Sense.Defs.PointerDisplayMode
          description: ''
      overload: TechXR.Core.Sense.IXR.SetPointerDisplayMode*
      modifiers:
        CSharp: []
        VB: []
    - id: TechXR.Core.Sense.IXR.SetPointerColor(Color)
      commentId: M:TechXR.Core.Sense.IXR.SetPointerColor(Color)
      language: CSharp
      name:
        CSharp: SetPointerColor(Color)
        VB: SetPointerColor(Color)
      nameWithType:
        CSharp: IXR.SetPointerColor(Color)
        VB: IXR.SetPointerColor(Color)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IXR.SetPointerColor(Color)
        VB: TechXR.Core.Sense.IXR.SetPointerColor(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerColor
        path: ''
        startLine: 1474
      summary: "\nSet laser pointer color\n"
      example: []
      syntax:
        content:
          CSharp: void SetPointerColor(Color color)
          VB: Sub SetPointerColor(color As Color)
        parameters:
        - id: color
          type: Global.Color
          description: ''
      overload: TechXR.Core.Sense.IXR.SetPointerColor*
      modifiers:
        CSharp: []
        VB: []
  - id: TechXR.Core.Sense.SenseInput
    commentId: T:TechXR.Core.Sense.SenseInput
    language: CSharp
    name:
      CSharp: SenseInput
      VB: SenseInput
    nameWithType:
      CSharp: SenseInput
      VB: SenseInput
    qualifiedName:
      CSharp: TechXR.Core.Sense.SenseInput
      VB: TechXR.Core.Sense.SenseInput
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: SenseInput
      path: ''
      startLine: 1732
    summary: "\nMain input manager class\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SenseInput : MonoBehaviour'
        VB: >-
          Public Class SenseInput

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.SenseInput.Instance
      commentId: F:TechXR.Core.Sense.SenseInput.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: SenseInput.Instance
        VB: SenseInput.Instance
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.Instance
        VB: TechXR.Core.Sense.SenseInput.Instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Instance
        path: ''
        startLine: 1735
      syntax:
        content:
          CSharp: public static SenseInput Instance
          VB: Public Shared Instance As SenseInput
        return:
          type: TechXR.Core.Sense.SenseInput
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonA_Up
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonA_Up
      language: CSharp
      name:
        CSharp: ButtonA_Up
        VB: ButtonA_Up
      nameWithType:
        CSharp: SenseInput.ButtonA_Up
        VB: SenseInput.ButtonA_Up
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonA_Up
        VB: TechXR.Core.Sense.SenseInput.ButtonA_Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonA_Up
        path: ''
        startLine: 1738
      syntax:
        content:
          CSharp: public static bool ButtonA_Up
          VB: Public Shared ButtonA_Up As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonB_Up
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonB_Up
      language: CSharp
      name:
        CSharp: ButtonB_Up
        VB: ButtonB_Up
      nameWithType:
        CSharp: SenseInput.ButtonB_Up
        VB: SenseInput.ButtonB_Up
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonB_Up
        VB: TechXR.Core.Sense.SenseInput.ButtonB_Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonB_Up
        path: ''
        startLine: 1739
      syntax:
        content:
          CSharp: public static bool ButtonB_Up
          VB: Public Shared ButtonB_Up As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonC_Up
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonC_Up
      language: CSharp
      name:
        CSharp: ButtonC_Up
        VB: ButtonC_Up
      nameWithType:
        CSharp: SenseInput.ButtonC_Up
        VB: SenseInput.ButtonC_Up
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonC_Up
        VB: TechXR.Core.Sense.SenseInput.ButtonC_Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonC_Up
        path: ''
        startLine: 1740
      syntax:
        content:
          CSharp: public static bool ButtonC_Up
          VB: Public Shared ButtonC_Up As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonD_Up
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonD_Up
      language: CSharp
      name:
        CSharp: ButtonD_Up
        VB: ButtonD_Up
      nameWithType:
        CSharp: SenseInput.ButtonD_Up
        VB: SenseInput.ButtonD_Up
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonD_Up
        VB: TechXR.Core.Sense.SenseInput.ButtonD_Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonD_Up
        path: ''
        startLine: 1741
      syntax:
        content:
          CSharp: public static bool ButtonD_Up
          VB: Public Shared ButtonD_Up As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonE_Up
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonE_Up
      language: CSharp
      name:
        CSharp: ButtonE_Up
        VB: ButtonE_Up
      nameWithType:
        CSharp: SenseInput.ButtonE_Up
        VB: SenseInput.ButtonE_Up
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonE_Up
        VB: TechXR.Core.Sense.SenseInput.ButtonE_Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonE_Up
        path: ''
        startLine: 1742
      syntax:
        content:
          CSharp: public static bool ButtonE_Up
          VB: Public Shared ButtonE_Up As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonF_Up
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonF_Up
      language: CSharp
      name:
        CSharp: ButtonF_Up
        VB: ButtonF_Up
      nameWithType:
        CSharp: SenseInput.ButtonF_Up
        VB: SenseInput.ButtonF_Up
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonF_Up
        VB: TechXR.Core.Sense.SenseInput.ButtonF_Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonF_Up
        path: ''
        startLine: 1743
      syntax:
        content:
          CSharp: public static bool ButtonF_Up
          VB: Public Shared ButtonF_Up As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonA_Down
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonA_Down
      language: CSharp
      name:
        CSharp: ButtonA_Down
        VB: ButtonA_Down
      nameWithType:
        CSharp: SenseInput.ButtonA_Down
        VB: SenseInput.ButtonA_Down
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonA_Down
        VB: TechXR.Core.Sense.SenseInput.ButtonA_Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonA_Down
        path: ''
        startLine: 1745
      syntax:
        content:
          CSharp: public static bool ButtonA_Down
          VB: Public Shared ButtonA_Down As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonB_Down
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonB_Down
      language: CSharp
      name:
        CSharp: ButtonB_Down
        VB: ButtonB_Down
      nameWithType:
        CSharp: SenseInput.ButtonB_Down
        VB: SenseInput.ButtonB_Down
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonB_Down
        VB: TechXR.Core.Sense.SenseInput.ButtonB_Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonB_Down
        path: ''
        startLine: 1746
      syntax:
        content:
          CSharp: public static bool ButtonB_Down
          VB: Public Shared ButtonB_Down As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonC_Down
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonC_Down
      language: CSharp
      name:
        CSharp: ButtonC_Down
        VB: ButtonC_Down
      nameWithType:
        CSharp: SenseInput.ButtonC_Down
        VB: SenseInput.ButtonC_Down
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonC_Down
        VB: TechXR.Core.Sense.SenseInput.ButtonC_Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonC_Down
        path: ''
        startLine: 1747
      syntax:
        content:
          CSharp: public static bool ButtonC_Down
          VB: Public Shared ButtonC_Down As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonD_Down
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonD_Down
      language: CSharp
      name:
        CSharp: ButtonD_Down
        VB: ButtonD_Down
      nameWithType:
        CSharp: SenseInput.ButtonD_Down
        VB: SenseInput.ButtonD_Down
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonD_Down
        VB: TechXR.Core.Sense.SenseInput.ButtonD_Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonD_Down
        path: ''
        startLine: 1748
      syntax:
        content:
          CSharp: public static bool ButtonD_Down
          VB: Public Shared ButtonD_Down As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonE_Down
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonE_Down
      language: CSharp
      name:
        CSharp: ButtonE_Down
        VB: ButtonE_Down
      nameWithType:
        CSharp: SenseInput.ButtonE_Down
        VB: SenseInput.ButtonE_Down
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonE_Down
        VB: TechXR.Core.Sense.SenseInput.ButtonE_Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonE_Down
        path: ''
        startLine: 1749
      syntax:
        content:
          CSharp: public static bool ButtonE_Down
          VB: Public Shared ButtonE_Down As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonF_Down
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonF_Down
      language: CSharp
      name:
        CSharp: ButtonF_Down
        VB: ButtonF_Down
      nameWithType:
        CSharp: SenseInput.ButtonF_Down
        VB: SenseInput.ButtonF_Down
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonF_Down
        VB: TechXR.Core.Sense.SenseInput.ButtonF_Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonF_Down
        path: ''
        startLine: 1750
      syntax:
        content:
          CSharp: public static bool ButtonF_Down
          VB: Public Shared ButtonF_Down As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonA_Press
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonA_Press
      language: CSharp
      name:
        CSharp: ButtonA_Press
        VB: ButtonA_Press
      nameWithType:
        CSharp: SenseInput.ButtonA_Press
        VB: SenseInput.ButtonA_Press
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonA_Press
        VB: TechXR.Core.Sense.SenseInput.ButtonA_Press
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonA_Press
        path: ''
        startLine: 1752
      syntax:
        content:
          CSharp: public static bool ButtonA_Press
          VB: Public Shared ButtonA_Press As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonB_Press
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonB_Press
      language: CSharp
      name:
        CSharp: ButtonB_Press
        VB: ButtonB_Press
      nameWithType:
        CSharp: SenseInput.ButtonB_Press
        VB: SenseInput.ButtonB_Press
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonB_Press
        VB: TechXR.Core.Sense.SenseInput.ButtonB_Press
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonB_Press
        path: ''
        startLine: 1753
      syntax:
        content:
          CSharp: public static bool ButtonB_Press
          VB: Public Shared ButtonB_Press As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonC_Press
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonC_Press
      language: CSharp
      name:
        CSharp: ButtonC_Press
        VB: ButtonC_Press
      nameWithType:
        CSharp: SenseInput.ButtonC_Press
        VB: SenseInput.ButtonC_Press
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonC_Press
        VB: TechXR.Core.Sense.SenseInput.ButtonC_Press
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonC_Press
        path: ''
        startLine: 1754
      syntax:
        content:
          CSharp: public static bool ButtonC_Press
          VB: Public Shared ButtonC_Press As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonD_Press
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonD_Press
      language: CSharp
      name:
        CSharp: ButtonD_Press
        VB: ButtonD_Press
      nameWithType:
        CSharp: SenseInput.ButtonD_Press
        VB: SenseInput.ButtonD_Press
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonD_Press
        VB: TechXR.Core.Sense.SenseInput.ButtonD_Press
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonD_Press
        path: ''
        startLine: 1755
      syntax:
        content:
          CSharp: public static bool ButtonD_Press
          VB: Public Shared ButtonD_Press As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonE_Press
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonE_Press
      language: CSharp
      name:
        CSharp: ButtonE_Press
        VB: ButtonE_Press
      nameWithType:
        CSharp: SenseInput.ButtonE_Press
        VB: SenseInput.ButtonE_Press
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonE_Press
        VB: TechXR.Core.Sense.SenseInput.ButtonE_Press
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonE_Press
        path: ''
        startLine: 1756
      syntax:
        content:
          CSharp: public static bool ButtonE_Press
          VB: Public Shared ButtonE_Press As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.ButtonF_Press
      commentId: F:TechXR.Core.Sense.SenseInput.ButtonF_Press
      language: CSharp
      name:
        CSharp: ButtonF_Press
        VB: ButtonF_Press
      nameWithType:
        CSharp: SenseInput.ButtonF_Press
        VB: SenseInput.ButtonF_Press
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.ButtonF_Press
        VB: TechXR.Core.Sense.SenseInput.ButtonF_Press
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonF_Press
        path: ''
        startLine: 1757
      syntax:
        content:
          CSharp: public static bool ButtonF_Press
          VB: Public Shared ButtonF_Press As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.HorizontalInput
      commentId: F:TechXR.Core.Sense.SenseInput.HorizontalInput
      language: CSharp
      name:
        CSharp: HorizontalInput
        VB: HorizontalInput
      nameWithType:
        CSharp: SenseInput.HorizontalInput
        VB: SenseInput.HorizontalInput
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.HorizontalInput
        VB: TechXR.Core.Sense.SenseInput.HorizontalInput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: HorizontalInput
        path: ''
        startLine: 1759
      syntax:
        content:
          CSharp: public static float HorizontalInput
          VB: Public Shared HorizontalInput As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.VerticalInput
      commentId: F:TechXR.Core.Sense.SenseInput.VerticalInput
      language: CSharp
      name:
        CSharp: VerticalInput
        VB: VerticalInput
      nameWithType:
        CSharp: SenseInput.VerticalInput
        VB: SenseInput.VerticalInput
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.VerticalInput
        VB: TechXR.Core.Sense.SenseInput.VerticalInput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: VerticalInput
        path: ''
        startLine: 1760
      syntax:
        content:
          CSharp: public static float VerticalInput
          VB: Public Shared VerticalInput As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseInput.JoystickMovement
      commentId: P:TechXR.Core.Sense.SenseInput.JoystickMovement
      language: CSharp
      name:
        CSharp: JoystickMovement
        VB: JoystickMovement
      nameWithType:
        CSharp: SenseInput.JoystickMovement
        VB: SenseInput.JoystickMovement
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.JoystickMovement
        VB: TechXR.Core.Sense.SenseInput.JoystickMovement
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: JoystickMovement
        path: ''
        startLine: 1767
      summary: "\nEnable/Disable the joystick basedd movements\n"
      example: []
      syntax:
        content:
          CSharp: public bool JoystickMovement { get; set; }
          VB: Public Property JoystickMovement As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TechXR.Core.Sense.SenseInput.JoystickMovement*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseInput.TeleportMovement
      commentId: P:TechXR.Core.Sense.SenseInput.TeleportMovement
      language: CSharp
      name:
        CSharp: TeleportMovement
        VB: TeleportMovement
      nameWithType:
        CSharp: SenseInput.TeleportMovement
        VB: SenseInput.TeleportMovement
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseInput.TeleportMovement
        VB: TechXR.Core.Sense.SenseInput.TeleportMovement
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TeleportMovement
        path: ''
        startLine: 1771
      summary: "\nEnable/Disable the teleport option\n"
      example: []
      syntax:
        content:
          CSharp: public bool TeleportMovement { get; set; }
          VB: Public Property TeleportMovement As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TechXR.Core.Sense.SenseInput.TeleportMovement*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: TechXR.Core.Sense.SenseXR
    commentId: T:TechXR.Core.Sense.SenseXR
    language: CSharp
    name:
      CSharp: SenseXR
      VB: SenseXR
    nameWithType:
      CSharp: SenseXR
      VB: SenseXR
    qualifiedName:
      CSharp: TechXR.Core.Sense.SenseXR
      VB: TechXR.Core.Sense.SenseXR
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: SenseXR
      path: ''
      startLine: 1957
    summary: "\nMain entry point into the XR functionalities\nImplements the IXR interface\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SenseXR : Singleton<SenseXR>, IXR'
        VB: >-
          Public Class SenseXR

              Inherits Singleton(Of SenseXR)

              Implements IXR
    inheritance:
    - System.Object
    implements:
    - TechXR.Core.Sense.IXR
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.SenseXR.GetCurrentObject
      commentId: M:TechXR.Core.Sense.SenseXR.GetCurrentObject
      language: CSharp
      name:
        CSharp: GetCurrentObject()
        VB: GetCurrentObject()
      nameWithType:
        CSharp: SenseXR.GetCurrentObject()
        VB: SenseXR.GetCurrentObject()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.GetCurrentObject()
        VB: TechXR.Core.Sense.SenseXR.GetCurrentObject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetCurrentObject
        path: ''
        startLine: 1987
      summary: "\nGet the current object under raycast\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject GetCurrentObject()
          VB: Public Function GetCurrentObject As GameObject
        return:
          type: Global.GameObject
          description: GameObject
      overload: TechXR.Core.Sense.SenseXR.GetCurrentObject*
      implements:
      - TechXR.Core.Sense.IXR.GetCurrentObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.GetController
      commentId: M:TechXR.Core.Sense.SenseXR.GetController
      language: CSharp
      name:
        CSharp: GetController()
        VB: GetController()
      nameWithType:
        CSharp: SenseXR.GetController()
        VB: SenseXR.GetController()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.GetController()
        VB: TechXR.Core.Sense.SenseXR.GetController()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetController
        path: ''
        startLine: 1996
      summary: "\nGet the controller object reference\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject GetController()
          VB: Public Function GetController As GameObject
        return:
          type: Global.GameObject
          description: GameObject
      overload: TechXR.Core.Sense.SenseXR.GetController*
      implements:
      - TechXR.Core.Sense.IXR.GetController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.GetLaserPointer
      commentId: M:TechXR.Core.Sense.SenseXR.GetLaserPointer
      language: CSharp
      name:
        CSharp: GetLaserPointer()
        VB: GetLaserPointer()
      nameWithType:
        CSharp: SenseXR.GetLaserPointer()
        VB: SenseXR.GetLaserPointer()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.GetLaserPointer()
        VB: TechXR.Core.Sense.SenseXR.GetLaserPointer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetLaserPointer
        path: ''
        startLine: 2005
      summary: "\nGet the laser pointer class reference\n"
      example: []
      syntax:
        content:
          CSharp: public LaserPointer GetLaserPointer()
          VB: Public Function GetLaserPointer As LaserPointer
        return:
          type: TechXR.Core.Sense.LaserPointer
          description: LaserPointer Class
      overload: TechXR.Core.Sense.SenseXR.GetLaserPointer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.GetXRPosition
      commentId: M:TechXR.Core.Sense.SenseXR.GetXRPosition
      language: CSharp
      name:
        CSharp: GetXRPosition()
        VB: GetXRPosition()
      nameWithType:
        CSharp: SenseXR.GetXRPosition()
        VB: SenseXR.GetXRPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.GetXRPosition()
        VB: TechXR.Core.Sense.SenseXR.GetXRPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRPosition
        path: ''
        startLine: 2013
      summary: "\nGet global position of the controller\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetXRPosition()
          VB: Public Function GetXRPosition As Vector3
        return:
          type: Global.Vector3
          description: Vector3
      overload: TechXR.Core.Sense.SenseXR.GetXRPosition*
      implements:
      - TechXR.Core.Sense.IXR.GetXRPosition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.GetXRLocalPosition
      commentId: M:TechXR.Core.Sense.SenseXR.GetXRLocalPosition
      language: CSharp
      name:
        CSharp: GetXRLocalPosition()
        VB: GetXRLocalPosition()
      nameWithType:
        CSharp: SenseXR.GetXRLocalPosition()
        VB: SenseXR.GetXRLocalPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.GetXRLocalPosition()
        VB: TechXR.Core.Sense.SenseXR.GetXRLocalPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRLocalPosition
        path: ''
        startLine: 2022
      summary: "\nGet local position of the controller\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetXRLocalPosition()
          VB: Public Function GetXRLocalPosition As Vector3
        return:
          type: Global.Vector3
          description: Vector3
      overload: TechXR.Core.Sense.SenseXR.GetXRLocalPosition*
      implements:
      - TechXR.Core.Sense.IXR.GetXRLocalPosition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.GetXRRotation
      commentId: M:TechXR.Core.Sense.SenseXR.GetXRRotation
      language: CSharp
      name:
        CSharp: GetXRRotation()
        VB: GetXRRotation()
      nameWithType:
        CSharp: SenseXR.GetXRRotation()
        VB: SenseXR.GetXRRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.GetXRRotation()
        VB: TechXR.Core.Sense.SenseXR.GetXRRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRRotation
        path: ''
        startLine: 2031
      summary: "\nGet global rotation of the controller\n"
      example: []
      syntax:
        content:
          CSharp: public Quaternion GetXRRotation()
          VB: Public Function GetXRRotation As Quaternion
        return:
          type: Global.Quaternion
          description: Quaternion
      overload: TechXR.Core.Sense.SenseXR.GetXRRotation*
      implements:
      - TechXR.Core.Sense.IXR.GetXRRotation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.GetXRLocalRotation
      commentId: M:TechXR.Core.Sense.SenseXR.GetXRLocalRotation
      language: CSharp
      name:
        CSharp: GetXRLocalRotation()
        VB: GetXRLocalRotation()
      nameWithType:
        CSharp: SenseXR.GetXRLocalRotation()
        VB: SenseXR.GetXRLocalRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.GetXRLocalRotation()
        VB: TechXR.Core.Sense.SenseXR.GetXRLocalRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetXRLocalRotation
        path: ''
        startLine: 2040
      summary: "\nGet local rotation of the controller\n"
      example: []
      syntax:
        content:
          CSharp: public Quaternion GetXRLocalRotation()
          VB: Public Function GetXRLocalRotation As Quaternion
        return:
          type: Global.Quaternion
          description: Quaternion
      overload: TechXR.Core.Sense.SenseXR.GetXRLocalRotation*
      implements:
      - TechXR.Core.Sense.IXR.GetXRLocalRotation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode(GameObject,System.Boolean)
      commentId: M:TechXR.Core.Sense.SenseXR.SetObjectInteractionMode(GameObject,System.Boolean)
      language: CSharp
      name:
        CSharp: SetObjectInteractionMode(GameObject, Boolean)
        VB: SetObjectInteractionMode(GameObject, Boolean)
      nameWithType:
        CSharp: SenseXR.SetObjectInteractionMode(GameObject, Boolean)
        VB: SenseXR.SetObjectInteractionMode(GameObject, Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode(GameObject, System.Boolean)
        VB: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode(GameObject, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetObjectInteractionMode
        path: ''
        startLine: 2052
      summary: "\nMake the object interactive/non-interactive\ngameObject: Target GameObject\nTrue for interactive. False for non-interactive\n"
      example: []
      syntax:
        content:
          CSharp: public void SetObjectInteractionMode(GameObject gameObject, bool interactive)
          VB: Public Sub SetObjectInteractionMode(gameObject As GameObject, interactive As Boolean)
        parameters:
        - id: gameObject
          type: Global.GameObject
          description: ''
        - id: interactive
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode*
      implements:
      - TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject,System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      commentId: M:TechXR.Core.Sense.SenseXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      language: CSharp
      name:
        CSharp: AddEventListener(SenseEvent, SenseEventDelegate)
        VB: AddEventListener(SenseEvent, SenseEventDelegate)
      nameWithType:
        CSharp: SenseXR.AddEventListener(SenseEvent, SenseEventDelegate)
        VB: SenseXR.AddEventListener(SenseEvent, SenseEventDelegate)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.AddEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
        VB: TechXR.Core.Sense.SenseXR.AddEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: AddEventListener
        path: ''
        startLine: 2066
      summary: "\nAdd event listener to a function\ne: Event to listen to\nlistenerFunction: Callback function for the event\n"
      example: []
      syntax:
        content:
          CSharp: public void AddEventListener(SenseEvent e, SenseEventDelegate listenerFunction)
          VB: Public Sub AddEventListener(e As SenseEvent, listenerFunction As SenseEventDelegate)
        parameters:
        - id: e
          type: TechXR.Core.Sense.SenseEvent
          description: ''
        - id: listenerFunction
          type: TechXR.Core.Sense.SenseEventDelegate
          description: ''
      overload: TechXR.Core.Sense.SenseXR.AddEventListener*
      implements:
      - TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      commentId: M:TechXR.Core.Sense.SenseXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      language: CSharp
      name:
        CSharp: RemoveEventListener(SenseEvent, SenseEventDelegate)
        VB: RemoveEventListener(SenseEvent, SenseEventDelegate)
      nameWithType:
        CSharp: SenseXR.RemoveEventListener(SenseEvent, SenseEventDelegate)
        VB: SenseXR.RemoveEventListener(SenseEvent, SenseEventDelegate)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
        VB: TechXR.Core.Sense.SenseXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent, TechXR.Core.Sense.SenseEventDelegate)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: RemoveEventListener
        path: ''
        startLine: 2078
      summary: "\nRemove the event listener from a function\ne: Event attached to the callback function\nlistenerFunction: Callback function listening to the event\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveEventListener(SenseEvent e, SenseEventDelegate listenerFunction)
          VB: Public Sub RemoveEventListener(e As SenseEvent, listenerFunction As SenseEventDelegate)
        parameters:
        - id: e
          type: TechXR.Core.Sense.SenseEvent
          description: ''
        - id: listenerFunction
          type: TechXR.Core.Sense.SenseEventDelegate
          description: ''
      overload: TechXR.Core.Sense.SenseXR.RemoveEventListener*
      implements:
      - TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent)
      commentId: M:TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent)
      language: CSharp
      name:
        CSharp: TriggerEvent(SenseEvent)
        VB: TriggerEvent(SenseEvent)
      nameWithType:
        CSharp: SenseXR.TriggerEvent(SenseEvent)
        VB: SenseXR.TriggerEvent(SenseEvent)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent)
        VB: TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TriggerEvent
        path: ''
        startLine: 2088
      summary: "\nTrigger the event without any parameter\ne: Event to dispatch\n"
      example: []
      syntax:
        content:
          CSharp: public void TriggerEvent(SenseEvent e)
          VB: Public Sub TriggerEvent(e As SenseEvent)
        parameters:
        - id: e
          type: TechXR.Core.Sense.SenseEvent
          description: ''
      overload: TechXR.Core.Sense.SenseXR.TriggerEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent,System.Object[])
      commentId: M:TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent,System.Object[])
      language: CSharp
      name:
        CSharp: TriggerEvent(SenseEvent, Object[])
        VB: TriggerEvent(SenseEvent, Object())
      nameWithType:
        CSharp: SenseXR.TriggerEvent(SenseEvent, Object[])
        VB: SenseXR.TriggerEvent(SenseEvent, Object())
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent, System.Object[])
        VB: TechXR.Core.Sense.SenseXR.TriggerEvent(TechXR.Core.Sense.SenseEvent, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TriggerEvent
        path: ''
        startLine: 2099
      summary: "\nTrigger the event with some parameters\nArray of arguments to dispatch along with the event\n"
      example: []
      syntax:
        content:
          CSharp: public void TriggerEvent(SenseEvent e, params object[] args)
          VB: Public Sub TriggerEvent(e As SenseEvent, ParamArray args As Object())
        parameters:
        - id: e
          type: TechXR.Core.Sense.SenseEvent
          description: Event to dispatch
        - id: args
          type: System.Object[]
          description: ''
      overload: TechXR.Core.Sense.SenseXR.TriggerEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.TogglePointerDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.SenseXR.TogglePointerDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: TogglePointerDisplay(Boolean)
        VB: TogglePointerDisplay(Boolean)
      nameWithType:
        CSharp: SenseXR.TogglePointerDisplay(Boolean)
        VB: SenseXR.TogglePointerDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.TogglePointerDisplay(System.Boolean)
        VB: TechXR.Core.Sense.SenseXR.TogglePointerDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TogglePointerDisplay
        path: ''
        startLine: 2109
      summary: "\nShow or Hide the VR Pointer\nTrue: Display\nFalse: Hide\n"
      example: []
      syntax:
        content:
          CSharp: public void TogglePointerDisplay(bool flag)
          VB: Public Sub TogglePointerDisplay(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.SenseXR.TogglePointerDisplay*
      implements:
      - TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      commentId: M:TechXR.Core.Sense.SenseXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      language: CSharp
      name:
        CSharp: SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: SetPointerDisplayMode(Defs.PointerDisplayMode)
      nameWithType:
        CSharp: SenseXR.SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: SenseXR.SetPointerDisplayMode(Defs.PointerDisplayMode)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        VB: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerDisplayMode
        path: ''
        startLine: 2120
      summary: "\nToggle display mode between pointer and teleportation\nPointerDisplayMode.LaserPointer for LaserPointer. \nPointerDisplayMode.Teleporter for Teleporter\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPointerDisplayMode(Defs.PointerDisplayMode mode)
          VB: Public Sub SetPointerDisplayMode(mode As Defs.PointerDisplayMode)
        parameters:
        - id: mode
          type: TechXR.Core.Sense.Defs.PointerDisplayMode
          description: ''
      overload: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode*
      implements:
      - TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseXR.SetPointerColor(Color)
      commentId: M:TechXR.Core.Sense.SenseXR.SetPointerColor(Color)
      language: CSharp
      name:
        CSharp: SetPointerColor(Color)
        VB: SetPointerColor(Color)
      nameWithType:
        CSharp: SenseXR.SetPointerColor(Color)
        VB: SenseXR.SetPointerColor(Color)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseXR.SetPointerColor(Color)
        VB: TechXR.Core.Sense.SenseXR.SetPointerColor(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerColor
        path: ''
        startLine: 2129
      summary: "\nSet laser pointer color\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPointerColor(Color color)
          VB: Public Sub SetPointerColor(color As Color)
        parameters:
        - id: color
          type: Global.Color
          description: ''
      overload: TechXR.Core.Sense.SenseXR.SetPointerColor*
      implements:
      - TechXR.Core.Sense.IXR.SetPointerColor(Color)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.JoystickController
    commentId: T:TechXR.Core.Sense.JoystickController
    language: CSharp
    name:
      CSharp: JoystickController
      VB: JoystickController
    nameWithType:
      CSharp: JoystickController
      VB: JoystickController
    qualifiedName:
      CSharp: TechXR.Core.Sense.JoystickController
      VB: TechXR.Core.Sense.JoystickController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: JoystickController
      path: ''
      startLine: 2186
    summary: "\nManager class for on-screen joystick for mobile devices\n"
    example: []
    syntax:
      content:
        CSharp: 'public class JoystickController : MonoBehaviour'
        VB: >-
          Public Class JoystickController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.JoystickController.MoveMultiplier
      commentId: F:TechXR.Core.Sense.JoystickController.MoveMultiplier
      language: CSharp
      name:
        CSharp: MoveMultiplier
        VB: MoveMultiplier
      nameWithType:
        CSharp: JoystickController.MoveMultiplier
        VB: JoystickController.MoveMultiplier
      qualifiedName:
        CSharp: TechXR.Core.Sense.JoystickController.MoveMultiplier
        VB: TechXR.Core.Sense.JoystickController.MoveMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: MoveMultiplier
        path: ''
        startLine: 2192
      summary: "\nMultiplier factor to control the speed of movement\n"
      example: []
      syntax:
        content:
          CSharp: public float MoveMultiplier
          VB: Public MoveMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.JoystickController.RotationMultiplier
      commentId: F:TechXR.Core.Sense.JoystickController.RotationMultiplier
      language: CSharp
      name:
        CSharp: RotationMultiplier
        VB: RotationMultiplier
      nameWithType:
        CSharp: JoystickController.RotationMultiplier
        VB: JoystickController.RotationMultiplier
      qualifiedName:
        CSharp: TechXR.Core.Sense.JoystickController.RotationMultiplier
        VB: TechXR.Core.Sense.JoystickController.RotationMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: RotationMultiplier
        path: ''
        startLine: 2196
      summary: "\nMultiplier factor to control the speed of rotation\n"
      example: []
      syntax:
        content:
          CSharp: public float RotationMultiplier
          VB: Public RotationMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.JoystickController.RotationXMax
      commentId: F:TechXR.Core.Sense.JoystickController.RotationXMax
      language: CSharp
      name:
        CSharp: RotationXMax
        VB: RotationXMax
      nameWithType:
        CSharp: JoystickController.RotationXMax
        VB: JoystickController.RotationXMax
      qualifiedName:
        CSharp: TechXR.Core.Sense.JoystickController.RotationXMax
        VB: TechXR.Core.Sense.JoystickController.RotationXMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: RotationXMax
        path: ''
        startLine: 2200
      summary: "\nMax rotation along the X-Axis\n"
      example: []
      syntax:
        content:
          CSharp: public float RotationXMax
          VB: Public RotationXMax As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.JoystickController.SetPlayerReference(GameObject)
      commentId: M:TechXR.Core.Sense.JoystickController.SetPlayerReference(GameObject)
      language: CSharp
      name:
        CSharp: SetPlayerReference(GameObject)
        VB: SetPlayerReference(GameObject)
      nameWithType:
        CSharp: JoystickController.SetPlayerReference(GameObject)
        VB: JoystickController.SetPlayerReference(GameObject)
      qualifiedName:
        CSharp: TechXR.Core.Sense.JoystickController.SetPlayerReference(GameObject)
        VB: TechXR.Core.Sense.JoystickController.SetPlayerReference(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPlayerReference
        path: ''
        startLine: 2316
      summary: "\nSet player object reference\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPlayerReference(GameObject player)
          VB: Public Sub SetPlayerReference(player As GameObject)
        parameters:
        - id: player
          type: Global.GameObject
          description: The gameobject to be set as the main player object
      overload: TechXR.Core.Sense.JoystickController.SetPlayerReference*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.Defs
    commentId: T:TechXR.Core.Sense.Defs
    language: CSharp
    name:
      CSharp: Defs
      VB: Defs
    nameWithType:
      CSharp: Defs
      VB: Defs
    qualifiedName:
      CSharp: TechXR.Core.Sense.Defs
      VB: TechXR.Core.Sense.Defs
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: Defs
      path: ''
      startLine: 2334
    summary: "\nApplication level defintions\n"
    example: []
    syntax:
      content:
        CSharp: public class Defs
        VB: Public Class Defs
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.Defs.DEFAULT_LAYER
      commentId: F:TechXR.Core.Sense.Defs.DEFAULT_LAYER
      language: CSharp
      name:
        CSharp: DEFAULT_LAYER
        VB: DEFAULT_LAYER
      nameWithType:
        CSharp: Defs.DEFAULT_LAYER
        VB: Defs.DEFAULT_LAYER
      qualifiedName:
        CSharp: TechXR.Core.Sense.Defs.DEFAULT_LAYER
        VB: TechXR.Core.Sense.Defs.DEFAULT_LAYER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: DEFAULT_LAYER
        path: ''
        startLine: 2345
      syntax:
        content:
          CSharp: public const string DEFAULT_LAYER = "Default"
          VB: Public Const DEFAULT_LAYER As String = "Default"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.Defs.IGNORE_RAYCAST_LAYER
      commentId: F:TechXR.Core.Sense.Defs.IGNORE_RAYCAST_LAYER
      language: CSharp
      name:
        CSharp: IGNORE_RAYCAST_LAYER
        VB: IGNORE_RAYCAST_LAYER
      nameWithType:
        CSharp: Defs.IGNORE_RAYCAST_LAYER
        VB: Defs.IGNORE_RAYCAST_LAYER
      qualifiedName:
        CSharp: TechXR.Core.Sense.Defs.IGNORE_RAYCAST_LAYER
        VB: TechXR.Core.Sense.Defs.IGNORE_RAYCAST_LAYER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: IGNORE_RAYCAST_LAYER
        path: ''
        startLine: 2346
      syntax:
        content:
          CSharp: public const string IGNORE_RAYCAST_LAYER = "Ignore Raycast"
          VB: Public Const IGNORE_RAYCAST_LAYER As String = "Ignore Raycast"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TechXR.Core.Sense.Defs.PointerDisplayMode
    commentId: T:TechXR.Core.Sense.Defs.PointerDisplayMode
    language: CSharp
    name:
      CSharp: Defs.PointerDisplayMode
      VB: Defs.PointerDisplayMode
    nameWithType:
      CSharp: Defs.PointerDisplayMode
      VB: Defs.PointerDisplayMode
    qualifiedName:
      CSharp: TechXR.Core.Sense.Defs.PointerDisplayMode
      VB: TechXR.Core.Sense.Defs.PointerDisplayMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: PointerDisplayMode
      path: ''
      startLine: 2338
    syntax:
      content:
        CSharp: public enum PointerDisplayMode
        VB: Public Enum PointerDisplayMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TechXR.Core.Sense.Defs.PointerDisplayMode.LaserPointer
      commentId: F:TechXR.Core.Sense.Defs.PointerDisplayMode.LaserPointer
      language: CSharp
      name:
        CSharp: LaserPointer
        VB: LaserPointer
      nameWithType:
        CSharp: Defs.PointerDisplayMode.LaserPointer
        VB: Defs.PointerDisplayMode.LaserPointer
      qualifiedName:
        CSharp: TechXR.Core.Sense.Defs.PointerDisplayMode.LaserPointer
        VB: TechXR.Core.Sense.Defs.PointerDisplayMode.LaserPointer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: LaserPointer
        path: ''
        startLine: 2340
      syntax:
        content:
          CSharp: LaserPointer = 0
          VB: LaserPointer = 0
        return:
          type: TechXR.Core.Sense.Defs.PointerDisplayMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.Defs.PointerDisplayMode.Teleporter
      commentId: F:TechXR.Core.Sense.Defs.PointerDisplayMode.Teleporter
      language: CSharp
      name:
        CSharp: Teleporter
        VB: Teleporter
      nameWithType:
        CSharp: Defs.PointerDisplayMode.Teleporter
        VB: Defs.PointerDisplayMode.Teleporter
      qualifiedName:
        CSharp: TechXR.Core.Sense.Defs.PointerDisplayMode.Teleporter
        VB: TechXR.Core.Sense.Defs.PointerDisplayMode.Teleporter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Teleporter
        path: ''
        startLine: 2341
      syntax:
        content:
          CSharp: Teleporter = 1
          VB: Teleporter = 1
        return:
          type: TechXR.Core.Sense.Defs.PointerDisplayMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TechXR.Core.Sense.ControllerData
    commentId: T:TechXR.Core.Sense.ControllerData
    language: CSharp
    name:
      CSharp: ControllerData
      VB: ControllerData
    nameWithType:
      CSharp: ControllerData
      VB: ControllerData
    qualifiedName:
      CSharp: TechXR.Core.Sense.ControllerData
      VB: TechXR.Core.Sense.ControllerData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: ControllerData
      path: ''
      startLine: 2361
    summary: "\nData class for the laser pointer controller\n"
    example: []
    syntax:
      content:
        CSharp: public class ControllerData
        VB: Public Class ControllerData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.ControllerData.PointerEvent
      commentId: F:TechXR.Core.Sense.ControllerData.PointerEvent
      language: CSharp
      name:
        CSharp: PointerEvent
        VB: PointerEvent
      nameWithType:
        CSharp: ControllerData.PointerEvent
        VB: ControllerData.PointerEvent
      qualifiedName:
        CSharp: TechXR.Core.Sense.ControllerData.PointerEvent
        VB: TechXR.Core.Sense.ControllerData.PointerEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: PointerEvent
        path: ''
        startLine: 2367
      summary: "\nPointerEventData for the LaserPointerEvent\n"
      example: []
      syntax:
        content:
          CSharp: public LaserPointerEventData PointerEvent
          VB: Public PointerEvent As LaserPointerEventData
        return:
          type: TechXR.Core.Sense.LaserPointerEventData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.ControllerData.CurrentPoint
      commentId: F:TechXR.Core.Sense.ControllerData.CurrentPoint
      language: CSharp
      name:
        CSharp: CurrentPoint
        VB: CurrentPoint
      nameWithType:
        CSharp: ControllerData.CurrentPoint
        VB: ControllerData.CurrentPoint
      qualifiedName:
        CSharp: TechXR.Core.Sense.ControllerData.CurrentPoint
        VB: TechXR.Core.Sense.ControllerData.CurrentPoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: CurrentPoint
        path: ''
        startLine: 2371
      summary: "\nGameObject hit by the laser pointer\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject CurrentPoint
          VB: Public CurrentPoint As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.ControllerData.CurrentPressed
      commentId: F:TechXR.Core.Sense.ControllerData.CurrentPressed
      language: CSharp
      name:
        CSharp: CurrentPressed
        VB: CurrentPressed
      nameWithType:
        CSharp: ControllerData.CurrentPressed
        VB: ControllerData.CurrentPressed
      qualifiedName:
        CSharp: TechXR.Core.Sense.ControllerData.CurrentPressed
        VB: TechXR.Core.Sense.ControllerData.CurrentPressed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: CurrentPressed
        path: ''
        startLine: 2375
      summary: "\nGameObject over which the laser pointer is hovering\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject CurrentPressed
          VB: Public CurrentPressed As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.ControllerData.CurrentDragging
      commentId: F:TechXR.Core.Sense.ControllerData.CurrentDragging
      language: CSharp
      name:
        CSharp: CurrentDragging
        VB: CurrentDragging
      nameWithType:
        CSharp: ControllerData.CurrentDragging
        VB: ControllerData.CurrentDragging
      qualifiedName:
        CSharp: TechXR.Core.Sense.ControllerData.CurrentDragging
        VB: TechXR.Core.Sense.ControllerData.CurrentDragging
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: CurrentDragging
        path: ''
        startLine: 2379
      summary: "\nGameObject over which the controller was clicked and the pointer dragged\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject CurrentDragging
          VB: Public CurrentDragging As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.LaserPointerEventData
    commentId: T:TechXR.Core.Sense.LaserPointerEventData
    language: CSharp
    name:
      CSharp: LaserPointerEventData
      VB: LaserPointerEventData
    nameWithType:
      CSharp: LaserPointerEventData
      VB: LaserPointerEventData
    qualifiedName:
      CSharp: TechXR.Core.Sense.LaserPointerEventData
      VB: TechXR.Core.Sense.LaserPointerEventData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: LaserPointerEventData
      path: ''
      startLine: 2404
    summary: "\nData class for the laser pointer event\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LaserPointerEventData : PointerEventData'
        VB: >-
          Public Class LaserPointerEventData

              Inherits PointerEventData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.LaserPointerEventData.Current
      commentId: F:TechXR.Core.Sense.LaserPointerEventData.Current
      language: CSharp
      name:
        CSharp: Current
        VB: Current
      nameWithType:
        CSharp: LaserPointerEventData.Current
        VB: LaserPointerEventData.Current
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerEventData.Current
        VB: TechXR.Core.Sense.LaserPointerEventData.Current
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Current
        path: ''
        startLine: 2410
      summary: "\nGameObject hit by the laser pointer\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject Current
          VB: Public Current As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointerEventData.Controller
      commentId: F:TechXR.Core.Sense.LaserPointerEventData.Controller
      language: CSharp
      name:
        CSharp: Controller
        VB: Controller
      nameWithType:
        CSharp: LaserPointerEventData.Controller
        VB: LaserPointerEventData.Controller
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerEventData.Controller
        VB: TechXR.Core.Sense.LaserPointerEventData.Controller
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Controller
        path: ''
        startLine: 2414
      summary: "\nLaserPointer controller\n"
      example: []
      syntax:
        content:
          CSharp: public IUILaserPointer Controller
          VB: Public Controller As IUILaserPointer
        return:
          type: TechXR.Core.Sense.IUILaserPointer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointerEventData.#ctor(EventSystem)
      commentId: M:TechXR.Core.Sense.LaserPointerEventData.#ctor(EventSystem)
      language: CSharp
      name:
        CSharp: LaserPointerEventData(EventSystem)
        VB: LaserPointerEventData(EventSystem)
      nameWithType:
        CSharp: LaserPointerEventData.LaserPointerEventData(EventSystem)
        VB: LaserPointerEventData.LaserPointerEventData(EventSystem)
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerEventData.LaserPointerEventData(EventSystem)
        VB: TechXR.Core.Sense.LaserPointerEventData.LaserPointerEventData(EventSystem)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: .ctor
        path: ''
        startLine: 2419
      summary: "\nEvent data for the laser pointer event\n"
      example: []
      syntax:
        content:
          CSharp: public LaserPointerEventData(EventSystem e)
          VB: Public Sub New(e As EventSystem)
        parameters:
        - id: e
          type: Global.EventSystem
          description: ''
      overload: TechXR.Core.Sense.LaserPointerEventData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointerEventData.Reset
      commentId: M:TechXR.Core.Sense.LaserPointerEventData.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: LaserPointerEventData.Reset()
        VB: LaserPointerEventData.Reset()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerEventData.Reset()
        VB: TechXR.Core.Sense.LaserPointerEventData.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Reset
        path: ''
        startLine: 2446
      summary: "\nReset event data\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: TechXR.Core.Sense.LaserPointerEventData.Reset*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TechXR.Core.Sense.SenseEventDelegate
    commentId: T:TechXR.Core.Sense.SenseEventDelegate
    language: CSharp
    name:
      CSharp: SenseEventDelegate
      VB: SenseEventDelegate
    nameWithType:
      CSharp: SenseEventDelegate
      VB: SenseEventDelegate
    qualifiedName:
      CSharp: TechXR.Core.Sense.SenseEventDelegate
      VB: TechXR.Core.Sense.SenseEventDelegate
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: SenseEventDelegate
      path: ''
      startLine: 2466
    summary: "\nSense event delegate\n"
    example: []
    syntax:
      content:
        CSharp: public delegate void SenseEventDelegate(params object[] args);
        VB: Public Delegate Sub SenseEventDelegate(ParamArray args As Object())
      parameters:
      - id: args
        type: System.Object[]
        description: ''
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: TechXR.Core.Sense.SenseEvent
    commentId: T:TechXR.Core.Sense.SenseEvent
    language: CSharp
    name:
      CSharp: SenseEvent
      VB: SenseEvent
    nameWithType:
      CSharp: SenseEvent
      VB: SenseEvent
    qualifiedName:
      CSharp: TechXR.Core.Sense.SenseEvent
      VB: TechXR.Core.Sense.SenseEvent
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: SenseEvent
      path: ''
      startLine: 2471
    summary: "\nEvents to be registered by the XR Manager\n"
    example: []
    syntax:
      content:
        CSharp: public enum SenseEvent
        VB: Public Enum SenseEvent
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TechXR.Core.Sense.SenseEvent.OBJECT_GRABBED
      commentId: F:TechXR.Core.Sense.SenseEvent.OBJECT_GRABBED
      language: CSharp
      name:
        CSharp: OBJECT_GRABBED
        VB: OBJECT_GRABBED
      nameWithType:
        CSharp: SenseEvent.OBJECT_GRABBED
        VB: SenseEvent.OBJECT_GRABBED
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.OBJECT_GRABBED
        VB: TechXR.Core.Sense.SenseEvent.OBJECT_GRABBED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OBJECT_GRABBED
        path: ''
        startLine: 2474
      syntax:
        content:
          CSharp: OBJECT_GRABBED = 0
          VB: OBJECT_GRABBED = 0
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.OBJECT_RELEASED
      commentId: F:TechXR.Core.Sense.SenseEvent.OBJECT_RELEASED
      language: CSharp
      name:
        CSharp: OBJECT_RELEASED
        VB: OBJECT_RELEASED
      nameWithType:
        CSharp: SenseEvent.OBJECT_RELEASED
        VB: SenseEvent.OBJECT_RELEASED
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.OBJECT_RELEASED
        VB: TechXR.Core.Sense.SenseEvent.OBJECT_RELEASED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OBJECT_RELEASED
        path: ''
        startLine: 2476
      syntax:
        content:
          CSharp: OBJECT_RELEASED = 1
          VB: OBJECT_RELEASED = 1
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.OBJECT_CLICKED
      commentId: F:TechXR.Core.Sense.SenseEvent.OBJECT_CLICKED
      language: CSharp
      name:
        CSharp: OBJECT_CLICKED
        VB: OBJECT_CLICKED
      nameWithType:
        CSharp: SenseEvent.OBJECT_CLICKED
        VB: SenseEvent.OBJECT_CLICKED
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.OBJECT_CLICKED
        VB: TechXR.Core.Sense.SenseEvent.OBJECT_CLICKED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OBJECT_CLICKED
        path: ''
        startLine: 2478
      syntax:
        content:
          CSharp: OBJECT_CLICKED = 2
          VB: OBJECT_CLICKED = 2
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.DATA_LOADING_COMPLETE
      commentId: F:TechXR.Core.Sense.SenseEvent.DATA_LOADING_COMPLETE
      language: CSharp
      name:
        CSharp: DATA_LOADING_COMPLETE
        VB: DATA_LOADING_COMPLETE
      nameWithType:
        CSharp: SenseEvent.DATA_LOADING_COMPLETE
        VB: SenseEvent.DATA_LOADING_COMPLETE
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.DATA_LOADING_COMPLETE
        VB: TechXR.Core.Sense.SenseEvent.DATA_LOADING_COMPLETE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: DATA_LOADING_COMPLETE
        path: ''
        startLine: 2480
      syntax:
        content:
          CSharp: DATA_LOADING_COMPLETE = 3
          VB: DATA_LOADING_COMPLETE = 3
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_C_UP
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_C_UP
      language: CSharp
      name:
        CSharp: BUTTON_C_UP
        VB: BUTTON_C_UP
      nameWithType:
        CSharp: SenseEvent.BUTTON_C_UP
        VB: SenseEvent.BUTTON_C_UP
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_C_UP
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_C_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_C_UP
        path: ''
        startLine: 2482
      syntax:
        content:
          CSharp: BUTTON_C_UP = 4
          VB: BUTTON_C_UP = 4
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_C_DOWN
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_C_DOWN
      language: CSharp
      name:
        CSharp: BUTTON_C_DOWN
        VB: BUTTON_C_DOWN
      nameWithType:
        CSharp: SenseEvent.BUTTON_C_DOWN
        VB: SenseEvent.BUTTON_C_DOWN
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_C_DOWN
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_C_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_C_DOWN
        path: ''
        startLine: 2482
      syntax:
        content:
          CSharp: BUTTON_C_DOWN = 5
          VB: BUTTON_C_DOWN = 5
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_C_PRESS_CONTINUE
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_C_PRESS_CONTINUE
      language: CSharp
      name:
        CSharp: BUTTON_C_PRESS_CONTINUE
        VB: BUTTON_C_PRESS_CONTINUE
      nameWithType:
        CSharp: SenseEvent.BUTTON_C_PRESS_CONTINUE
        VB: SenseEvent.BUTTON_C_PRESS_CONTINUE
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_C_PRESS_CONTINUE
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_C_PRESS_CONTINUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_C_PRESS_CONTINUE
        path: ''
        startLine: 2482
      syntax:
        content:
          CSharp: BUTTON_C_PRESS_CONTINUE = 6
          VB: BUTTON_C_PRESS_CONTINUE = 6
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_A_UP
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_A_UP
      language: CSharp
      name:
        CSharp: BUTTON_A_UP
        VB: BUTTON_A_UP
      nameWithType:
        CSharp: SenseEvent.BUTTON_A_UP
        VB: SenseEvent.BUTTON_A_UP
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_A_UP
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_A_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_A_UP
        path: ''
        startLine: 2484
      syntax:
        content:
          CSharp: BUTTON_A_UP = 7
          VB: BUTTON_A_UP = 7
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_A_DOWN
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_A_DOWN
      language: CSharp
      name:
        CSharp: BUTTON_A_DOWN
        VB: BUTTON_A_DOWN
      nameWithType:
        CSharp: SenseEvent.BUTTON_A_DOWN
        VB: SenseEvent.BUTTON_A_DOWN
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_A_DOWN
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_A_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_A_DOWN
        path: ''
        startLine: 2484
      syntax:
        content:
          CSharp: BUTTON_A_DOWN = 8
          VB: BUTTON_A_DOWN = 8
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_A_PRESS_CONTINUE
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_A_PRESS_CONTINUE
      language: CSharp
      name:
        CSharp: BUTTON_A_PRESS_CONTINUE
        VB: BUTTON_A_PRESS_CONTINUE
      nameWithType:
        CSharp: SenseEvent.BUTTON_A_PRESS_CONTINUE
        VB: SenseEvent.BUTTON_A_PRESS_CONTINUE
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_A_PRESS_CONTINUE
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_A_PRESS_CONTINUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_A_PRESS_CONTINUE
        path: ''
        startLine: 2484
      syntax:
        content:
          CSharp: BUTTON_A_PRESS_CONTINUE = 9
          VB: BUTTON_A_PRESS_CONTINUE = 9
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_B_UP
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_B_UP
      language: CSharp
      name:
        CSharp: BUTTON_B_UP
        VB: BUTTON_B_UP
      nameWithType:
        CSharp: SenseEvent.BUTTON_B_UP
        VB: SenseEvent.BUTTON_B_UP
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_B_UP
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_B_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_B_UP
        path: ''
        startLine: 2486
      syntax:
        content:
          CSharp: BUTTON_B_UP = 10
          VB: BUTTON_B_UP = 10
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_B_DOWN
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_B_DOWN
      language: CSharp
      name:
        CSharp: BUTTON_B_DOWN
        VB: BUTTON_B_DOWN
      nameWithType:
        CSharp: SenseEvent.BUTTON_B_DOWN
        VB: SenseEvent.BUTTON_B_DOWN
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_B_DOWN
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_B_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_B_DOWN
        path: ''
        startLine: 2486
      syntax:
        content:
          CSharp: BUTTON_B_DOWN = 11
          VB: BUTTON_B_DOWN = 11
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_B_PRESS_CONTINUE
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_B_PRESS_CONTINUE
      language: CSharp
      name:
        CSharp: BUTTON_B_PRESS_CONTINUE
        VB: BUTTON_B_PRESS_CONTINUE
      nameWithType:
        CSharp: SenseEvent.BUTTON_B_PRESS_CONTINUE
        VB: SenseEvent.BUTTON_B_PRESS_CONTINUE
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_B_PRESS_CONTINUE
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_B_PRESS_CONTINUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_B_PRESS_CONTINUE
        path: ''
        startLine: 2486
      syntax:
        content:
          CSharp: BUTTON_B_PRESS_CONTINUE = 12
          VB: BUTTON_B_PRESS_CONTINUE = 12
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_D_UP
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_D_UP
      language: CSharp
      name:
        CSharp: BUTTON_D_UP
        VB: BUTTON_D_UP
      nameWithType:
        CSharp: SenseEvent.BUTTON_D_UP
        VB: SenseEvent.BUTTON_D_UP
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_D_UP
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_D_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_D_UP
        path: ''
        startLine: 2488
      syntax:
        content:
          CSharp: BUTTON_D_UP = 13
          VB: BUTTON_D_UP = 13
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_D_DOWN
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_D_DOWN
      language: CSharp
      name:
        CSharp: BUTTON_D_DOWN
        VB: BUTTON_D_DOWN
      nameWithType:
        CSharp: SenseEvent.BUTTON_D_DOWN
        VB: SenseEvent.BUTTON_D_DOWN
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_D_DOWN
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_D_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_D_DOWN
        path: ''
        startLine: 2488
      syntax:
        content:
          CSharp: BUTTON_D_DOWN = 14
          VB: BUTTON_D_DOWN = 14
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_D_PRESS_CONTINUE
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_D_PRESS_CONTINUE
      language: CSharp
      name:
        CSharp: BUTTON_D_PRESS_CONTINUE
        VB: BUTTON_D_PRESS_CONTINUE
      nameWithType:
        CSharp: SenseEvent.BUTTON_D_PRESS_CONTINUE
        VB: SenseEvent.BUTTON_D_PRESS_CONTINUE
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_D_PRESS_CONTINUE
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_D_PRESS_CONTINUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_D_PRESS_CONTINUE
        path: ''
        startLine: 2488
      syntax:
        content:
          CSharp: BUTTON_D_PRESS_CONTINUE = 15
          VB: BUTTON_D_PRESS_CONTINUE = 15
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_E_UP
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_E_UP
      language: CSharp
      name:
        CSharp: BUTTON_E_UP
        VB: BUTTON_E_UP
      nameWithType:
        CSharp: SenseEvent.BUTTON_E_UP
        VB: SenseEvent.BUTTON_E_UP
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_E_UP
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_E_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_E_UP
        path: ''
        startLine: 2490
      syntax:
        content:
          CSharp: BUTTON_E_UP = 16
          VB: BUTTON_E_UP = 16
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_E_DOWN
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_E_DOWN
      language: CSharp
      name:
        CSharp: BUTTON_E_DOWN
        VB: BUTTON_E_DOWN
      nameWithType:
        CSharp: SenseEvent.BUTTON_E_DOWN
        VB: SenseEvent.BUTTON_E_DOWN
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_E_DOWN
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_E_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_E_DOWN
        path: ''
        startLine: 2490
      syntax:
        content:
          CSharp: BUTTON_E_DOWN = 17
          VB: BUTTON_E_DOWN = 17
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_E_PRESS_CONTINUE
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_E_PRESS_CONTINUE
      language: CSharp
      name:
        CSharp: BUTTON_E_PRESS_CONTINUE
        VB: BUTTON_E_PRESS_CONTINUE
      nameWithType:
        CSharp: SenseEvent.BUTTON_E_PRESS_CONTINUE
        VB: SenseEvent.BUTTON_E_PRESS_CONTINUE
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_E_PRESS_CONTINUE
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_E_PRESS_CONTINUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_E_PRESS_CONTINUE
        path: ''
        startLine: 2490
      syntax:
        content:
          CSharp: BUTTON_E_PRESS_CONTINUE = 18
          VB: BUTTON_E_PRESS_CONTINUE = 18
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_F_UP
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_F_UP
      language: CSharp
      name:
        CSharp: BUTTON_F_UP
        VB: BUTTON_F_UP
      nameWithType:
        CSharp: SenseEvent.BUTTON_F_UP
        VB: SenseEvent.BUTTON_F_UP
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_F_UP
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_F_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_F_UP
        path: ''
        startLine: 2492
      syntax:
        content:
          CSharp: BUTTON_F_UP = 19
          VB: BUTTON_F_UP = 19
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_F_DOWN
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_F_DOWN
      language: CSharp
      name:
        CSharp: BUTTON_F_DOWN
        VB: BUTTON_F_DOWN
      nameWithType:
        CSharp: SenseEvent.BUTTON_F_DOWN
        VB: SenseEvent.BUTTON_F_DOWN
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_F_DOWN
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_F_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_F_DOWN
        path: ''
        startLine: 2492
      syntax:
        content:
          CSharp: BUTTON_F_DOWN = 20
          VB: BUTTON_F_DOWN = 20
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TechXR.Core.Sense.SenseEvent.BUTTON_F_PRESS_CONTINUE
      commentId: F:TechXR.Core.Sense.SenseEvent.BUTTON_F_PRESS_CONTINUE
      language: CSharp
      name:
        CSharp: BUTTON_F_PRESS_CONTINUE
        VB: BUTTON_F_PRESS_CONTINUE
      nameWithType:
        CSharp: SenseEvent.BUTTON_F_PRESS_CONTINUE
        VB: SenseEvent.BUTTON_F_PRESS_CONTINUE
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseEvent.BUTTON_F_PRESS_CONTINUE
        VB: TechXR.Core.Sense.SenseEvent.BUTTON_F_PRESS_CONTINUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BUTTON_F_PRESS_CONTINUE
        path: ''
        startLine: 2492
      syntax:
        content:
          CSharp: BUTTON_F_PRESS_CONTINUE = 21
          VB: BUTTON_F_PRESS_CONTINUE = 21
        return:
          type: TechXR.Core.Sense.SenseEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TechXR.Core.Sense.SenseManager
    commentId: T:TechXR.Core.Sense.SenseManager
    language: CSharp
    name:
      CSharp: SenseManager
      VB: SenseManager
    nameWithType:
      CSharp: SenseManager
      VB: SenseManager
    qualifiedName:
      CSharp: TechXR.Core.Sense.SenseManager
      VB: TechXR.Core.Sense.SenseManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: SenseManager
      path: ''
      startLine: 2507
    summary: "\nSingleton manager class for managing the XR objects and functionalities\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SenseManager : MonoBehaviour'
        VB: >-
          Public Class SenseManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.SenseManager._instance
      commentId: F:TechXR.Core.Sense.SenseManager._instance
      language: CSharp
      name:
        CSharp: _instance
        VB: _instance
      nameWithType:
        CSharp: SenseManager._instance
        VB: SenseManager._instance
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager._instance
        VB: TechXR.Core.Sense.SenseManager._instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: _instance
        path: ''
        startLine: 2512
      summary: "\nStatic class reference\n"
      example: []
      syntax:
        content:
          CSharp: public static SenseManager _instance
          VB: Public Shared _instance As SenseManager
        return:
          type: TechXR.Core.Sense.SenseManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Sense.SenseManager.CurrentPointerMode
      commentId: P:TechXR.Core.Sense.SenseManager.CurrentPointerMode
      language: CSharp
      name:
        CSharp: CurrentPointerMode
        VB: CurrentPointerMode
      nameWithType:
        CSharp: SenseManager.CurrentPointerMode
        VB: SenseManager.CurrentPointerMode
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.CurrentPointerMode
        VB: TechXR.Core.Sense.SenseManager.CurrentPointerMode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: CurrentPointerMode
        path: ''
        startLine: 2520
      summary: "\nCurrent pointer display mode\n- LaserPointer\n- Teleporter\n"
      example: []
      syntax:
        content:
          CSharp: public Defs.PointerDisplayMode CurrentPointerMode { get; set; }
          VB: Public Property CurrentPointerMode As Defs.PointerDisplayMode
        parameters: []
        return:
          type: TechXR.Core.Sense.Defs.PointerDisplayMode
      overload: TechXR.Core.Sense.SenseManager.CurrentPointerMode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.TogglePointerDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.SenseManager.TogglePointerDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: TogglePointerDisplay(Boolean)
        VB: TogglePointerDisplay(Boolean)
      nameWithType:
        CSharp: SenseManager.TogglePointerDisplay(Boolean)
        VB: SenseManager.TogglePointerDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.TogglePointerDisplay(System.Boolean)
        VB: TechXR.Core.Sense.SenseManager.TogglePointerDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TogglePointerDisplay
        path: ''
        startLine: 2636
      summary: "\nToggle VR Pointer display\n"
      example: []
      syntax:
        content:
          CSharp: public void TogglePointerDisplay(bool flag)
          VB: Public Sub TogglePointerDisplay(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: 'True: Show. False: Hide'
      overload: TechXR.Core.Sense.SenseManager.TogglePointerDisplay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      commentId: M:TechXR.Core.Sense.SenseManager.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      language: CSharp
      name:
        CSharp: SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: SetPointerDisplayMode(Defs.PointerDisplayMode)
      nameWithType:
        CSharp: SenseManager.SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: SenseManager.SetPointerDisplayMode(Defs.PointerDisplayMode)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        VB: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerDisplayMode
        path: ''
        startLine: 2647
      summary: "\nSet interaction mode:\n- LaserPointer\n- Teleporter\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPointerDisplayMode(Defs.PointerDisplayMode mode)
          VB: Public Sub SetPointerDisplayMode(mode As Defs.PointerDisplayMode)
        parameters:
        - id: mode
          type: TechXR.Core.Sense.Defs.PointerDisplayMode
          description: Defs.PointerDisplayMode.X
      overload: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.SetPointerColor(Color)
      commentId: M:TechXR.Core.Sense.SenseManager.SetPointerColor(Color)
      language: CSharp
      name:
        CSharp: SetPointerColor(Color)
        VB: SetPointerColor(Color)
      nameWithType:
        CSharp: SenseManager.SetPointerColor(Color)
        VB: SenseManager.SetPointerColor(Color)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.SetPointerColor(Color)
        VB: TechXR.Core.Sense.SenseManager.SetPointerColor(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerColor
        path: ''
        startLine: 2656
      summary: "\nSet laser pointer color\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPointerColor(Color color)
          VB: Public Sub SetPointerColor(color As Color)
        parameters:
        - id: color
          type: Global.Color
          description: ''
      overload: TechXR.Core.Sense.SenseManager.SetPointerColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.GetCurrentGameObject
      commentId: M:TechXR.Core.Sense.SenseManager.GetCurrentGameObject
      language: CSharp
      name:
        CSharp: GetCurrentGameObject()
        VB: GetCurrentGameObject()
      nameWithType:
        CSharp: SenseManager.GetCurrentGameObject()
        VB: SenseManager.GetCurrentGameObject()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.GetCurrentGameObject()
        VB: TechXR.Core.Sense.SenseManager.GetCurrentGameObject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetCurrentGameObject
        path: ''
        startLine: 2665
      summary: "\nGet the current gameobject returned by the laser pointer\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject GetCurrentGameObject()
          VB: Public Function GetCurrentGameObject As GameObject
        return:
          type: Global.GameObject
          description: ''
      overload: TechXR.Core.Sense.SenseManager.GetCurrentGameObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.GetController
      commentId: M:TechXR.Core.Sense.SenseManager.GetController
      language: CSharp
      name:
        CSharp: GetController()
        VB: GetController()
      nameWithType:
        CSharp: SenseManager.GetController()
        VB: SenseManager.GetController()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.GetController()
        VB: TechXR.Core.Sense.SenseManager.GetController()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetController
        path: ''
        startLine: 2674
      summary: "\nGet the controller object attached to the laser pointer\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject GetController()
          VB: Public Function GetController As GameObject
        return:
          type: Global.GameObject
          description: ''
      overload: TechXR.Core.Sense.SenseManager.GetController*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.GetLaserPointer
      commentId: M:TechXR.Core.Sense.SenseManager.GetLaserPointer
      language: CSharp
      name:
        CSharp: GetLaserPointer()
        VB: GetLaserPointer()
      nameWithType:
        CSharp: SenseManager.GetLaserPointer()
        VB: SenseManager.GetLaserPointer()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.GetLaserPointer()
        VB: TechXR.Core.Sense.SenseManager.GetLaserPointer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetLaserPointer
        path: ''
        startLine: 2683
      summary: "\nGet the laser pointer reference\n"
      example: []
      syntax:
        content:
          CSharp: public LaserPointer GetLaserPointer()
          VB: Public Function GetLaserPointer As LaserPointer
        return:
          type: TechXR.Core.Sense.LaserPointer
          description: ''
      overload: TechXR.Core.Sense.SenseManager.GetLaserPointer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.ToggleTeleportMode(System.Boolean)
      commentId: M:TechXR.Core.Sense.SenseManager.ToggleTeleportMode(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleTeleportMode(Boolean)
        VB: ToggleTeleportMode(Boolean)
      nameWithType:
        CSharp: SenseManager.ToggleTeleportMode(Boolean)
        VB: SenseManager.ToggleTeleportMode(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.ToggleTeleportMode(System.Boolean)
        VB: TechXR.Core.Sense.SenseManager.ToggleTeleportMode(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleTeleportMode
        path: ''
        startLine: 2692
      summary: "\nToggle teleport mode\n"
      example: []
      syntax:
        content:
          CSharp: public void ToggleTeleportMode(bool flag)
          VB: Public Sub ToggleTeleportMode(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.SenseManager.ToggleTeleportMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseManager.PopulateClassObjects
      commentId: M:TechXR.Core.Sense.SenseManager.PopulateClassObjects
      language: CSharp
      name:
        CSharp: PopulateClassObjects()
        VB: PopulateClassObjects()
      nameWithType:
        CSharp: SenseManager.PopulateClassObjects()
        VB: SenseManager.PopulateClassObjects()
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseManager.PopulateClassObjects()
        VB: TechXR.Core.Sense.SenseManager.PopulateClassObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: PopulateClassObjects
        path: ''
        startLine: 2699
      summary: "\nCalled from the editor. Auto-populates the class objects\n"
      example: []
      syntax:
        content:
          CSharp: public void PopulateClassObjects()
          VB: Public Sub PopulateClassObjects
      overload: TechXR.Core.Sense.SenseManager.PopulateClassObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.GyroScript
    commentId: T:TechXR.Core.Sense.GyroScript
    language: CSharp
    name:
      CSharp: GyroScript
      VB: GyroScript
    nameWithType:
      CSharp: GyroScript
      VB: GyroScript
    qualifiedName:
      CSharp: TechXR.Core.Sense.GyroScript
      VB: TechXR.Core.Sense.GyroScript
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: GyroScript
      path: ''
      startLine: 2745
    summary: "\nManually manage the orientation with the device gyroscope data\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GyroScript : MonoBehaviour'
        VB: >-
          Public Class GyroScript

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.GyroScript.PlayerBody
      commentId: F:TechXR.Core.Sense.GyroScript.PlayerBody
      language: CSharp
      name:
        CSharp: PlayerBody
        VB: PlayerBody
      nameWithType:
        CSharp: GyroScript.PlayerBody
        VB: GyroScript.PlayerBody
      qualifiedName:
        CSharp: TechXR.Core.Sense.GyroScript.PlayerBody
        VB: TechXR.Core.Sense.GyroScript.PlayerBody
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: PlayerBody
        path: ''
        startLine: 2747
      syntax:
        content:
          CSharp: public Transform PlayerBody
          VB: Public PlayerBody As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.GyroScript.SetEnabled(System.Boolean)
      commentId: M:TechXR.Core.Sense.GyroScript.SetEnabled(System.Boolean)
      language: CSharp
      name:
        CSharp: SetEnabled(Boolean)
        VB: SetEnabled(Boolean)
      nameWithType:
        CSharp: GyroScript.SetEnabled(Boolean)
        VB: GyroScript.SetEnabled(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.GyroScript.SetEnabled(System.Boolean)
        VB: TechXR.Core.Sense.GyroScript.SetEnabled(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetEnabled
        path: ''
        startLine: 2816
      summary: "\nEnable and callibrate the Y-angle\n"
      example: []
      syntax:
        content:
          CSharp: public void SetEnabled(bool value)
          VB: Public Sub SetEnabled(value As Boolean)
        parameters:
        - id: value
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.GyroScript.SetEnabled*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.Grabbable
    commentId: T:TechXR.Core.Sense.Grabbable
    language: CSharp
    name:
      CSharp: Grabbable
      VB: Grabbable
    nameWithType:
      CSharp: Grabbable
      VB: Grabbable
    qualifiedName:
      CSharp: TechXR.Core.Sense.Grabbable
      VB: TechXR.Core.Sense.Grabbable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: Grabbable
      path: ''
      startLine: 2834
    summary: "\nGrabbable Object\nManages all the configurations required to make a 3D object grabbable by the controller\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Grabbable : MonoBehaviour, IObject, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler'
        VB: >-
          Public Class Grabbable

              Inherits MonoBehaviour

              Implements IObject, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler
    inheritance:
    - System.Object
    implements:
    - TechXR.Core.Sense.IObject
    - Global.IPointerDownHandler
    - Global.IPointerUpHandler
    - Global.IPointerClickHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.Grabbable.AnchorPoint
      commentId: F:TechXR.Core.Sense.Grabbable.AnchorPoint
      language: CSharp
      name:
        CSharp: AnchorPoint
        VB: AnchorPoint
      nameWithType:
        CSharp: Grabbable.AnchorPoint
        VB: Grabbable.AnchorPoint
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.AnchorPoint
        VB: TechXR.Core.Sense.Grabbable.AnchorPoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: AnchorPoint
        path: ''
        startLine: 2838
      syntax:
        content:
          CSharp: public GameObject AnchorPoint
          VB: Public AnchorPoint As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition
      commentId: M:TechXR.Core.Sense.Grabbable.GetObjectLocalPosition
      language: CSharp
      name:
        CSharp: GetObjectLocalPosition()
        VB: GetObjectLocalPosition()
      nameWithType:
        CSharp: Grabbable.GetObjectLocalPosition()
        VB: Grabbable.GetObjectLocalPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition()
        VB: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectLocalPosition
        path: ''
        startLine: 2864
      summary: "\nGet local position of the object\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetObjectLocalPosition()
          VB: Public Function GetObjectLocalPosition As Vector3
        return:
          type: Global.Vector3
          description: ''
      overload: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition*
      implements:
      - TechXR.Core.Sense.IObject.GetObjectLocalPosition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation
      commentId: M:TechXR.Core.Sense.Grabbable.GetObjectLocalRotation
      language: CSharp
      name:
        CSharp: GetObjectLocalRotation()
        VB: GetObjectLocalRotation()
      nameWithType:
        CSharp: Grabbable.GetObjectLocalRotation()
        VB: Grabbable.GetObjectLocalRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation()
        VB: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectLocalRotation
        path: ''
        startLine: 2873
      summary: "\nGet local rotation of the object\n"
      example: []
      syntax:
        content:
          CSharp: public Quaternion GetObjectLocalRotation()
          VB: Public Function GetObjectLocalRotation As Quaternion
        return:
          type: Global.Quaternion
          description: ''
      overload: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation*
      implements:
      - TechXR.Core.Sense.IObject.GetObjectLocalRotation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabbable.GetObjectPosition
      commentId: M:TechXR.Core.Sense.Grabbable.GetObjectPosition
      language: CSharp
      name:
        CSharp: GetObjectPosition()
        VB: GetObjectPosition()
      nameWithType:
        CSharp: Grabbable.GetObjectPosition()
        VB: Grabbable.GetObjectPosition()
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.GetObjectPosition()
        VB: TechXR.Core.Sense.Grabbable.GetObjectPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectPosition
        path: ''
        startLine: 2882
      summary: "\nGet global position of the object\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetObjectPosition()
          VB: Public Function GetObjectPosition As Vector3
        return:
          type: Global.Vector3
          description: ''
      overload: TechXR.Core.Sense.Grabbable.GetObjectPosition*
      implements:
      - TechXR.Core.Sense.IObject.GetObjectPosition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabbable.GetObjectRotation
      commentId: M:TechXR.Core.Sense.Grabbable.GetObjectRotation
      language: CSharp
      name:
        CSharp: GetObjectRotation()
        VB: GetObjectRotation()
      nameWithType:
        CSharp: Grabbable.GetObjectRotation()
        VB: Grabbable.GetObjectRotation()
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.GetObjectRotation()
        VB: TechXR.Core.Sense.Grabbable.GetObjectRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetObjectRotation
        path: ''
        startLine: 2891
      summary: "\nGet global rotation of the object\n"
      example: []
      syntax:
        content:
          CSharp: public Quaternion GetObjectRotation()
          VB: Public Function GetObjectRotation As Quaternion
        return:
          type: Global.Quaternion
          description: ''
      overload: TechXR.Core.Sense.Grabbable.GetObjectRotation*
      implements:
      - TechXR.Core.Sense.IObject.GetObjectRotation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabbable.OnPointerDown(PointerEventData)
      commentId: M:TechXR.Core.Sense.Grabbable.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: Grabbable.OnPointerDown(PointerEventData)
        VB: Grabbable.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.OnPointerDown(PointerEventData)
        VB: TechXR.Core.Sense.Grabbable.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OnPointerDown
        path: ''
        startLine: 2901
      summary: "\nObject grabbed event\nDispatches SenseEvent.OBJECT_GRABBED\n"
      example: []
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
          description: ''
      overload: TechXR.Core.Sense.Grabbable.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabbable.OnPointerUp(PointerEventData)
      commentId: M:TechXR.Core.Sense.Grabbable.OnPointerUp(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerUp(PointerEventData)
        VB: OnPointerUp(PointerEventData)
      nameWithType:
        CSharp: Grabbable.OnPointerUp(PointerEventData)
        VB: Grabbable.OnPointerUp(PointerEventData)
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.OnPointerUp(PointerEventData)
        VB: TechXR.Core.Sense.Grabbable.OnPointerUp(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OnPointerUp
        path: ''
        startLine: 2911
      summary: "\nObject released event\nDispatches SenseEvent.OBJECT_RELEASED\n"
      example: []
      syntax:
        content:
          CSharp: public void OnPointerUp(PointerEventData eventData)
          VB: Public Sub OnPointerUp(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
          description: ''
      overload: TechXR.Core.Sense.Grabbable.OnPointerUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabbable.OnPointerClick(PointerEventData)
      commentId: M:TechXR.Core.Sense.Grabbable.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: Grabbable.OnPointerClick(PointerEventData)
        VB: Grabbable.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabbable.OnPointerClick(PointerEventData)
        VB: TechXR.Core.Sense.Grabbable.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OnPointerClick
        path: ''
        startLine: 2921
      summary: "\nObject clicked event\nDispatches SenseEvent.OBJECT_CLICKED\n"
      example: []
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
          description: ''
      overload: TechXR.Core.Sense.Grabbable.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.Grabber
    commentId: T:TechXR.Core.Sense.Grabber
    language: CSharp
    name:
      CSharp: Grabber
      VB: Grabber
    nameWithType:
      CSharp: Grabber
      VB: Grabber
    qualifiedName:
      CSharp: TechXR.Core.Sense.Grabber
      VB: TechXR.Core.Sense.Grabber
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: Grabber
      path: ''
      startLine: 2939
    summary: "\nHand grabber functionality class.\nAdded to the main XR Pointer\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Grabber : MonoBehaviour'
        VB: >-
          Public Class Grabber

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.Grabber.TryGrabObject(System.Object[])
      commentId: M:TechXR.Core.Sense.Grabber.TryGrabObject(System.Object[])
      language: CSharp
      name:
        CSharp: TryGrabObject(Object[])
        VB: TryGrabObject(Object())
      nameWithType:
        CSharp: Grabber.TryGrabObject(Object[])
        VB: Grabber.TryGrabObject(Object())
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabber.TryGrabObject(System.Object[])
        VB: TechXR.Core.Sense.Grabber.TryGrabObject(System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TryGrabObject
        path: ''
        startLine: 2985
      summary: "\nGrab object\nNeeds two arguments:\n1. GameObject to be grabbed\n2. Anchor point object of the GameObject. If null then the default center and orientation is used\n"
      example: []
      syntax:
        content:
          CSharp: public void TryGrabObject(params object[] args)
          VB: Public Sub TryGrabObject(ParamArray args As Object())
        parameters:
        - id: args
          type: System.Object[]
          description: ''
      overload: TechXR.Core.Sense.Grabber.TryGrabObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabber.DropObject(System.Object[])
      commentId: M:TechXR.Core.Sense.Grabber.DropObject(System.Object[])
      language: CSharp
      name:
        CSharp: DropObject(Object[])
        VB: DropObject(Object())
      nameWithType:
        CSharp: Grabber.DropObject(Object[])
        VB: Grabber.DropObject(Object())
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabber.DropObject(System.Object[])
        VB: TechXR.Core.Sense.Grabber.DropObject(System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: DropObject
        path: ''
        startLine: 3007
      summary: "\nRelease the GameObject\n"
      example: []
      syntax:
        content:
          CSharp: public void DropObject(params object[] args)
          VB: Public Sub DropObject(ParamArray args As Object())
        parameters:
        - id: args
          type: System.Object[]
          description: ''
      overload: TechXR.Core.Sense.Grabber.DropObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject(GameObject)
      commentId: M:TechXR.Core.Sense.Grabber.CheckIfGrabbableObject(GameObject)
      language: CSharp
      name:
        CSharp: CheckIfGrabbableObject(GameObject)
        VB: CheckIfGrabbableObject(GameObject)
      nameWithType:
        CSharp: Grabber.CheckIfGrabbableObject(GameObject)
        VB: Grabber.CheckIfGrabbableObject(GameObject)
      qualifiedName:
        CSharp: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject(GameObject)
        VB: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: CheckIfGrabbableObject
        path: ''
        startLine: 3028
      summary: "\nCheck to see if the current gameobject is grabbable\n"
      example: []
      syntax:
        content:
          CSharp: public bool CheckIfGrabbableObject(GameObject gameObject)
          VB: Public Function CheckIfGrabbableObject(gameObject As GameObject) As Boolean
        parameters:
        - id: gameObject
          type: Global.GameObject
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.SenseController
    commentId: T:TechXR.Core.Sense.SenseController
    language: CSharp
    name:
      CSharp: SenseController
      VB: SenseController
    nameWithType:
      CSharp: SenseController
      VB: SenseController
    qualifiedName:
      CSharp: TechXR.Core.Sense.SenseController
      VB: TechXR.Core.Sense.SenseController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: SenseController
      path: ''
      startLine: 3056
    summary: "\nSense controller manager class\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SenseController : MonoBehaviour'
        VB: >-
          Public Class SenseController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.SenseController.ToggleJoystickMovement(System.Boolean)
      commentId: M:TechXR.Core.Sense.SenseController.ToggleJoystickMovement(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleJoystickMovement(Boolean)
        VB: ToggleJoystickMovement(Boolean)
      nameWithType:
        CSharp: SenseController.ToggleJoystickMovement(Boolean)
        VB: SenseController.ToggleJoystickMovement(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseController.ToggleJoystickMovement(System.Boolean)
        VB: TechXR.Core.Sense.SenseController.ToggleJoystickMovement(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleJoystickMovement
        path: ''
        startLine: 3112
      summary: "\nToggle joystick movement\n"
      example: []
      syntax:
        content:
          CSharp: public void ToggleJoystickMovement(bool flag)
          VB: Public Sub ToggleJoystickMovement(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: 'True: Enable. False: Disable'
      overload: TechXR.Core.Sense.SenseController.ToggleJoystickMovement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseController.ToggleTeleportMovement(System.Boolean)
      commentId: M:TechXR.Core.Sense.SenseController.ToggleTeleportMovement(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleTeleportMovement(Boolean)
        VB: ToggleTeleportMovement(Boolean)
      nameWithType:
        CSharp: SenseController.ToggleTeleportMovement(Boolean)
        VB: SenseController.ToggleTeleportMovement(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseController.ToggleTeleportMovement(System.Boolean)
        VB: TechXR.Core.Sense.SenseController.ToggleTeleportMovement(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleTeleportMovement
        path: ''
        startLine: 3121
      summary: "\nToggle teleport movement\n"
      example: []
      syntax:
        content:
          CSharp: public void ToggleTeleportMovement(bool flag)
          VB: Public Sub ToggleTeleportMovement(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: 'True: Enable. False: Disable'
      overload: TechXR.Core.Sense.SenseController.ToggleTeleportMovement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseController.SetPointerType(System.Int32)
      commentId: M:TechXR.Core.Sense.SenseController.SetPointerType(System.Int32)
      language: CSharp
      name:
        CSharp: SetPointerType(Int32)
        VB: SetPointerType(Int32)
      nameWithType:
        CSharp: SenseController.SetPointerType(Int32)
        VB: SenseController.SetPointerType(Int32)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseController.SetPointerType(System.Int32)
        VB: TechXR.Core.Sense.SenseController.SetPointerType(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerType
        path: ''
        startLine: 3132
      summary: "\nSet the current pointer type:\n0: Default Pointer\n1: Hand pointer\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPointerType(int index)
          VB: Public Sub SetPointerType(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: '0: Default pointer. 1: Hand pointer'
      overload: TechXR.Core.Sense.SenseController.SetPointerType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.SenseController.ToggleDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.SenseController.ToggleDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleDisplay(Boolean)
        VB: ToggleDisplay(Boolean)
      nameWithType:
        CSharp: SenseController.ToggleDisplay(Boolean)
        VB: SenseController.ToggleDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.SenseController.ToggleDisplay(System.Boolean)
        VB: TechXR.Core.Sense.SenseController.ToggleDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleDisplay
        path: ''
        startLine: 3155
      summary: "\nToggle the pointer display on/off\n"
      example: []
      syntax:
        content:
          CSharp: public void ToggleDisplay(bool flag)
          VB: Public Sub ToggleDisplay(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: 'True: Show. False: Hide'
      overload: TechXR.Core.Sense.SenseController.ToggleDisplay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.IUILaserPointer
    commentId: T:TechXR.Core.Sense.IUILaserPointer
    language: CSharp
    name:
      CSharp: IUILaserPointer
      VB: IUILaserPointer
    nameWithType:
      CSharp: IUILaserPointer
      VB: IUILaserPointer
    qualifiedName:
      CSharp: TechXR.Core.Sense.IUILaserPointer
      VB: TechXR.Core.Sense.IUILaserPointer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: IUILaserPointer
      path: ''
      startLine: 3183
    syntax:
      content:
        CSharp: 'public abstract class IUILaserPointer : MonoBehaviour'
        VB: >-
          Public MustInherit Class IUILaserPointer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TechXR.Core.Sense.IUILaserPointer.LaserThickness
      commentId: F:TechXR.Core.Sense.IUILaserPointer.LaserThickness
      language: CSharp
      name:
        CSharp: LaserThickness
        VB: LaserThickness
      nameWithType:
        CSharp: IUILaserPointer.LaserThickness
        VB: IUILaserPointer.LaserThickness
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.LaserThickness
        VB: TechXR.Core.Sense.IUILaserPointer.LaserThickness
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: LaserThickness
        path: ''
        startLine: 3189
      summary: "\nLaser thickness\n"
      example: []
      syntax:
        content:
          CSharp: public float LaserThickness
          VB: Public LaserThickness As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.IUILaserPointer.LaserHitScale
      commentId: F:TechXR.Core.Sense.IUILaserPointer.LaserHitScale
      language: CSharp
      name:
        CSharp: LaserHitScale
        VB: LaserHitScale
      nameWithType:
        CSharp: IUILaserPointer.LaserHitScale
        VB: IUILaserPointer.LaserHitScale
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.LaserHitScale
        VB: TechXR.Core.Sense.IUILaserPointer.LaserHitScale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: LaserHitScale
        path: ''
        startLine: 3193
      summary: "\nLaser hitpoint scale\n"
      example: []
      syntax:
        content:
          CSharp: public float LaserHitScale
          VB: Public LaserHitScale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
      commentId: F:TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
      language: CSharp
      name:
        CSharp: LaserAlwaysOn
        VB: LaserAlwaysOn
      nameWithType:
        CSharp: IUILaserPointer.LaserAlwaysOn
        VB: IUILaserPointer.LaserAlwaysOn
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
        VB: TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: LaserAlwaysOn
        path: ''
        startLine: 3197
      summary: "\nLaser always on or only on demand\n"
      example: []
      syntax:
        content:
          CSharp: public bool LaserAlwaysOn
          VB: Public LaserAlwaysOn As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.IUILaserPointer.Color
      commentId: F:TechXR.Core.Sense.IUILaserPointer.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: IUILaserPointer.Color
        VB: IUILaserPointer.Color
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.Color
        VB: TechXR.Core.Sense.IUILaserPointer.Color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Color
        path: ''
        startLine: 3201
      summary: "\nlaser display color\n"
      example: []
      syntax:
        content:
          CSharp: public Color Color
          VB: Public Color As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.IUILaserPointer.Start
      commentId: M:TechXR.Core.Sense.IUILaserPointer.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: IUILaserPointer.Start()
        VB: IUILaserPointer.Start()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.Start()
        VB: TechXR.Core.Sense.IUILaserPointer.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Start
        path: ''
        startLine: 3229
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TechXR.Core.Sense.IUILaserPointer.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.Update
      commentId: M:TechXR.Core.Sense.IUILaserPointer.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: IUILaserPointer.Update()
        VB: IUILaserPointer.Update()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.Update()
        VB: TechXR.Core.Sense.IUILaserPointer.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Update
        path: ''
        startLine: 3280
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TechXR.Core.Sense.IUILaserPointer.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.Initialize
      commentId: M:TechXR.Core.Sense.IUILaserPointer.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: IUILaserPointer.Initialize()
        VB: IUILaserPointer.Initialize()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.Initialize()
        VB: TechXR.Core.Sense.IUILaserPointer.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Initialize
        path: ''
        startLine: 3347
      syntax:
        content:
          CSharp: protected virtual void Initialize()
          VB: Protected Overridable Sub Initialize
      overload: TechXR.Core.Sense.IUILaserPointer.Initialize*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
      commentId: M:TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
      language: CSharp
      name:
        CSharp: OnEnterControl(GameObject)
        VB: OnEnterControl(GameObject)
      nameWithType:
        CSharp: IUILaserPointer.OnEnterControl(GameObject)
        VB: IUILaserPointer.OnEnterControl(GameObject)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
        VB: TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OnEnterControl
        path: ''
        startLine: 3354
      example: []
      syntax:
        content:
          CSharp: public virtual void OnEnterControl(GameObject control)
          VB: Public Overridable Sub OnEnterControl(control As GameObject)
        parameters:
        - id: control
          type: Global.GameObject
      overload: TechXR.Core.Sense.IUILaserPointer.OnEnterControl*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
      commentId: M:TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
      language: CSharp
      name:
        CSharp: OnExitControl(GameObject)
        VB: OnExitControl(GameObject)
      nameWithType:
        CSharp: IUILaserPointer.OnExitControl(GameObject)
        VB: IUILaserPointer.OnExitControl(GameObject)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
        VB: TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OnExitControl
        path: ''
        startLine: 3355
      syntax:
        content:
          CSharp: public virtual void OnExitControl(GameObject control)
          VB: Public Overridable Sub OnExitControl(control As GameObject)
        parameters:
        - id: control
          type: Global.GameObject
      overload: TechXR.Core.Sense.IUILaserPointer.OnExitControl*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleDisplay(Boolean)
        VB: ToggleDisplay(Boolean)
      nameWithType:
        CSharp: IUILaserPointer.ToggleDisplay(Boolean)
        VB: IUILaserPointer.ToggleDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
        VB: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleDisplay
        path: ''
        startLine: 3361
      summary: "\nToggle the laser pointer display on/off\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void ToggleDisplay(bool flag)
          VB: Public Overridable Sub ToggleDisplay(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      commentId: M:TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      language: CSharp
      name:
        CSharp: SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: SetPointerDisplayMode(Defs.PointerDisplayMode)
      nameWithType:
        CSharp: IUILaserPointer.SetPointerDisplayMode(Defs.PointerDisplayMode)
        VB: IUILaserPointer.SetPointerDisplayMode(Defs.PointerDisplayMode)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        VB: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetPointerDisplayMode
        path: ''
        startLine: 3375
      summary: "\nSet pointer display mode\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void SetPointerDisplayMode(Defs.PointerDisplayMode mode)
          VB: Public Overridable Sub SetPointerDisplayMode(mode As Defs.PointerDisplayMode)
        parameters:
        - id: mode
          type: TechXR.Core.Sense.Defs.PointerDisplayMode
          description: ''
      overload: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.ButtonDown
      commentId: M:TechXR.Core.Sense.IUILaserPointer.ButtonDown
      language: CSharp
      name:
        CSharp: ButtonDown()
        VB: ButtonDown()
      nameWithType:
        CSharp: IUILaserPointer.ButtonDown()
        VB: IUILaserPointer.ButtonDown()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.ButtonDown()
        VB: TechXR.Core.Sense.IUILaserPointer.ButtonDown()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonDown
        path: ''
        startLine: 3382
      syntax:
        content:
          CSharp: public abstract bool ButtonDown()
          VB: Public MustOverride Function ButtonDown As Boolean
        return:
          type: System.Boolean
      overload: TechXR.Core.Sense.IUILaserPointer.ButtonDown*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: TechXR.Core.Sense.IUILaserPointer.ButtonUp
      commentId: M:TechXR.Core.Sense.IUILaserPointer.ButtonUp
      language: CSharp
      name:
        CSharp: ButtonUp()
        VB: ButtonUp()
      nameWithType:
        CSharp: IUILaserPointer.ButtonUp()
        VB: IUILaserPointer.ButtonUp()
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.ButtonUp()
        VB: TechXR.Core.Sense.IUILaserPointer.ButtonUp()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonUp
        path: ''
        startLine: 3383
      syntax:
        content:
          CSharp: public abstract bool ButtonUp()
          VB: Public MustOverride Function ButtonUp As Boolean
        return:
          type: System.Boolean
      overload: TechXR.Core.Sense.IUILaserPointer.ButtonUp*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
      commentId: M:TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
      language: CSharp
      name:
        CSharp: LimitLaserDistance(Single)
        VB: LimitLaserDistance(Single)
      nameWithType:
        CSharp: IUILaserPointer.LimitLaserDistance(Single)
        VB: IUILaserPointer.LimitLaserDistance(Single)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
        VB: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: LimitLaserDistance
        path: ''
        startLine: 3389
      summary: "\nLimits the laser distance for the current frame\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void LimitLaserDistance(float distance)
          VB: Public Overridable Sub LimitLaserDistance(distance As Single)
        parameters:
        - id: distance
          type: System.Single
          description: ''
      overload: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
      commentId: M:TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
      language: CSharp
      name:
        CSharp: SetColor(Color)
        VB: SetColor(Color)
      nameWithType:
        CSharp: IUILaserPointer.SetColor(Color)
        VB: IUILaserPointer.SetColor(Color)
      qualifiedName:
        CSharp: TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
        VB: TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: SetColor
        path: ''
        startLine: 3404
      summary: "\nSet the laser pointer color\n"
      example: []
      syntax:
        content:
          CSharp: public void SetColor(Color color)
          VB: Public Sub SetColor(color As Color)
        parameters:
        - id: color
          type: Global.Color
          description: ''
      overload: TechXR.Core.Sense.IUILaserPointer.SetColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.LaserPointer
    commentId: T:TechXR.Core.Sense.LaserPointer
    language: CSharp
    name:
      CSharp: LaserPointer
      VB: LaserPointer
    nameWithType:
      CSharp: LaserPointer
      VB: LaserPointer
    qualifiedName:
      CSharp: TechXR.Core.Sense.LaserPointer
      VB: TechXR.Core.Sense.LaserPointer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: LaserPointer
      path: ''
      startLine: 3424
    summary: "\nConcrete laser pointer class to be added to the controller\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LaserPointer : IUILaserPointer'
        VB: >-
          Public Class LaserPointer

              Inherits IUILaserPointer
    inheritance:
    - System.Object
    - TechXR.Core.Sense.IUILaserPointer
    inheritedMembers:
    - TechXR.Core.Sense.IUILaserPointer.LaserThickness
    - TechXR.Core.Sense.IUILaserPointer.LaserHitScale
    - TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
    - TechXR.Core.Sense.IUILaserPointer.Color
    - TechXR.Core.Sense.IUILaserPointer.Initialize
    - TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
    - TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
    - TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.LaserPointer.ButtonState
      commentId: F:TechXR.Core.Sense.LaserPointer.ButtonState
      language: CSharp
      name:
        CSharp: ButtonState
        VB: ButtonState
      nameWithType:
        CSharp: LaserPointer.ButtonState
        VB: LaserPointer.ButtonState
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.ButtonState
        VB: TechXR.Core.Sense.LaserPointer.ButtonState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonState
        path: ''
        startLine: 3430
      summary: "\nUse this variable if the laser is set to toggle on demand\n"
      example: []
      syntax:
        content:
          CSharp: public bool ButtonState
          VB: Public ButtonState As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointer.Start
      commentId: M:TechXR.Core.Sense.LaserPointer.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LaserPointer.Start()
        VB: LaserPointer.Start()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.Start()
        VB: TechXR.Core.Sense.LaserPointer.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Start
        path: ''
        startLine: 3467
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: TechXR.Core.Sense.LaserPointer.Start*
      overridden: TechXR.Core.Sense.IUILaserPointer.Start
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TechXR.Core.Sense.LaserPointer.Update
      commentId: M:TechXR.Core.Sense.LaserPointer.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: LaserPointer.Update()
        VB: LaserPointer.Update()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.Update()
        VB: TechXR.Core.Sense.LaserPointer.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Update
        path: ''
        startLine: 3473
      syntax:
        content:
          CSharp: protected override void Update()
          VB: Protected Overrides Sub Update
      overload: TechXR.Core.Sense.LaserPointer.Update*
      overridden: TechXR.Core.Sense.IUILaserPointer.Update
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TechXR.Core.Sense.LaserPointer.ButtonDown
      commentId: M:TechXR.Core.Sense.LaserPointer.ButtonDown
      language: CSharp
      name:
        CSharp: ButtonDown()
        VB: ButtonDown()
      nameWithType:
        CSharp: LaserPointer.ButtonDown()
        VB: LaserPointer.ButtonDown()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.ButtonDown()
        VB: TechXR.Core.Sense.LaserPointer.ButtonDown()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonDown
        path: ''
        startLine: 3513
      summary: "\nGet button down state. Returns true if state changed and button down\n"
      example: []
      syntax:
        content:
          CSharp: public override bool ButtonDown()
          VB: Public Overrides Function ButtonDown As Boolean
        return:
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.LaserPointer.ButtonDown*
      overridden: TechXR.Core.Sense.IUILaserPointer.ButtonDown
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TechXR.Core.Sense.LaserPointer.ButtonUp
      commentId: M:TechXR.Core.Sense.LaserPointer.ButtonUp
      language: CSharp
      name:
        CSharp: ButtonUp()
        VB: ButtonUp()
      nameWithType:
        CSharp: LaserPointer.ButtonUp()
        VB: LaserPointer.ButtonUp()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.ButtonUp()
        VB: TechXR.Core.Sense.LaserPointer.ButtonUp()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ButtonUp
        path: ''
        startLine: 3522
      summary: "\nGet button up state. Returns true if state changed and button up\n"
      example: []
      syntax:
        content:
          CSharp: public override bool ButtonUp()
          VB: Public Overrides Function ButtonUp As Boolean
        return:
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.LaserPointer.ButtonUp*
      overridden: TechXR.Core.Sense.IUILaserPointer.ButtonUp
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TechXR.Core.Sense.LaserPointer.OnEnterControl(GameObject)
      commentId: M:TechXR.Core.Sense.LaserPointer.OnEnterControl(GameObject)
      language: CSharp
      name:
        CSharp: OnEnterControl(GameObject)
        VB: OnEnterControl(GameObject)
      nameWithType:
        CSharp: LaserPointer.OnEnterControl(GameObject)
        VB: LaserPointer.OnEnterControl(GameObject)
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.OnEnterControl(GameObject)
        VB: TechXR.Core.Sense.LaserPointer.OnEnterControl(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OnEnterControl
        path: ''
        startLine: 3531
      summary: "\nOn pointer enter control\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnEnterControl(GameObject control)
          VB: Public Overrides Sub OnEnterControl(control As GameObject)
        parameters:
        - id: control
          type: Global.GameObject
          description: ''
      overload: TechXR.Core.Sense.LaserPointer.OnEnterControl*
      overridden: TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TechXR.Core.Sense.LaserPointer.OnExitControl(GameObject)
      commentId: M:TechXR.Core.Sense.LaserPointer.OnExitControl(GameObject)
      language: CSharp
      name:
        CSharp: OnExitControl(GameObject)
        VB: OnExitControl(GameObject)
      nameWithType:
        CSharp: LaserPointer.OnExitControl(GameObject)
        VB: LaserPointer.OnExitControl(GameObject)
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.OnExitControl(GameObject)
        VB: TechXR.Core.Sense.LaserPointer.OnExitControl(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: OnExitControl
        path: ''
        startLine: 3541
      summary: "\nOn pointer exit control\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnExitControl(GameObject control)
          VB: Public Overrides Sub OnExitControl(control As GameObject)
        parameters:
        - id: control
          type: Global.GameObject
          description: ''
      overload: TechXR.Core.Sense.LaserPointer.OnExitControl*
      overridden: TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TechXR.Core.Sense.LaserPointer.ToggleDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.LaserPointer.ToggleDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleDisplay(Boolean)
        VB: ToggleDisplay(Boolean)
      nameWithType:
        CSharp: LaserPointer.ToggleDisplay(Boolean)
        VB: LaserPointer.ToggleDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.ToggleDisplay(System.Boolean)
        VB: TechXR.Core.Sense.LaserPointer.ToggleDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleDisplay
        path: ''
        startLine: 3551
      summary: "\nToggle the lser pointer display on/off\n"
      example: []
      syntax:
        content:
          CSharp: public override void ToggleDisplay(bool flag)
          VB: Public Overrides Sub ToggleDisplay(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.LaserPointer.ToggleDisplay*
      overridden: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject
      commentId: M:TechXR.Core.Sense.LaserPointer.GetCurrentGameObject
      language: CSharp
      name:
        CSharp: GetCurrentGameObject()
        VB: GetCurrentGameObject()
      nameWithType:
        CSharp: LaserPointer.GetCurrentGameObject()
        VB: LaserPointer.GetCurrentGameObject()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject()
        VB: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GetCurrentGameObject
        path: ''
        startLine: 3644
      summary: "\nGet the current gameobject under the pointer\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject GetCurrentGameObject()
          VB: Public Function GetCurrentGameObject As GameObject
        return:
          type: Global.GameObject
          description: ''
      overload: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.LaserPointerInputModule
    commentId: T:TechXR.Core.Sense.LaserPointerInputModule
    language: CSharp
    name:
      CSharp: LaserPointerInputModule
      VB: LaserPointerInputModule
    nameWithType:
      CSharp: LaserPointerInputModule
      VB: LaserPointerInputModule
    qualifiedName:
      CSharp: TechXR.Core.Sense.LaserPointerInputModule
      VB: TechXR.Core.Sense.LaserPointerInputModule
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: LaserPointerInputModule
      path: ''
      startLine: 3663
    summary: "\nLaser pointer input module for the event system\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LaserPointerInputModule : StandaloneInputModule'
        VB: >-
          Public Class LaserPointerInputModule

              Inherits StandaloneInputModule
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.LaserPointerInputModule.instance
      commentId: P:TechXR.Core.Sense.LaserPointerInputModule.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: LaserPointerInputModule.instance
        VB: LaserPointerInputModule.instance
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.instance
        VB: TechXR.Core.Sense.LaserPointerInputModule.instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: instance
        path: ''
        startLine: 3669
      summary: "\nStatic class reference\n"
      example: []
      syntax:
        content:
          CSharp: public static LaserPointerInputModule instance { get; }
          VB: Public Shared ReadOnly Property instance As LaserPointerInputModule
        parameters: []
        return:
          type: TechXR.Core.Sense.LaserPointerInputModule
      overload: TechXR.Core.Sense.LaserPointerInputModule.instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: TechXR.Core.Sense.LaserPointerInputModule.layerMask
      commentId: F:TechXR.Core.Sense.LaserPointerInputModule.layerMask
      language: CSharp
      name:
        CSharp: layerMask
        VB: layerMask
      nameWithType:
        CSharp: LaserPointerInputModule.layerMask
        VB: LaserPointerInputModule.layerMask
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.layerMask
        VB: TechXR.Core.Sense.LaserPointerInputModule.layerMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: layerMask
        path: ''
        startLine: 3673
      summary: "\nLayer mask to consider for laser pointer interaction\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask layerMask
          VB: Public layerMask As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointerInputModule.Awake
      commentId: M:TechXR.Core.Sense.LaserPointerInputModule.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: LaserPointerInputModule.Awake()
        VB: LaserPointerInputModule.Awake()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.Awake()
        VB: TechXR.Core.Sense.LaserPointerInputModule.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Awake
        path: ''
        startLine: 3695
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: TechXR.Core.Sense.LaserPointerInputModule.Awake*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TechXR.Core.Sense.LaserPointerInputModule.Start
      commentId: M:TechXR.Core.Sense.LaserPointerInputModule.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LaserPointerInputModule.Start()
        VB: LaserPointerInputModule.Start()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.Start()
        VB: TechXR.Core.Sense.LaserPointerInputModule.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Start
        path: ''
        startLine: 3711
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: TechXR.Core.Sense.LaserPointerInputModule.Start*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition(TechXR.Core.Sense.IUILaserPointer)
      commentId: M:TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition(TechXR.Core.Sense.IUILaserPointer)
      language: CSharp
      name:
        CSharp: UpdateCameraPosition(IUILaserPointer)
        VB: UpdateCameraPosition(IUILaserPointer)
      nameWithType:
        CSharp: LaserPointerInputModule.UpdateCameraPosition(IUILaserPointer)
        VB: LaserPointerInputModule.UpdateCameraPosition(IUILaserPointer)
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition(TechXR.Core.Sense.IUILaserPointer)
        VB: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition(TechXR.Core.Sense.IUILaserPointer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: UpdateCameraPosition
        path: ''
        startLine: 3760
      summary: "\nUpdate UICamera position for raycast\n"
      example: []
      syntax:
        content:
          CSharp: protected void UpdateCameraPosition(IUILaserPointer controller)
          VB: Protected Sub UpdateCameraPosition(controller As IUILaserPointer)
        parameters:
        - id: controller
          type: TechXR.Core.Sense.IUILaserPointer
          description: ''
      overload: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TechXR.Core.Sense.LaserPointerInputModule.AddController(TechXR.Core.Sense.IUILaserPointer)
      commentId: M:TechXR.Core.Sense.LaserPointerInputModule.AddController(TechXR.Core.Sense.IUILaserPointer)
      language: CSharp
      name:
        CSharp: AddController(IUILaserPointer)
        VB: AddController(IUILaserPointer)
      nameWithType:
        CSharp: LaserPointerInputModule.AddController(IUILaserPointer)
        VB: LaserPointerInputModule.AddController(IUILaserPointer)
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.AddController(TechXR.Core.Sense.IUILaserPointer)
        VB: TechXR.Core.Sense.LaserPointerInputModule.AddController(TechXR.Core.Sense.IUILaserPointer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: AddController
        path: ''
        startLine: 3772
      summary: "\nAdd laser pointer controller\n"
      example: []
      syntax:
        content:
          CSharp: public void AddController(IUILaserPointer controller)
          VB: Public Sub AddController(controller As IUILaserPointer)
        parameters:
        - id: controller
          type: TechXR.Core.Sense.IUILaserPointer
          description: ''
      overload: TechXR.Core.Sense.LaserPointerInputModule.AddController*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointerInputModule.RemoveController(TechXR.Core.Sense.IUILaserPointer)
      commentId: M:TechXR.Core.Sense.LaserPointerInputModule.RemoveController(TechXR.Core.Sense.IUILaserPointer)
      language: CSharp
      name:
        CSharp: RemoveController(IUILaserPointer)
        VB: RemoveController(IUILaserPointer)
      nameWithType:
        CSharp: LaserPointerInputModule.RemoveController(IUILaserPointer)
        VB: LaserPointerInputModule.RemoveController(IUILaserPointer)
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.RemoveController(TechXR.Core.Sense.IUILaserPointer)
        VB: TechXR.Core.Sense.LaserPointerInputModule.RemoveController(TechXR.Core.Sense.IUILaserPointer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: RemoveController
        path: ''
        startLine: 3781
      summary: "\nRemove laser pointer controller\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveController(IUILaserPointer controller)
          VB: Public Sub RemoveController(controller As IUILaserPointer)
        parameters:
        - id: controller
          type: TechXR.Core.Sense.IUILaserPointer
          description: ''
      overload: TechXR.Core.Sense.LaserPointerInputModule.RemoveController*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection
      commentId: M:TechXR.Core.Sense.LaserPointerInputModule.ClearSelection
      language: CSharp
      name:
        CSharp: ClearSelection()
        VB: ClearSelection()
      nameWithType:
        CSharp: LaserPointerInputModule.ClearSelection()
        VB: LaserPointerInputModule.ClearSelection()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection()
        VB: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ClearSelection
        path: ''
        startLine: 3789
      summary: "\nClear the current selection\n"
      example: []
      syntax:
        content:
          CSharp: public void ClearSelection()
          VB: Public Sub ClearSelection
      overload: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.LaserPointerInputModule.Process
      commentId: M:TechXR.Core.Sense.LaserPointerInputModule.Process
      language: CSharp
      name:
        CSharp: Process()
        VB: Process()
      nameWithType:
        CSharp: LaserPointerInputModule.Process()
        VB: LaserPointerInputModule.Process()
      qualifiedName:
        CSharp: TechXR.Core.Sense.LaserPointerInputModule.Process()
        VB: TechXR.Core.Sense.LaserPointerInputModule.Process()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Process
        path: ''
        startLine: 3800
      summary: "\nProcess the pointer events\n"
      example: []
      syntax:
        content:
          CSharp: public override void Process()
          VB: Public Overrides Sub Process
      overload: TechXR.Core.Sense.LaserPointerInputModule.Process*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TechXR.Core.Sense.Teleporter
    commentId: T:TechXR.Core.Sense.Teleporter
    language: CSharp
    name:
      CSharp: Teleporter
      VB: Teleporter
    nameWithType:
      CSharp: Teleporter
      VB: Teleporter
    qualifiedName:
      CSharp: TechXR.Core.Sense.Teleporter
      VB: TechXR.Core.Sense.Teleporter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: Teleporter
      path: ''
      startLine: 4045
    summary: "\nTeleport functionality main class\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Teleporter : MonoBehaviour'
        VB: >-
          Public Class Teleporter

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.Teleporter.PositionMarker
      commentId: F:TechXR.Core.Sense.Teleporter.PositionMarker
      language: CSharp
      name:
        CSharp: PositionMarker
        VB: PositionMarker
      nameWithType:
        CSharp: Teleporter.PositionMarker
        VB: Teleporter.PositionMarker
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.PositionMarker
        VB: TechXR.Core.Sense.Teleporter.PositionMarker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: PositionMarker
        path: ''
        startLine: 4051
      summary: "\nVisual marker to display the ground position\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject PositionMarker
          VB: Public PositionMarker As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.Dot
      commentId: F:TechXR.Core.Sense.Teleporter.Dot
      language: CSharp
      name:
        CSharp: Dot
        VB: Dot
      nameWithType:
        CSharp: Teleporter.Dot
        VB: Teleporter.Dot
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.Dot
        VB: TechXR.Core.Sense.Teleporter.Dot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Dot
        path: ''
        startLine: 4055
      summary: "\nDots for displaying the teleporter ray\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject Dot
          VB: Public Dot As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.BodyTransform
      commentId: F:TechXR.Core.Sense.Teleporter.BodyTransform
      language: CSharp
      name:
        CSharp: BodyTransform
        VB: BodyTransform
      nameWithType:
        CSharp: Teleporter.BodyTransform
        VB: Teleporter.BodyTransform
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.BodyTransform
        VB: TechXR.Core.Sense.Teleporter.BodyTransform
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: BodyTransform
        path: ''
        startLine: 4059
      summary: "\nPlayer object to teleport\n"
      example: []
      syntax:
        content:
          CSharp: public Transform BodyTransform
          VB: Public BodyTransform As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.IncludeLayers
      commentId: F:TechXR.Core.Sense.Teleporter.IncludeLayers
      language: CSharp
      name:
        CSharp: IncludeLayers
        VB: IncludeLayers
      nameWithType:
        CSharp: Teleporter.IncludeLayers
        VB: Teleporter.IncludeLayers
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.IncludeLayers
        VB: TechXR.Core.Sense.Teleporter.IncludeLayers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: IncludeLayers
        path: ''
        startLine: 4064
      summary: "\nLayers to include for teleport check\nRemove the unnecessary ones to improve performance\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask IncludeLayers
          VB: Public IncludeLayers As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.Angle
      commentId: F:TechXR.Core.Sense.Teleporter.Angle
      language: CSharp
      name:
        CSharp: Angle
        VB: Angle
      nameWithType:
        CSharp: Teleporter.Angle
        VB: Teleporter.Angle
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.Angle
        VB: TechXR.Core.Sense.Teleporter.Angle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Angle
        path: ''
        startLine: 4068
      summary: "\nTeleporter ray arc angle\n"
      example: []
      syntax:
        content:
          CSharp: public float Angle
          VB: Public Angle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.Strength
      commentId: F:TechXR.Core.Sense.Teleporter.Strength
      language: CSharp
      name:
        CSharp: Strength
        VB: Strength
      nameWithType:
        CSharp: Teleporter.Strength
        VB: Teleporter.Strength
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.Strength
        VB: TechXR.Core.Sense.Teleporter.Strength
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Strength
        path: ''
        startLine: 4073
      summary: "\nTeleporter ray strength\nIncreasing this value will increase the arc length\n"
      example: []
      syntax:
        content:
          CSharp: public float Strength
          VB: Public Strength As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.VertexDelta
      commentId: F:TechXR.Core.Sense.Teleporter.VertexDelta
      language: CSharp
      name:
        CSharp: VertexDelta
        VB: VertexDelta
      nameWithType:
        CSharp: Teleporter.VertexDelta
        VB: Teleporter.VertexDelta
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.VertexDelta
        VB: TechXR.Core.Sense.Teleporter.VertexDelta
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: VertexDelta
        path: ''
        startLine: 4078
      summary: "\nDelta between each Vertex on arc.\nDecresing this value may cause performance problem.\n"
      example: []
      syntax:
        content:
          CSharp: public float VertexDelta
          VB: Public VertexDelta As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.Teleport
      commentId: M:TechXR.Core.Sense.Teleporter.Teleport
      language: CSharp
      name:
        CSharp: Teleport()
        VB: Teleport()
      nameWithType:
        CSharp: Teleporter.Teleport()
        VB: Teleporter.Teleport()
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.Teleport()
        VB: TechXR.Core.Sense.Teleporter.Teleport()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Teleport
        path: ''
        startLine: 4234
      summary: "\nTeleport the target object to the displayed ground position\n"
      example: []
      syntax:
        content:
          CSharp: public void Teleport()
          VB: Public Sub Teleport
      overload: TechXR.Core.Sense.Teleporter.Teleport*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.Teleporter.ToggleDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.Teleporter.ToggleDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleDisplay(Boolean)
        VB: ToggleDisplay(Boolean)
      nameWithType:
        CSharp: Teleporter.ToggleDisplay(Boolean)
        VB: Teleporter.ToggleDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.Teleporter.ToggleDisplay(System.Boolean)
        VB: TechXR.Core.Sense.Teleporter.ToggleDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleDisplay
        path: ''
        startLine: 4252
      summary: "\nShow-Hide teleporter ray display\nTrue: Show\nFalse: Hide\n"
      example: []
      syntax:
        content:
          CSharp: public void ToggleDisplay(bool active)
          VB: Public Sub ToggleDisplay(active As Boolean)
        parameters:
        - id: active
          type: System.Boolean
          description: ''
      overload: TechXR.Core.Sense.Teleporter.ToggleDisplay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.TeleportManager
    commentId: T:TechXR.Core.Sense.TeleportManager
    language: CSharp
    name:
      CSharp: TeleportManager
      VB: TeleportManager
    nameWithType:
      CSharp: TeleportManager
      VB: TeleportManager
    qualifiedName:
      CSharp: TechXR.Core.Sense.TeleportManager
      VB: TechXR.Core.Sense.TeleportManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: TeleportManager
      path: ''
      startLine: 4273
    summary: "\nManager class for the teleport functionality\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TeleportManager : MonoBehaviour'
        VB: >-
          Public Class TeleportManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.TeleportManager.TeleportMode
      commentId: P:TechXR.Core.Sense.TeleportManager.TeleportMode
      language: CSharp
      name:
        CSharp: TeleportMode
        VB: TeleportMode
      nameWithType:
        CSharp: TeleportManager.TeleportMode
        VB: TeleportManager.TeleportMode
      qualifiedName:
        CSharp: TechXR.Core.Sense.TeleportManager.TeleportMode
        VB: TechXR.Core.Sense.TeleportManager.TeleportMode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: TeleportMode
        path: ''
        startLine: 4279
      summary: "\nTeleport mode on/off\n"
      example: []
      syntax:
        content:
          CSharp: public bool TeleportMode { get; set; }
          VB: Public Property TeleportMode As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TechXR.Core.Sense.TeleportManager.TeleportMode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: TechXR.Core.Sense.TeleportManager.ToggleDisplay(System.Boolean)
      commentId: M:TechXR.Core.Sense.TeleportManager.ToggleDisplay(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleDisplay(Boolean)
        VB: ToggleDisplay(Boolean)
      nameWithType:
        CSharp: TeleportManager.ToggleDisplay(Boolean)
        VB: TeleportManager.ToggleDisplay(Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Sense.TeleportManager.ToggleDisplay(System.Boolean)
        VB: TechXR.Core.Sense.TeleportManager.ToggleDisplay(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: ToggleDisplay
        path: ''
        startLine: 4340
      summary: "\nToggle teleporter mode on/off\n"
      example: []
      syntax:
        content:
          CSharp: public void ToggleDisplay(bool flag)
          VB: Public Sub ToggleDisplay(flag As Boolean)
        parameters:
        - id: flag
          type: System.Boolean
          description: True:Show. False:Hide
      overload: TechXR.Core.Sense.TeleportManager.ToggleDisplay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Sense.PlayerMovement
    commentId: T:TechXR.Core.Sense.PlayerMovement
    language: CSharp
    name:
      CSharp: PlayerMovement
      VB: PlayerMovement
    nameWithType:
      CSharp: PlayerMovement
      VB: PlayerMovement
    qualifiedName:
      CSharp: TechXR.Core.Sense.PlayerMovement
      VB: TechXR.Core.Sense.PlayerMovement
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Sense
    source:
      id: PlayerMovement
      path: ''
      startLine: 4355
    syntax:
      content:
        CSharp: 'public class PlayerMovement : MonoBehaviour'
        VB: >-
          Public Class PlayerMovement

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Sense.PlayerMovement.Body
      commentId: F:TechXR.Core.Sense.PlayerMovement.Body
      language: CSharp
      name:
        CSharp: Body
        VB: Body
      nameWithType:
        CSharp: PlayerMovement.Body
        VB: PlayerMovement.Body
      qualifiedName:
        CSharp: TechXR.Core.Sense.PlayerMovement.Body
        VB: TechXR.Core.Sense.PlayerMovement.Body
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Body
        path: ''
        startLine: 4358
      syntax:
        content:
          CSharp: public GameObject Body
          VB: Public Body As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.PlayerMovement.UseGravity
      commentId: F:TechXR.Core.Sense.PlayerMovement.UseGravity
      language: CSharp
      name:
        CSharp: UseGravity
        VB: UseGravity
      nameWithType:
        CSharp: PlayerMovement.UseGravity
        VB: PlayerMovement.UseGravity
      qualifiedName:
        CSharp: TechXR.Core.Sense.PlayerMovement.UseGravity
        VB: TechXR.Core.Sense.PlayerMovement.UseGravity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: UseGravity
        path: ''
        startLine: 4359
      syntax:
        content:
          CSharp: public bool UseGravity
          VB: Public UseGravity As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.PlayerMovement.GroundCheck
      commentId: F:TechXR.Core.Sense.PlayerMovement.GroundCheck
      language: CSharp
      name:
        CSharp: GroundCheck
        VB: GroundCheck
      nameWithType:
        CSharp: PlayerMovement.GroundCheck
        VB: PlayerMovement.GroundCheck
      qualifiedName:
        CSharp: TechXR.Core.Sense.PlayerMovement.GroundCheck
        VB: TechXR.Core.Sense.PlayerMovement.GroundCheck
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GroundCheck
        path: ''
        startLine: 4360
      syntax:
        content:
          CSharp: public Transform GroundCheck
          VB: Public GroundCheck As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.PlayerMovement.GroundDistance
      commentId: F:TechXR.Core.Sense.PlayerMovement.GroundDistance
      language: CSharp
      name:
        CSharp: GroundDistance
        VB: GroundDistance
      nameWithType:
        CSharp: PlayerMovement.GroundDistance
        VB: PlayerMovement.GroundDistance
      qualifiedName:
        CSharp: TechXR.Core.Sense.PlayerMovement.GroundDistance
        VB: TechXR.Core.Sense.PlayerMovement.GroundDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GroundDistance
        path: ''
        startLine: 4361
      syntax:
        content:
          CSharp: public float GroundDistance
          VB: Public GroundDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.PlayerMovement.GroundMask
      commentId: F:TechXR.Core.Sense.PlayerMovement.GroundMask
      language: CSharp
      name:
        CSharp: GroundMask
        VB: GroundMask
      nameWithType:
        CSharp: PlayerMovement.GroundMask
        VB: PlayerMovement.GroundMask
      qualifiedName:
        CSharp: TechXR.Core.Sense.PlayerMovement.GroundMask
        VB: TechXR.Core.Sense.PlayerMovement.GroundMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: GroundMask
        path: ''
        startLine: 4362
      syntax:
        content:
          CSharp: public LayerMask GroundMask
          VB: Public GroundMask As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.PlayerMovement.Speed
      commentId: F:TechXR.Core.Sense.PlayerMovement.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: PlayerMovement.Speed
        VB: PlayerMovement.Speed
      qualifiedName:
        CSharp: TechXR.Core.Sense.PlayerMovement.Speed
        VB: TechXR.Core.Sense.PlayerMovement.Speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: Speed
        path: ''
        startLine: 4363
      syntax:
        content:
          CSharp: public float Speed
          VB: Public Speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Sense.PlayerMovement.JumpHeight
      commentId: F:TechXR.Core.Sense.PlayerMovement.JumpHeight
      language: CSharp
      name:
        CSharp: JumpHeight
        VB: JumpHeight
      nameWithType:
        CSharp: PlayerMovement.JumpHeight
        VB: PlayerMovement.JumpHeight
      qualifiedName:
        CSharp: TechXR.Core.Sense.PlayerMovement.JumpHeight
        VB: TechXR.Core.Sense.PlayerMovement.JumpHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Sense
      source:
        id: JumpHeight
        path: ''
        startLine: 4365
      syntax:
        content:
          CSharp: public float JumpHeight
          VB: Public JumpHeight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TechXR.Core.Utils
  commentId: N:TechXR.Core.Utils
  language: CSharp
  name:
    CSharp: TechXR.Core.Utils
    VB: TechXR.Core.Utils
  nameWithType:
    CSharp: TechXR.Core.Utils
    VB: TechXR.Core.Utils
  qualifiedName:
    CSharp: TechXR.Core.Utils
    VB: TechXR.Core.Utils
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TechXR.Core.Utils.DataManager
    commentId: T:TechXR.Core.Utils.DataManager
    language: CSharp
    name:
      CSharp: DataManager
      VB: DataManager
    nameWithType:
      CSharp: DataManager
      VB: DataManager
    qualifiedName:
      CSharp: TechXR.Core.Utils.DataManager
      VB: TechXR.Core.Utils.DataManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Utils
    source:
      id: DataManager
      path: ''
      startLine: 1493
    summary: "\nSingleton manager class for loading external data\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DataManager : Singleton<DataManager>'
        VB: >-
          Public Class DataManager

              Inherits Singleton(Of DataManager)
    inheritance:
    - System.Object
    - TechXR.Core.Utils.Singleton{TechXR.Core.Utils.DataManager}
    inheritedMembers:
    - TechXR.Core.Utils.Singleton{TechXR.Core.Utils.DataManager}.Instance
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Utils.DataManager.Init(System.Collections.Generic.List{System.String},System.Boolean)
      commentId: M:TechXR.Core.Utils.DataManager.Init(System.Collections.Generic.List{System.String},System.Boolean)
      language: CSharp
      name:
        CSharp: Init(List<String>, Boolean)
        VB: Init(List(Of String), Boolean)
      nameWithType:
        CSharp: DataManager.Init(List<String>, Boolean)
        VB: DataManager.Init(List(Of String), Boolean)
      qualifiedName:
        CSharp: TechXR.Core.Utils.DataManager.Init(System.Collections.Generic.List<System.String>, System.Boolean)
        VB: TechXR.Core.Utils.DataManager.Init(System.Collections.Generic.List(Of System.String), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: Init
        path: ''
        startLine: 1605
      summary: "\nInitialize data loading\n"
      example: []
      syntax:
        content:
          CSharp: public void Init(List<string> filePaths, bool local = false)
          VB: Public Sub Init(filePaths As List(Of String), local As Boolean = False)
        parameters:
        - id: filePaths
          type: System.Collections.Generic.List{System.String}
          description: A list of file paths or URLs from where data is to be loaded
        - id: local
          type: System.Boolean
          description: Boolean flag to detenmine if the file to be loaded is on the local machine or online on a remote system
      overload: TechXR.Core.Utils.DataManager.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Utils.EventManager
    commentId: T:TechXR.Core.Utils.EventManager
    language: CSharp
    name:
      CSharp: EventManager
      VB: EventManager
    nameWithType:
      CSharp: EventManager
      VB: EventManager
    qualifiedName:
      CSharp: TechXR.Core.Utils.EventManager
      VB: TechXR.Core.Utils.EventManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Utils
    source:
      id: EventManager
      path: ''
      startLine: 1631
    summary: "\nEventManager :: Singleton Class for adding/removing eventlisteners and dispatching events\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EventManager : Singleton<EventManager>'
        VB: >-
          Public Class EventManager

              Inherits Singleton(Of EventManager)
    inheritance:
    - System.Object
    - TechXR.Core.Utils.Singleton{TechXR.Core.Utils.EventManager}
    inheritedMembers:
    - TechXR.Core.Utils.Singleton{TechXR.Core.Utils.EventManager}.Instance
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Utils.EventManager.OnInstanceCreated
      commentId: M:TechXR.Core.Utils.EventManager.OnInstanceCreated
      language: CSharp
      name:
        CSharp: OnInstanceCreated()
        VB: OnInstanceCreated()
      nameWithType:
        CSharp: EventManager.OnInstanceCreated()
        VB: EventManager.OnInstanceCreated()
      qualifiedName:
        CSharp: TechXR.Core.Utils.EventManager.OnInstanceCreated()
        VB: TechXR.Core.Utils.EventManager.OnInstanceCreated()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: OnInstanceCreated
        path: ''
        startLine: 1655
      summary: "\nListener function of the instance created event\n"
      example: []
      syntax:
        content:
          CSharp: public void OnInstanceCreated()
          VB: Public Sub OnInstanceCreated
      overload: TechXR.Core.Utils.EventManager.OnInstanceCreated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Utils.EventManager.RegisterEvent(SenseEvent,SenseEventDelegate)
      commentId: M:TechXR.Core.Utils.EventManager.RegisterEvent(SenseEvent,SenseEventDelegate)
      language: CSharp
      name:
        CSharp: RegisterEvent(SenseEvent, SenseEventDelegate)
        VB: RegisterEvent(SenseEvent, SenseEventDelegate)
      nameWithType:
        CSharp: EventManager.RegisterEvent(SenseEvent, SenseEventDelegate)
        VB: EventManager.RegisterEvent(SenseEvent, SenseEventDelegate)
      qualifiedName:
        CSharp: TechXR.Core.Utils.EventManager.RegisterEvent(SenseEvent, SenseEventDelegate)
        VB: TechXR.Core.Utils.EventManager.RegisterEvent(SenseEvent, SenseEventDelegate)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: RegisterEvent
        path: ''
        startLine: 1662
      summary: "\nRegister the event with the delegate\n"
      example: []
      syntax:
        content:
          CSharp: public void RegisterEvent(SenseEvent a_eEvent, SenseEventDelegate a_delListener)
          VB: Public Sub RegisterEvent(a_eEvent As SenseEvent, a_delListener As SenseEventDelegate)
        parameters:
        - id: a_eEvent
          type: Global.SenseEvent
          description: The event to listen to
        - id: a_delListener
          type: Global.SenseEventDelegate
          description: The callback function to call when the event is triggered
      overload: TechXR.Core.Utils.EventManager.RegisterEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Utils.EventManager.DeRegisterEvent(SenseEvent,SenseEventDelegate)
      commentId: M:TechXR.Core.Utils.EventManager.DeRegisterEvent(SenseEvent,SenseEventDelegate)
      language: CSharp
      name:
        CSharp: DeRegisterEvent(SenseEvent, SenseEventDelegate)
        VB: DeRegisterEvent(SenseEvent, SenseEventDelegate)
      nameWithType:
        CSharp: EventManager.DeRegisterEvent(SenseEvent, SenseEventDelegate)
        VB: EventManager.DeRegisterEvent(SenseEvent, SenseEventDelegate)
      qualifiedName:
        CSharp: TechXR.Core.Utils.EventManager.DeRegisterEvent(SenseEvent, SenseEventDelegate)
        VB: TechXR.Core.Utils.EventManager.DeRegisterEvent(SenseEvent, SenseEventDelegate)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: DeRegisterEvent
        path: ''
        startLine: 1680
      summary: "\nRemove the event from the event register\n"
      example: []
      syntax:
        content:
          CSharp: public void DeRegisterEvent(SenseEvent a_eEvent, SenseEventDelegate a_delListener)
          VB: Public Sub DeRegisterEvent(a_eEvent As SenseEvent, a_delListener As SenseEventDelegate)
        parameters:
        - id: a_eEvent
          type: Global.SenseEvent
          description: The event attached to the callback function
        - id: a_delListener
          type: Global.SenseEventDelegate
          description: The callback function listening to the event
      overload: TechXR.Core.Utils.EventManager.DeRegisterEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TechXR.Core.Utils.EventManager.TriggerEvent(SenseEvent,System.Object[])
      commentId: M:TechXR.Core.Utils.EventManager.TriggerEvent(SenseEvent,System.Object[])
      language: CSharp
      name:
        CSharp: TriggerEvent(SenseEvent, Object[])
        VB: TriggerEvent(SenseEvent, Object())
      nameWithType:
        CSharp: EventManager.TriggerEvent(SenseEvent, Object[])
        VB: EventManager.TriggerEvent(SenseEvent, Object())
      qualifiedName:
        CSharp: TechXR.Core.Utils.EventManager.TriggerEvent(SenseEvent, System.Object[])
        VB: TechXR.Core.Utils.EventManager.TriggerEvent(SenseEvent, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: TriggerEvent
        path: ''
        startLine: 1693
      summary: "\nEvent trigger function\n"
      example: []
      syntax:
        content:
          CSharp: public void TriggerEvent(SenseEvent a_eEvent, params object[] args)
          VB: Public Sub TriggerEvent(a_eEvent As SenseEvent, ParamArray args As Object())
        parameters:
        - id: a_eEvent
          type: Global.SenseEvent
          description: The event to dispatch
        - id: args
          type: System.Object[]
          description: The optional array of arugments to dispatch along with the event
      overload: TechXR.Core.Utils.EventManager.TriggerEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TechXR.Core.Utils.StateManager
    commentId: T:TechXR.Core.Utils.StateManager
    language: CSharp
    name:
      CSharp: StateManager
      VB: StateManager
    nameWithType:
      CSharp: StateManager
      VB: StateManager
    qualifiedName:
      CSharp: TechXR.Core.Utils.StateManager
      VB: TechXR.Core.Utils.StateManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Utils
    source:
      id: StateManager
      path: ''
      startLine: 2147
    summary: "\nSingleton manager class for managing application and module states\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateManager : Singleton<StateManager>'
        VB: >-
          Public Class StateManager

              Inherits Singleton(Of StateManager)
    inheritance:
    - System.Object
    - TechXR.Core.Utils.Singleton{TechXR.Core.Utils.StateManager}
    inheritedMembers:
    - TechXR.Core.Utils.Singleton{TechXR.Core.Utils.StateManager}.Instance
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TechXR.Core.Utils.StateManager.GRAB_MODE_NEAR
      commentId: F:TechXR.Core.Utils.StateManager.GRAB_MODE_NEAR
      language: CSharp
      name:
        CSharp: GRAB_MODE_NEAR
        VB: GRAB_MODE_NEAR
      nameWithType:
        CSharp: StateManager.GRAB_MODE_NEAR
        VB: StateManager.GRAB_MODE_NEAR
      qualifiedName:
        CSharp: TechXR.Core.Utils.StateManager.GRAB_MODE_NEAR
        VB: TechXR.Core.Utils.StateManager.GRAB_MODE_NEAR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: GRAB_MODE_NEAR
        path: ''
        startLine: 2153
      summary: "\nGrab objects and bring them close\n"
      example: []
      syntax:
        content:
          CSharp: public static string GRAB_MODE_NEAR
          VB: Public Shared GRAB_MODE_NEAR As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Utils.StateManager.GRAB_MODE_FAR
      commentId: F:TechXR.Core.Utils.StateManager.GRAB_MODE_FAR
      language: CSharp
      name:
        CSharp: GRAB_MODE_FAR
        VB: GRAB_MODE_FAR
      nameWithType:
        CSharp: StateManager.GRAB_MODE_FAR
        VB: StateManager.GRAB_MODE_FAR
      qualifiedName:
        CSharp: TechXR.Core.Utils.StateManager.GRAB_MODE_FAR
        VB: TechXR.Core.Utils.StateManager.GRAB_MODE_FAR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: GRAB_MODE_FAR
        path: ''
        startLine: 2157
      summary: "\nGrab objects from a distance\n"
      example: []
      syntax:
        content:
          CSharp: public static string GRAB_MODE_FAR
          VB: Public Shared GRAB_MODE_FAR As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: TechXR.Core.Utils.StateManager.GrabMode
      commentId: P:TechXR.Core.Utils.StateManager.GrabMode
      language: CSharp
      name:
        CSharp: GrabMode
        VB: GrabMode
      nameWithType:
        CSharp: StateManager.GrabMode
        VB: StateManager.GrabMode
      qualifiedName:
        CSharp: TechXR.Core.Utils.StateManager.GrabMode
        VB: TechXR.Core.Utils.StateManager.GrabMode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: GrabMode
        path: ''
        startLine: 2161
      syntax:
        content:
          CSharp: public string GrabMode { get; set; }
          VB: Public Property GrabMode As String
        parameters: []
        return:
          type: System.String
      overload: TechXR.Core.Utils.StateManager.GrabMode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: TechXR.Core.Utils.Singleton`1
    commentId: T:TechXR.Core.Utils.Singleton`1
    language: CSharp
    name:
      CSharp: Singleton<T>
      VB: Singleton(Of T)
    nameWithType:
      CSharp: Singleton<T>
      VB: Singleton(Of T)
    qualifiedName:
      CSharp: TechXR.Core.Utils.Singleton<T>
      VB: TechXR.Core.Utils.Singleton(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TechXR.Core.Utils
    source:
      id: Singleton
      path: ''
      startLine: 4466
    summary: "\nClass template for singleton classes\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class Singleton<T> : MonoBehaviour where T : MonoBehaviour'
        VB: >-
          Public MustInherit Class Singleton(Of T As MonoBehaviour)

              Inherits MonoBehaviour
      typeParameters:
      - id: T
        description: ''
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TechXR.Core.Utils.Singleton`1.Instance
      commentId: P:TechXR.Core.Utils.Singleton`1.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: Singleton<T>.Instance
        VB: Singleton(Of T).Instance
      qualifiedName:
        CSharp: TechXR.Core.Utils.Singleton<T>.Instance
        VB: TechXR.Core.Utils.Singleton(Of T).Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TechXR.Core.Utils
      source:
        id: Instance
        path: ''
        startLine: 4470
      syntax:
        content:
          CSharp: public static T Instance { get; }
          VB: Public Shared ReadOnly Property Instance As T
        parameters: []
        return:
          type: '{T}'
      overload: TechXR.Core.Utils.Singleton`1.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Global.VariableJoystick:
    name:
      CSharp:
      - id: Global.VariableJoystick
        name: VariableJoystick
        nameWithType: VariableJoystick
        qualifiedName: VariableJoystick
      VB:
      - id: Global.VariableJoystick
        name: VariableJoystick
        nameWithType: VariableJoystick
        qualifiedName: VariableJoystick
    isDefinition: true
    commentId: T:Global.VariableJoystick
  Global.Rigidbody:
    name:
      CSharp:
      - id: Global.Rigidbody
        name: Rigidbody
        nameWithType: Rigidbody
        qualifiedName: Rigidbody
        isExternal: true
      VB:
      - id: Global.Rigidbody
        name: Rigidbody
        nameWithType: Rigidbody
        qualifiedName: Rigidbody
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Rigidbody'
  Global.JoystickPlayerExample.FixedUpdate*:
    name:
      CSharp:
      - id: Global.JoystickPlayerExample.FixedUpdate*
        name: FixedUpdate
        nameWithType: JoystickPlayerExample.FixedUpdate
        qualifiedName: JoystickPlayerExample.FixedUpdate
      VB:
      - id: Global.JoystickPlayerExample.FixedUpdate*
        name: FixedUpdate
        nameWithType: JoystickPlayerExample.FixedUpdate
        qualifiedName: JoystickPlayerExample.FixedUpdate
    isDefinition: true
    commentId: Overload:Global.JoystickPlayerExample.FixedUpdate
  Global.JoystickPlayerExample:
    name:
      CSharp:
      - id: Global.JoystickPlayerExample
        name: JoystickPlayerExample
        nameWithType: JoystickPlayerExample
        qualifiedName: JoystickPlayerExample
      VB:
      - id: Global.JoystickPlayerExample
        name: JoystickPlayerExample
        nameWithType: JoystickPlayerExample
        qualifiedName: JoystickPlayerExample
    isDefinition: true
    commentId: T:Global.JoystickPlayerExample
  Global.Text:
    name:
      CSharp:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Text'
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Image'
  Global.Sprite[]:
    name:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Global.JoystickSetterExample.ModeChanged*:
    name:
      CSharp:
      - id: Global.JoystickSetterExample.ModeChanged*
        name: ModeChanged
        nameWithType: JoystickSetterExample.ModeChanged
        qualifiedName: JoystickSetterExample.ModeChanged
      VB:
      - id: Global.JoystickSetterExample.ModeChanged*
        name: ModeChanged
        nameWithType: JoystickSetterExample.ModeChanged
        qualifiedName: JoystickSetterExample.ModeChanged
    isDefinition: true
    commentId: Overload:Global.JoystickSetterExample.ModeChanged
  Global.JoystickSetterExample.AxisChanged*:
    name:
      CSharp:
      - id: Global.JoystickSetterExample.AxisChanged*
        name: AxisChanged
        nameWithType: JoystickSetterExample.AxisChanged
        qualifiedName: JoystickSetterExample.AxisChanged
      VB:
      - id: Global.JoystickSetterExample.AxisChanged*
        name: AxisChanged
        nameWithType: JoystickSetterExample.AxisChanged
        qualifiedName: JoystickSetterExample.AxisChanged
    isDefinition: true
    commentId: Overload:Global.JoystickSetterExample.AxisChanged
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Global.JoystickSetterExample.SnapX*:
    name:
      CSharp:
      - id: Global.JoystickSetterExample.SnapX*
        name: SnapX
        nameWithType: JoystickSetterExample.SnapX
        qualifiedName: JoystickSetterExample.SnapX
      VB:
      - id: Global.JoystickSetterExample.SnapX*
        name: SnapX
        nameWithType: JoystickSetterExample.SnapX
        qualifiedName: JoystickSetterExample.SnapX
    isDefinition: true
    commentId: Overload:Global.JoystickSetterExample.SnapX
  Global.JoystickSetterExample.SnapY*:
    name:
      CSharp:
      - id: Global.JoystickSetterExample.SnapY*
        name: SnapY
        nameWithType: JoystickSetterExample.SnapY
        qualifiedName: JoystickSetterExample.SnapY
      VB:
      - id: Global.JoystickSetterExample.SnapY*
        name: SnapY
        nameWithType: JoystickSetterExample.SnapY
        qualifiedName: JoystickSetterExample.SnapY
    isDefinition: true
    commentId: Overload:Global.JoystickSetterExample.SnapY
  Global.JoystickSetterExample:
    name:
      CSharp:
      - id: Global.JoystickSetterExample
        name: JoystickSetterExample
        nameWithType: JoystickSetterExample
        qualifiedName: JoystickSetterExample
      VB:
      - id: Global.JoystickSetterExample
        name: JoystickSetterExample
        nameWithType: JoystickSetterExample
        qualifiedName: JoystickSetterExample
    isDefinition: true
    commentId: T:Global.JoystickSetterExample
  Global.IPointerDownHandler:
    name:
      CSharp:
      - id: Global.IPointerDownHandler
        name: IPointerDownHandler
        nameWithType: IPointerDownHandler
        qualifiedName: IPointerDownHandler
        isExternal: true
      VB:
      - id: Global.IPointerDownHandler
        name: IPointerDownHandler
        nameWithType: IPointerDownHandler
        qualifiedName: IPointerDownHandler
        isExternal: true
    isDefinition: true
  Global.IDragHandler:
    name:
      CSharp:
      - id: Global.IDragHandler
        name: IDragHandler
        nameWithType: IDragHandler
        qualifiedName: IDragHandler
        isExternal: true
      VB:
      - id: Global.IDragHandler
        name: IDragHandler
        nameWithType: IDragHandler
        qualifiedName: IDragHandler
        isExternal: true
    isDefinition: true
  Global.IPointerUpHandler:
    name:
      CSharp:
      - id: Global.IPointerUpHandler
        name: IPointerUpHandler
        nameWithType: IPointerUpHandler
        qualifiedName: IPointerUpHandler
        isExternal: true
      VB:
      - id: Global.IPointerUpHandler
        name: IPointerUpHandler
        nameWithType: IPointerUpHandler
        qualifiedName: IPointerUpHandler
        isExternal: true
    isDefinition: true
  Global.Joystick.Horizontal*:
    name:
      CSharp:
      - id: Global.Joystick.Horizontal*
        name: Horizontal
        nameWithType: Joystick.Horizontal
        qualifiedName: Joystick.Horizontal
      VB:
      - id: Global.Joystick.Horizontal*
        name: Horizontal
        nameWithType: Joystick.Horizontal
        qualifiedName: Joystick.Horizontal
    isDefinition: true
    commentId: Overload:Global.Joystick.Horizontal
  Global.Joystick.Vertical*:
    name:
      CSharp:
      - id: Global.Joystick.Vertical*
        name: Vertical
        nameWithType: Joystick.Vertical
        qualifiedName: Joystick.Vertical
      VB:
      - id: Global.Joystick.Vertical*
        name: Vertical
        nameWithType: Joystick.Vertical
        qualifiedName: Joystick.Vertical
    isDefinition: true
    commentId: Overload:Global.Joystick.Vertical
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  Global.Joystick.Direction*:
    name:
      CSharp:
      - id: Global.Joystick.Direction*
        name: Direction
        nameWithType: Joystick.Direction
        qualifiedName: Joystick.Direction
      VB:
      - id: Global.Joystick.Direction*
        name: Direction
        nameWithType: Joystick.Direction
        qualifiedName: Joystick.Direction
    isDefinition: true
    commentId: Overload:Global.Joystick.Direction
  Global.Joystick.HandleRange*:
    name:
      CSharp:
      - id: Global.Joystick.HandleRange*
        name: HandleRange
        nameWithType: Joystick.HandleRange
        qualifiedName: Joystick.HandleRange
      VB:
      - id: Global.Joystick.HandleRange*
        name: HandleRange
        nameWithType: Joystick.HandleRange
        qualifiedName: Joystick.HandleRange
    isDefinition: true
    commentId: Overload:Global.Joystick.HandleRange
  Global.Joystick.DeadZone*:
    name:
      CSharp:
      - id: Global.Joystick.DeadZone*
        name: DeadZone
        nameWithType: Joystick.DeadZone
        qualifiedName: Joystick.DeadZone
      VB:
      - id: Global.Joystick.DeadZone*
        name: DeadZone
        nameWithType: Joystick.DeadZone
        qualifiedName: Joystick.DeadZone
    isDefinition: true
    commentId: Overload:Global.Joystick.DeadZone
  Global.AxisOptions:
    name:
      CSharp:
      - id: Global.AxisOptions
        name: AxisOptions
        nameWithType: AxisOptions
        qualifiedName: AxisOptions
      VB:
      - id: Global.AxisOptions
        name: AxisOptions
        nameWithType: AxisOptions
        qualifiedName: AxisOptions
    isDefinition: true
    commentId: T:Global.AxisOptions
  Global.Joystick.AxisOptions*:
    name:
      CSharp:
      - id: Global.Joystick.AxisOptions*
        name: AxisOptions
        nameWithType: Joystick.AxisOptions
        qualifiedName: Joystick.AxisOptions
      VB:
      - id: Global.Joystick.AxisOptions*
        name: AxisOptions
        nameWithType: Joystick.AxisOptions
        qualifiedName: Joystick.AxisOptions
    isDefinition: true
    commentId: Overload:Global.Joystick.AxisOptions
  Global.Joystick.SnapX*:
    name:
      CSharp:
      - id: Global.Joystick.SnapX*
        name: SnapX
        nameWithType: Joystick.SnapX
        qualifiedName: Joystick.SnapX
      VB:
      - id: Global.Joystick.SnapX*
        name: SnapX
        nameWithType: Joystick.SnapX
        qualifiedName: Joystick.SnapX
    isDefinition: true
    commentId: Overload:Global.Joystick.SnapX
  Global.Joystick.SnapY*:
    name:
      CSharp:
      - id: Global.Joystick.SnapY*
        name: SnapY
        nameWithType: Joystick.SnapY
        qualifiedName: Joystick.SnapY
      VB:
      - id: Global.Joystick.SnapY*
        name: SnapY
        nameWithType: Joystick.SnapY
        qualifiedName: Joystick.SnapY
    isDefinition: true
    commentId: Overload:Global.Joystick.SnapY
  Global.RectTransform:
    name:
      CSharp:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      VB:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
    isDefinition: true
    commentId: '!:Global.RectTransform'
  Global.Joystick.Start*:
    name:
      CSharp:
      - id: Global.Joystick.Start*
        name: Start
        nameWithType: Joystick.Start
        qualifiedName: Joystick.Start
      VB:
      - id: Global.Joystick.Start*
        name: Start
        nameWithType: Joystick.Start
        qualifiedName: Joystick.Start
    isDefinition: true
    commentId: Overload:Global.Joystick.Start
  Global.PointerEventData:
    name:
      CSharp:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
  Global.Joystick.OnPointerDown*:
    name:
      CSharp:
      - id: Global.Joystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: Joystick.OnPointerDown
        qualifiedName: Joystick.OnPointerDown
      VB:
      - id: Global.Joystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: Joystick.OnPointerDown
        qualifiedName: Joystick.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.Joystick.OnPointerDown
  Global.Joystick.OnDrag*:
    name:
      CSharp:
      - id: Global.Joystick.OnDrag*
        name: OnDrag
        nameWithType: Joystick.OnDrag
        qualifiedName: Joystick.OnDrag
      VB:
      - id: Global.Joystick.OnDrag*
        name: OnDrag
        nameWithType: Joystick.OnDrag
        qualifiedName: Joystick.OnDrag
    isDefinition: true
    commentId: Overload:Global.Joystick.OnDrag
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
  Global.Joystick.HandleInput*:
    name:
      CSharp:
      - id: Global.Joystick.HandleInput*
        name: HandleInput
        nameWithType: Joystick.HandleInput
        qualifiedName: Joystick.HandleInput
      VB:
      - id: Global.Joystick.HandleInput*
        name: HandleInput
        nameWithType: Joystick.HandleInput
        qualifiedName: Joystick.HandleInput
    isDefinition: true
    commentId: Overload:Global.Joystick.HandleInput
  Global.Joystick.OnPointerUp*:
    name:
      CSharp:
      - id: Global.Joystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: Joystick.OnPointerUp
        qualifiedName: Joystick.OnPointerUp
      VB:
      - id: Global.Joystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: Joystick.OnPointerUp
        qualifiedName: Joystick.OnPointerUp
    isDefinition: true
    commentId: Overload:Global.Joystick.OnPointerUp
  Global.Joystick.ScreenPointToAnchoredPosition*:
    name:
      CSharp:
      - id: Global.Joystick.ScreenPointToAnchoredPosition*
        name: ScreenPointToAnchoredPosition
        nameWithType: Joystick.ScreenPointToAnchoredPosition
        qualifiedName: Joystick.ScreenPointToAnchoredPosition
      VB:
      - id: Global.Joystick.ScreenPointToAnchoredPosition*
        name: ScreenPointToAnchoredPosition
        nameWithType: Joystick.ScreenPointToAnchoredPosition
        qualifiedName: Joystick.ScreenPointToAnchoredPosition
    isDefinition: true
    commentId: Overload:Global.Joystick.ScreenPointToAnchoredPosition
  Global.Joystick:
    name:
      CSharp:
      - id: Global.Joystick
        name: Joystick
        nameWithType: Joystick
        qualifiedName: Joystick
      VB:
      - id: Global.Joystick
        name: Joystick
        nameWithType: Joystick
        qualifiedName: Joystick
    isDefinition: true
    commentId: T:Global.Joystick
  Global.JoystickEditor:
    name:
      CSharp:
      - id: Global.JoystickEditor
        name: JoystickEditor
        nameWithType: JoystickEditor
        qualifiedName: JoystickEditor
      VB:
      - id: Global.JoystickEditor
        name: JoystickEditor
        nameWithType: JoystickEditor
        qualifiedName: JoystickEditor
    isDefinition: true
    commentId: T:Global.JoystickEditor
  Global.JoystickEditor.background:
    name:
      CSharp:
      - id: Global.JoystickEditor.background
        name: background
        nameWithType: JoystickEditor.background
        qualifiedName: JoystickEditor.background
      VB:
      - id: Global.JoystickEditor.background
        name: background
        nameWithType: JoystickEditor.background
        qualifiedName: JoystickEditor.background
    isDefinition: true
    parent: Global.JoystickEditor
    commentId: F:Global.JoystickEditor.background
  Global.JoystickEditor.center:
    name:
      CSharp:
      - id: Global.JoystickEditor.center
        name: center
        nameWithType: JoystickEditor.center
        qualifiedName: JoystickEditor.center
      VB:
      - id: Global.JoystickEditor.center
        name: center
        nameWithType: JoystickEditor.center
        qualifiedName: JoystickEditor.center
    isDefinition: true
    parent: Global.JoystickEditor
    commentId: F:Global.JoystickEditor.center
  Global.JoystickEditor.DrawComponents:
    name:
      CSharp:
      - id: Global.JoystickEditor.DrawComponents
        name: DrawComponents
        nameWithType: JoystickEditor.DrawComponents
        qualifiedName: JoystickEditor.DrawComponents
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.JoystickEditor.DrawComponents
        name: DrawComponents
        nameWithType: JoystickEditor.DrawComponents
        qualifiedName: JoystickEditor.DrawComponents
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.JoystickEditor
    commentId: M:Global.JoystickEditor.DrawComponents
  Global.JoystickEditor.OnEnable:
    name:
      CSharp:
      - id: Global.JoystickEditor.OnEnable
        name: OnEnable
        nameWithType: JoystickEditor.OnEnable
        qualifiedName: JoystickEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.JoystickEditor.OnEnable
        name: OnEnable
        nameWithType: JoystickEditor.OnEnable
        qualifiedName: JoystickEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.JoystickEditor
    commentId: M:Global.JoystickEditor.OnEnable
  Global.DynamicJoystickEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.DynamicJoystickEditor.OnEnable*
        name: OnEnable
        nameWithType: DynamicJoystickEditor.OnEnable
        qualifiedName: DynamicJoystickEditor.OnEnable
      VB:
      - id: Global.DynamicJoystickEditor.OnEnable*
        name: OnEnable
        nameWithType: DynamicJoystickEditor.OnEnable
        qualifiedName: DynamicJoystickEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.DynamicJoystickEditor.OnEnable
  Global.JoystickEditor.OnInspectorGUI:
    name:
      CSharp:
      - id: Global.JoystickEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: JoystickEditor.OnInspectorGUI
        qualifiedName: JoystickEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.JoystickEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: JoystickEditor.OnInspectorGUI
        qualifiedName: JoystickEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.JoystickEditor
    commentId: M:Global.JoystickEditor.OnInspectorGUI
  Global.DynamicJoystickEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.DynamicJoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: DynamicJoystickEditor.OnInspectorGUI
        qualifiedName: DynamicJoystickEditor.OnInspectorGUI
      VB:
      - id: Global.DynamicJoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: DynamicJoystickEditor.OnInspectorGUI
        qualifiedName: DynamicJoystickEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.DynamicJoystickEditor.OnInspectorGUI
  Global.JoystickEditor.DrawValues:
    name:
      CSharp:
      - id: Global.JoystickEditor.DrawValues
        name: DrawValues
        nameWithType: JoystickEditor.DrawValues
        qualifiedName: JoystickEditor.DrawValues
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.JoystickEditor.DrawValues
        name: DrawValues
        nameWithType: JoystickEditor.DrawValues
        qualifiedName: JoystickEditor.DrawValues
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.JoystickEditor
    commentId: M:Global.JoystickEditor.DrawValues
  Global.DynamicJoystickEditor.DrawValues*:
    name:
      CSharp:
      - id: Global.DynamicJoystickEditor.DrawValues*
        name: DrawValues
        nameWithType: DynamicJoystickEditor.DrawValues
        qualifiedName: DynamicJoystickEditor.DrawValues
      VB:
      - id: Global.DynamicJoystickEditor.DrawValues*
        name: DrawValues
        nameWithType: DynamicJoystickEditor.DrawValues
        qualifiedName: DynamicJoystickEditor.DrawValues
    isDefinition: true
    commentId: Overload:Global.DynamicJoystickEditor.DrawValues
  Global.DynamicJoystickEditor:
    name:
      CSharp:
      - id: Global.DynamicJoystickEditor
        name: DynamicJoystickEditor
        nameWithType: DynamicJoystickEditor
        qualifiedName: DynamicJoystickEditor
      VB:
      - id: Global.DynamicJoystickEditor
        name: DynamicJoystickEditor
        nameWithType: DynamicJoystickEditor
        qualifiedName: DynamicJoystickEditor
    isDefinition: true
    commentId: T:Global.DynamicJoystickEditor
  Global.FloatingJoystickEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.FloatingJoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: FloatingJoystickEditor.OnInspectorGUI
        qualifiedName: FloatingJoystickEditor.OnInspectorGUI
      VB:
      - id: Global.FloatingJoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: FloatingJoystickEditor.OnInspectorGUI
        qualifiedName: FloatingJoystickEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.FloatingJoystickEditor.OnInspectorGUI
  Global.FloatingJoystickEditor:
    name:
      CSharp:
      - id: Global.FloatingJoystickEditor
        name: FloatingJoystickEditor
        nameWithType: FloatingJoystickEditor
        qualifiedName: FloatingJoystickEditor
      VB:
      - id: Global.FloatingJoystickEditor
        name: FloatingJoystickEditor
        nameWithType: FloatingJoystickEditor
        qualifiedName: FloatingJoystickEditor
    isDefinition: true
    commentId: T:Global.FloatingJoystickEditor
  Global.SerializedProperty:
    name:
      CSharp:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      VB:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SerializedProperty'
  Global.JoystickEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.JoystickEditor.OnEnable*
        name: OnEnable
        nameWithType: JoystickEditor.OnEnable
        qualifiedName: JoystickEditor.OnEnable
      VB:
      - id: Global.JoystickEditor.OnEnable*
        name: OnEnable
        nameWithType: JoystickEditor.OnEnable
        qualifiedName: JoystickEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.JoystickEditor.OnEnable
  Global.JoystickEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.JoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: JoystickEditor.OnInspectorGUI
        qualifiedName: JoystickEditor.OnInspectorGUI
      VB:
      - id: Global.JoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: JoystickEditor.OnInspectorGUI
        qualifiedName: JoystickEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.JoystickEditor.OnInspectorGUI
  Global.JoystickEditor.DrawValues*:
    name:
      CSharp:
      - id: Global.JoystickEditor.DrawValues*
        name: DrawValues
        nameWithType: JoystickEditor.DrawValues
        qualifiedName: JoystickEditor.DrawValues
      VB:
      - id: Global.JoystickEditor.DrawValues*
        name: DrawValues
        nameWithType: JoystickEditor.DrawValues
        qualifiedName: JoystickEditor.DrawValues
    isDefinition: true
    commentId: Overload:Global.JoystickEditor.DrawValues
  Global.JoystickEditor.DrawComponents*:
    name:
      CSharp:
      - id: Global.JoystickEditor.DrawComponents*
        name: DrawComponents
        nameWithType: JoystickEditor.DrawComponents
        qualifiedName: JoystickEditor.DrawComponents
      VB:
      - id: Global.JoystickEditor.DrawComponents*
        name: DrawComponents
        nameWithType: JoystickEditor.DrawComponents
        qualifiedName: JoystickEditor.DrawComponents
    isDefinition: true
    commentId: Overload:Global.JoystickEditor.DrawComponents
  Global.VariableJoystickEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.VariableJoystickEditor.OnEnable*
        name: OnEnable
        nameWithType: VariableJoystickEditor.OnEnable
        qualifiedName: VariableJoystickEditor.OnEnable
      VB:
      - id: Global.VariableJoystickEditor.OnEnable*
        name: OnEnable
        nameWithType: VariableJoystickEditor.OnEnable
        qualifiedName: VariableJoystickEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.VariableJoystickEditor.OnEnable
  Global.VariableJoystickEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.VariableJoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: VariableJoystickEditor.OnInspectorGUI
        qualifiedName: VariableJoystickEditor.OnInspectorGUI
      VB:
      - id: Global.VariableJoystickEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: VariableJoystickEditor.OnInspectorGUI
        qualifiedName: VariableJoystickEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.VariableJoystickEditor.OnInspectorGUI
  Global.VariableJoystickEditor.DrawValues*:
    name:
      CSharp:
      - id: Global.VariableJoystickEditor.DrawValues*
        name: DrawValues
        nameWithType: VariableJoystickEditor.DrawValues
        qualifiedName: VariableJoystickEditor.DrawValues
      VB:
      - id: Global.VariableJoystickEditor.DrawValues*
        name: DrawValues
        nameWithType: VariableJoystickEditor.DrawValues
        qualifiedName: VariableJoystickEditor.DrawValues
    isDefinition: true
    commentId: Overload:Global.VariableJoystickEditor.DrawValues
  Global.VariableJoystickEditor:
    name:
      CSharp:
      - id: Global.VariableJoystickEditor
        name: VariableJoystickEditor
        nameWithType: VariableJoystickEditor
        qualifiedName: VariableJoystickEditor
      VB:
      - id: Global.VariableJoystickEditor
        name: VariableJoystickEditor
        nameWithType: VariableJoystickEditor
        qualifiedName: VariableJoystickEditor
    isDefinition: true
    commentId: T:Global.VariableJoystickEditor
  Global.Joystick.Horizontal:
    name:
      CSharp:
      - id: Global.Joystick.Horizontal
        name: Horizontal
        nameWithType: Joystick.Horizontal
        qualifiedName: Joystick.Horizontal
      VB:
      - id: Global.Joystick.Horizontal
        name: Horizontal
        nameWithType: Joystick.Horizontal
        qualifiedName: Joystick.Horizontal
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.Horizontal
  Global.Joystick.Vertical:
    name:
      CSharp:
      - id: Global.Joystick.Vertical
        name: Vertical
        nameWithType: Joystick.Vertical
        qualifiedName: Joystick.Vertical
      VB:
      - id: Global.Joystick.Vertical
        name: Vertical
        nameWithType: Joystick.Vertical
        qualifiedName: Joystick.Vertical
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.Vertical
  Global.Joystick.Direction:
    name:
      CSharp:
      - id: Global.Joystick.Direction
        name: Direction
        nameWithType: Joystick.Direction
        qualifiedName: Joystick.Direction
      VB:
      - id: Global.Joystick.Direction
        name: Direction
        nameWithType: Joystick.Direction
        qualifiedName: Joystick.Direction
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.Direction
  Global.Joystick.HandleRange:
    name:
      CSharp:
      - id: Global.Joystick.HandleRange
        name: HandleRange
        nameWithType: Joystick.HandleRange
        qualifiedName: Joystick.HandleRange
      VB:
      - id: Global.Joystick.HandleRange
        name: HandleRange
        nameWithType: Joystick.HandleRange
        qualifiedName: Joystick.HandleRange
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.HandleRange
  Global.Joystick.DeadZone:
    name:
      CSharp:
      - id: Global.Joystick.DeadZone
        name: DeadZone
        nameWithType: Joystick.DeadZone
        qualifiedName: Joystick.DeadZone
      VB:
      - id: Global.Joystick.DeadZone
        name: DeadZone
        nameWithType: Joystick.DeadZone
        qualifiedName: Joystick.DeadZone
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.DeadZone
  Global.Joystick.AxisOptions:
    name:
      CSharp:
      - id: Global.Joystick.AxisOptions
        name: AxisOptions
        nameWithType: Joystick.AxisOptions
        qualifiedName: Joystick.AxisOptions
      VB:
      - id: Global.Joystick.AxisOptions
        name: AxisOptions
        nameWithType: Joystick.AxisOptions
        qualifiedName: Joystick.AxisOptions
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.AxisOptions
  Global.Joystick.SnapX:
    name:
      CSharp:
      - id: Global.Joystick.SnapX
        name: SnapX
        nameWithType: Joystick.SnapX
        qualifiedName: Joystick.SnapX
      VB:
      - id: Global.Joystick.SnapX
        name: SnapX
        nameWithType: Joystick.SnapX
        qualifiedName: Joystick.SnapX
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.SnapX
  Global.Joystick.SnapY:
    name:
      CSharp:
      - id: Global.Joystick.SnapY
        name: SnapY
        nameWithType: Joystick.SnapY
        qualifiedName: Joystick.SnapY
      VB:
      - id: Global.Joystick.SnapY
        name: SnapY
        nameWithType: Joystick.SnapY
        qualifiedName: Joystick.SnapY
    isDefinition: true
    parent: Global.Joystick
    commentId: P:Global.Joystick.SnapY
  Global.Joystick.background:
    name:
      CSharp:
      - id: Global.Joystick.background
        name: background
        nameWithType: Joystick.background
        qualifiedName: Joystick.background
      VB:
      - id: Global.Joystick.background
        name: background
        nameWithType: Joystick.background
        qualifiedName: Joystick.background
    isDefinition: true
    parent: Global.Joystick
    commentId: F:Global.Joystick.background
  Global.Joystick.OnDrag(PointerEventData):
    name:
      CSharp:
      - id: Global.Joystick.OnDrag(PointerEventData)
        name: OnDrag
        nameWithType: Joystick.OnDrag
        qualifiedName: Joystick.OnDrag
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.Joystick.OnDrag(PointerEventData)
        name: OnDrag
        nameWithType: Joystick.OnDrag
        qualifiedName: Joystick.OnDrag
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.Joystick
    commentId: M:Global.Joystick.OnDrag(PointerEventData)
  Global.Joystick.ScreenPointToAnchoredPosition(Vector2):
    name:
      CSharp:
      - id: Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
        name: ScreenPointToAnchoredPosition
        nameWithType: Joystick.ScreenPointToAnchoredPosition
        qualifiedName: Joystick.ScreenPointToAnchoredPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
        name: ScreenPointToAnchoredPosition
        nameWithType: Joystick.ScreenPointToAnchoredPosition
        qualifiedName: Joystick.ScreenPointToAnchoredPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.Joystick
    commentId: M:Global.Joystick.ScreenPointToAnchoredPosition(Vector2)
  Global.DynamicJoystick.MoveThreshold*:
    name:
      CSharp:
      - id: Global.DynamicJoystick.MoveThreshold*
        name: MoveThreshold
        nameWithType: DynamicJoystick.MoveThreshold
        qualifiedName: DynamicJoystick.MoveThreshold
      VB:
      - id: Global.DynamicJoystick.MoveThreshold*
        name: MoveThreshold
        nameWithType: DynamicJoystick.MoveThreshold
        qualifiedName: DynamicJoystick.MoveThreshold
    isDefinition: true
    commentId: Overload:Global.DynamicJoystick.MoveThreshold
  Global.Joystick.Start:
    name:
      CSharp:
      - id: Global.Joystick.Start
        name: Start
        nameWithType: Joystick.Start
        qualifiedName: Joystick.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.Joystick.Start
        name: Start
        nameWithType: Joystick.Start
        qualifiedName: Joystick.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.Joystick
    commentId: M:Global.Joystick.Start
  Global.DynamicJoystick.Start*:
    name:
      CSharp:
      - id: Global.DynamicJoystick.Start*
        name: Start
        nameWithType: DynamicJoystick.Start
        qualifiedName: DynamicJoystick.Start
      VB:
      - id: Global.DynamicJoystick.Start*
        name: Start
        nameWithType: DynamicJoystick.Start
        qualifiedName: DynamicJoystick.Start
    isDefinition: true
    commentId: Overload:Global.DynamicJoystick.Start
  Global.Joystick.OnPointerDown(PointerEventData):
    name:
      CSharp:
      - id: Global.Joystick.OnPointerDown(PointerEventData)
        name: OnPointerDown
        nameWithType: Joystick.OnPointerDown
        qualifiedName: Joystick.OnPointerDown
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.Joystick.OnPointerDown(PointerEventData)
        name: OnPointerDown
        nameWithType: Joystick.OnPointerDown
        qualifiedName: Joystick.OnPointerDown
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.Joystick
    commentId: M:Global.Joystick.OnPointerDown(PointerEventData)
  Global.DynamicJoystick.OnPointerDown*:
    name:
      CSharp:
      - id: Global.DynamicJoystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: DynamicJoystick.OnPointerDown
        qualifiedName: DynamicJoystick.OnPointerDown
      VB:
      - id: Global.DynamicJoystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: DynamicJoystick.OnPointerDown
        qualifiedName: DynamicJoystick.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.DynamicJoystick.OnPointerDown
  Global.Joystick.OnPointerUp(PointerEventData):
    name:
      CSharp:
      - id: Global.Joystick.OnPointerUp(PointerEventData)
        name: OnPointerUp
        nameWithType: Joystick.OnPointerUp
        qualifiedName: Joystick.OnPointerUp
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.Joystick.OnPointerUp(PointerEventData)
        name: OnPointerUp
        nameWithType: Joystick.OnPointerUp
        qualifiedName: Joystick.OnPointerUp
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.Joystick
    commentId: M:Global.Joystick.OnPointerUp(PointerEventData)
  Global.DynamicJoystick.OnPointerUp*:
    name:
      CSharp:
      - id: Global.DynamicJoystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: DynamicJoystick.OnPointerUp
        qualifiedName: DynamicJoystick.OnPointerUp
      VB:
      - id: Global.DynamicJoystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: DynamicJoystick.OnPointerUp
        qualifiedName: DynamicJoystick.OnPointerUp
    isDefinition: true
    commentId: Overload:Global.DynamicJoystick.OnPointerUp
  Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera):
    name:
      CSharp:
      - id: Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
        name: HandleInput
        nameWithType: Joystick.HandleInput
        qualifiedName: Joystick.HandleInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
        name: HandleInput
        nameWithType: Joystick.HandleInput
        qualifiedName: Joystick.HandleInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.Joystick
    commentId: M:Global.Joystick.HandleInput(System.Single,Vector2,Vector2,Camera)
  Global.DynamicJoystick.HandleInput*:
    name:
      CSharp:
      - id: Global.DynamicJoystick.HandleInput*
        name: HandleInput
        nameWithType: DynamicJoystick.HandleInput
        qualifiedName: DynamicJoystick.HandleInput
      VB:
      - id: Global.DynamicJoystick.HandleInput*
        name: HandleInput
        nameWithType: DynamicJoystick.HandleInput
        qualifiedName: DynamicJoystick.HandleInput
    isDefinition: true
    commentId: Overload:Global.DynamicJoystick.HandleInput
  Global.DynamicJoystick:
    name:
      CSharp:
      - id: Global.DynamicJoystick
        name: DynamicJoystick
        nameWithType: DynamicJoystick
        qualifiedName: DynamicJoystick
      VB:
      - id: Global.DynamicJoystick
        name: DynamicJoystick
        nameWithType: DynamicJoystick
        qualifiedName: DynamicJoystick
    isDefinition: true
    commentId: T:Global.DynamicJoystick
  Global.FixedJoystick:
    name:
      CSharp:
      - id: Global.FixedJoystick
        name: FixedJoystick
        nameWithType: FixedJoystick
        qualifiedName: FixedJoystick
      VB:
      - id: Global.FixedJoystick
        name: FixedJoystick
        nameWithType: FixedJoystick
        qualifiedName: FixedJoystick
    isDefinition: true
    commentId: T:Global.FixedJoystick
  Global.FloatingJoystick.Start*:
    name:
      CSharp:
      - id: Global.FloatingJoystick.Start*
        name: Start
        nameWithType: FloatingJoystick.Start
        qualifiedName: FloatingJoystick.Start
      VB:
      - id: Global.FloatingJoystick.Start*
        name: Start
        nameWithType: FloatingJoystick.Start
        qualifiedName: FloatingJoystick.Start
    isDefinition: true
    commentId: Overload:Global.FloatingJoystick.Start
  Global.FloatingJoystick.OnPointerDown*:
    name:
      CSharp:
      - id: Global.FloatingJoystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: FloatingJoystick.OnPointerDown
        qualifiedName: FloatingJoystick.OnPointerDown
      VB:
      - id: Global.FloatingJoystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: FloatingJoystick.OnPointerDown
        qualifiedName: FloatingJoystick.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.FloatingJoystick.OnPointerDown
  Global.FloatingJoystick.OnPointerUp*:
    name:
      CSharp:
      - id: Global.FloatingJoystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: FloatingJoystick.OnPointerUp
        qualifiedName: FloatingJoystick.OnPointerUp
      VB:
      - id: Global.FloatingJoystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: FloatingJoystick.OnPointerUp
        qualifiedName: FloatingJoystick.OnPointerUp
    isDefinition: true
    commentId: Overload:Global.FloatingJoystick.OnPointerUp
  Global.FloatingJoystick:
    name:
      CSharp:
      - id: Global.FloatingJoystick
        name: FloatingJoystick
        nameWithType: FloatingJoystick
        qualifiedName: FloatingJoystick
      VB:
      - id: Global.FloatingJoystick
        name: FloatingJoystick
        nameWithType: FloatingJoystick
        qualifiedName: FloatingJoystick
    isDefinition: true
    commentId: T:Global.FloatingJoystick
  Global.VariableJoystick.MoveThreshold*:
    name:
      CSharp:
      - id: Global.VariableJoystick.MoveThreshold*
        name: MoveThreshold
        nameWithType: VariableJoystick.MoveThreshold
        qualifiedName: VariableJoystick.MoveThreshold
      VB:
      - id: Global.VariableJoystick.MoveThreshold*
        name: MoveThreshold
        nameWithType: VariableJoystick.MoveThreshold
        qualifiedName: VariableJoystick.MoveThreshold
    isDefinition: true
    commentId: Overload:Global.VariableJoystick.MoveThreshold
  Global.JoystickType:
    name:
      CSharp:
      - id: Global.JoystickType
        name: JoystickType
        nameWithType: JoystickType
        qualifiedName: JoystickType
      VB:
      - id: Global.JoystickType
        name: JoystickType
        nameWithType: JoystickType
        qualifiedName: JoystickType
    isDefinition: true
    commentId: T:Global.JoystickType
  Global.VariableJoystick.SetMode*:
    name:
      CSharp:
      - id: Global.VariableJoystick.SetMode*
        name: SetMode
        nameWithType: VariableJoystick.SetMode
        qualifiedName: VariableJoystick.SetMode
      VB:
      - id: Global.VariableJoystick.SetMode*
        name: SetMode
        nameWithType: VariableJoystick.SetMode
        qualifiedName: VariableJoystick.SetMode
    isDefinition: true
    commentId: Overload:Global.VariableJoystick.SetMode
  Global.VariableJoystick.Start*:
    name:
      CSharp:
      - id: Global.VariableJoystick.Start*
        name: Start
        nameWithType: VariableJoystick.Start
        qualifiedName: VariableJoystick.Start
      VB:
      - id: Global.VariableJoystick.Start*
        name: Start
        nameWithType: VariableJoystick.Start
        qualifiedName: VariableJoystick.Start
    isDefinition: true
    commentId: Overload:Global.VariableJoystick.Start
  Global.VariableJoystick.OnPointerDown*:
    name:
      CSharp:
      - id: Global.VariableJoystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: VariableJoystick.OnPointerDown
        qualifiedName: VariableJoystick.OnPointerDown
      VB:
      - id: Global.VariableJoystick.OnPointerDown*
        name: OnPointerDown
        nameWithType: VariableJoystick.OnPointerDown
        qualifiedName: VariableJoystick.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.VariableJoystick.OnPointerDown
  Global.VariableJoystick.OnPointerUp*:
    name:
      CSharp:
      - id: Global.VariableJoystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: VariableJoystick.OnPointerUp
        qualifiedName: VariableJoystick.OnPointerUp
      VB:
      - id: Global.VariableJoystick.OnPointerUp*
        name: OnPointerUp
        nameWithType: VariableJoystick.OnPointerUp
        qualifiedName: VariableJoystick.OnPointerUp
    isDefinition: true
    commentId: Overload:Global.VariableJoystick.OnPointerUp
  Global.VariableJoystick.HandleInput*:
    name:
      CSharp:
      - id: Global.VariableJoystick.HandleInput*
        name: HandleInput
        nameWithType: VariableJoystick.HandleInput
        qualifiedName: VariableJoystick.HandleInput
      VB:
      - id: Global.VariableJoystick.HandleInput*
        name: HandleInput
        nameWithType: VariableJoystick.HandleInput
        qualifiedName: VariableJoystick.HandleInput
    isDefinition: true
    commentId: Overload:Global.VariableJoystick.HandleInput
  Global.VariableRotationJoystick:
    name:
      CSharp:
      - id: Global.VariableRotationJoystick
        name: VariableRotationJoystick
        nameWithType: VariableRotationJoystick
        qualifiedName: VariableRotationJoystick
      VB:
      - id: Global.VariableRotationJoystick
        name: VariableRotationJoystick
        nameWithType: VariableRotationJoystick
        qualifiedName: VariableRotationJoystick
    isDefinition: true
    commentId: T:Global.VariableRotationJoystick
  Global.SliderValue.valueupdate*:
    name:
      CSharp:
      - id: Global.SliderValue.valueupdate*
        name: valueupdate
        nameWithType: SliderValue.valueupdate
        qualifiedName: SliderValue.valueupdate
      VB:
      - id: Global.SliderValue.valueupdate*
        name: valueupdate
        nameWithType: SliderValue.valueupdate
        qualifiedName: SliderValue.valueupdate
    isDefinition: true
    commentId: Overload:Global.SliderValue.valueupdate
  Global.SliderValue:
    name:
      CSharp:
      - id: Global.SliderValue
        name: SliderValue
        nameWithType: SliderValue
        qualifiedName: SliderValue
      VB:
      - id: Global.SliderValue
        name: SliderValue
        nameWithType: SliderValue
        qualifiedName: SliderValue
    isDefinition: true
    commentId: T:Global.SliderValue
  Global:
    name:
      CSharp:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
      VB:
      - name: ''
        nameWithType: ''
        qualifiedName: ''
    isDefinition: true
  TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: SenseManagerEditor.OnInspectorGUI
        qualifiedName: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI
      VB:
      - id: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: SenseManagerEditor.OnInspectorGUI
        qualifiedName: TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:TechXR.Core.Editor.SenseManagerEditor.OnInspectorGUI
  TechXR.Core.Editor.SenseManagerEditor:
    name:
      CSharp:
      - id: TechXR.Core.Editor.SenseManagerEditor
        name: SenseManagerEditor
        nameWithType: SenseManagerEditor
        qualifiedName: TechXR.Core.Editor.SenseManagerEditor
      VB:
      - id: TechXR.Core.Editor.SenseManagerEditor
        name: SenseManagerEditor
        nameWithType: SenseManagerEditor
        qualifiedName: TechXR.Core.Editor.SenseManagerEditor
    isDefinition: true
    commentId: T:TechXR.Core.Editor.SenseManagerEditor
  TechXR.Core.Editor.SenseUIElements:
    name:
      CSharp:
      - id: TechXR.Core.Editor.SenseUIElements
        name: SenseUIElements
        nameWithType: SenseUIElements
        qualifiedName: TechXR.Core.Editor.SenseUIElements
      VB:
      - id: TechXR.Core.Editor.SenseUIElements
        name: SenseUIElements
        nameWithType: SenseUIElements
        qualifiedName: TechXR.Core.Editor.SenseUIElements
    isDefinition: true
    commentId: T:TechXR.Core.Editor.SenseUIElements
  TechXR.Core.Editor.TechXR.ShowWindow*:
    name:
      CSharp:
      - id: TechXR.Core.Editor.TechXR.ShowWindow*
        name: ShowWindow
        nameWithType: TechXR.ShowWindow
        qualifiedName: TechXR.Core.Editor.TechXR.ShowWindow
      VB:
      - id: TechXR.Core.Editor.TechXR.ShowWindow*
        name: ShowWindow
        nameWithType: TechXR.ShowWindow
        qualifiedName: TechXR.Core.Editor.TechXR.ShowWindow
    isDefinition: true
    commentId: Overload:TechXR.Core.Editor.TechXR.ShowWindow
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  TechXR.Core.Editor.TechXR.CreateLayer*:
    name:
      CSharp:
      - id: TechXR.Core.Editor.TechXR.CreateLayer*
        name: CreateLayer
        nameWithType: TechXR.CreateLayer
        qualifiedName: TechXR.Core.Editor.TechXR.CreateLayer
      VB:
      - id: TechXR.Core.Editor.TechXR.CreateLayer*
        name: CreateLayer
        nameWithType: TechXR.CreateLayer
        qualifiedName: TechXR.Core.Editor.TechXR.CreateLayer
    isDefinition: true
    commentId: Overload:TechXR.Core.Editor.TechXR.CreateLayer
  TechXR.Core.Editor.TechXR:
    name:
      CSharp:
      - id: TechXR.Core.Editor.TechXR
        name: TechXR
        nameWithType: TechXR
        qualifiedName: TechXR.Core.Editor.TechXR
      VB:
      - id: TechXR.Core.Editor.TechXR
        name: TechXR
        nameWithType: TechXR
        qualifiedName: TechXR.Core.Editor.TechXR
    isDefinition: true
    commentId: T:TechXR.Core.Editor.TechXR
  TechXR.Core.Editor:
    name:
      CSharp:
      - name: TechXR.Core.Editor
        nameWithType: TechXR.Core.Editor
        qualifiedName: TechXR.Core.Editor
      VB:
      - name: TechXR.Core.Editor
        nameWithType: TechXR.Core.Editor
        qualifiedName: TechXR.Core.Editor
    isDefinition: true
    commentId: N:TechXR.Core.Editor
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  TechXR.Core.Sense.IObject.GetObjectPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectPosition*
        name: GetObjectPosition
        nameWithType: IObject.GetObjectPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectPosition
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectPosition*
        name: GetObjectPosition
        nameWithType: IObject.GetObjectPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IObject.GetObjectPosition
  TechXR.Core.Sense.IObject.GetObjectLocalPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalPosition*
        name: GetObjectLocalPosition
        nameWithType: IObject.GetObjectLocalPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalPosition
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalPosition*
        name: GetObjectLocalPosition
        nameWithType: IObject.GetObjectLocalPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IObject.GetObjectLocalPosition
  Global.Quaternion:
    name:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
  TechXR.Core.Sense.IObject.GetObjectRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectRotation*
        name: GetObjectRotation
        nameWithType: IObject.GetObjectRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectRotation
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectRotation*
        name: GetObjectRotation
        nameWithType: IObject.GetObjectRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IObject.GetObjectRotation
  TechXR.Core.Sense.IObject.GetObjectLocalRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalRotation*
        name: GetObjectLocalRotation
        nameWithType: IObject.GetObjectLocalRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalRotation
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalRotation*
        name: GetObjectLocalRotation
        nameWithType: IObject.GetObjectLocalRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IObject.GetObjectLocalRotation
  TechXR.Core.Sense.IObject:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject
        name: IObject
        nameWithType: IObject
        qualifiedName: TechXR.Core.Sense.IObject
      VB:
      - id: TechXR.Core.Sense.IObject
        name: IObject
        nameWithType: IObject
        qualifiedName: TechXR.Core.Sense.IObject
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.IObject
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  TechXR.Core.Sense.IXR.GetCurrentObject*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetCurrentObject*
        name: GetCurrentObject
        nameWithType: IXR.GetCurrentObject
        qualifiedName: TechXR.Core.Sense.IXR.GetCurrentObject
      VB:
      - id: TechXR.Core.Sense.IXR.GetCurrentObject*
        name: GetCurrentObject
        nameWithType: IXR.GetCurrentObject
        qualifiedName: TechXR.Core.Sense.IXR.GetCurrentObject
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.GetCurrentObject
  TechXR.Core.Sense.IXR.GetController*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetController*
        name: GetController
        nameWithType: IXR.GetController
        qualifiedName: TechXR.Core.Sense.IXR.GetController
      VB:
      - id: TechXR.Core.Sense.IXR.GetController*
        name: GetController
        nameWithType: IXR.GetController
        qualifiedName: TechXR.Core.Sense.IXR.GetController
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.GetController
  TechXR.Core.Sense.IXR.GetXRPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRPosition*
        name: GetXRPosition
        nameWithType: IXR.GetXRPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRPosition
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRPosition*
        name: GetXRPosition
        nameWithType: IXR.GetXRPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.GetXRPosition
  TechXR.Core.Sense.IXR.GetXRLocalPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRLocalPosition*
        name: GetXRLocalPosition
        nameWithType: IXR.GetXRLocalPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalPosition
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRLocalPosition*
        name: GetXRLocalPosition
        nameWithType: IXR.GetXRLocalPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.GetXRLocalPosition
  TechXR.Core.Sense.IXR.GetXRRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRRotation*
        name: GetXRRotation
        nameWithType: IXR.GetXRRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRRotation
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRRotation*
        name: GetXRRotation
        nameWithType: IXR.GetXRRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.GetXRRotation
  TechXR.Core.Sense.IXR.GetXRLocalRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRLocalRotation*
        name: GetXRLocalRotation
        nameWithType: IXR.GetXRLocalRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalRotation
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRLocalRotation*
        name: GetXRLocalRotation
        nameWithType: IXR.GetXRLocalRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.GetXRLocalRotation
  TechXR.Core.Sense.IXR.SetObjectInteractionMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.SetObjectInteractionMode*
        name: SetObjectInteractionMode
        nameWithType: IXR.SetObjectInteractionMode
        qualifiedName: TechXR.Core.Sense.IXR.SetObjectInteractionMode
      VB:
      - id: TechXR.Core.Sense.IXR.SetObjectInteractionMode*
        name: SetObjectInteractionMode
        nameWithType: IXR.SetObjectInteractionMode
        qualifiedName: TechXR.Core.Sense.IXR.SetObjectInteractionMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.SetObjectInteractionMode
  TechXR.Core.Sense:
    name:
      CSharp:
      - name: TechXR.Core.Sense
        nameWithType: TechXR.Core.Sense
        qualifiedName: TechXR.Core.Sense
      VB:
      - name: TechXR.Core.Sense
        nameWithType: TechXR.Core.Sense
        qualifiedName: TechXR.Core.Sense
    isDefinition: true
    commentId: N:TechXR.Core.Sense
  TechXR.Core.Sense.SenseEvent:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: TechXR.Core.Sense.SenseEvent
      VB:
      - id: TechXR.Core.Sense.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: TechXR.Core.Sense.SenseEvent
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.SenseEvent
  TechXR.Core.Sense.SenseEventDelegate:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: TechXR.Core.Sense.SenseEventDelegate
      VB:
      - id: TechXR.Core.Sense.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: TechXR.Core.Sense.SenseEventDelegate
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.SenseEventDelegate
  TechXR.Core.Sense.IXR.AddEventListener*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.AddEventListener*
        name: AddEventListener
        nameWithType: IXR.AddEventListener
        qualifiedName: TechXR.Core.Sense.IXR.AddEventListener
      VB:
      - id: TechXR.Core.Sense.IXR.AddEventListener*
        name: AddEventListener
        nameWithType: IXR.AddEventListener
        qualifiedName: TechXR.Core.Sense.IXR.AddEventListener
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.AddEventListener
  TechXR.Core.Sense.IXR.RemoveEventListener*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.RemoveEventListener*
        name: RemoveEventListener
        nameWithType: IXR.RemoveEventListener
        qualifiedName: TechXR.Core.Sense.IXR.RemoveEventListener
      VB:
      - id: TechXR.Core.Sense.IXR.RemoveEventListener*
        name: RemoveEventListener
        nameWithType: IXR.RemoveEventListener
        qualifiedName: TechXR.Core.Sense.IXR.RemoveEventListener
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.RemoveEventListener
  TechXR.Core.Sense.IXR.TogglePointerDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.TogglePointerDisplay*
        name: TogglePointerDisplay
        nameWithType: IXR.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.IXR.TogglePointerDisplay
      VB:
      - id: TechXR.Core.Sense.IXR.TogglePointerDisplay*
        name: TogglePointerDisplay
        nameWithType: IXR.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.IXR.TogglePointerDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.TogglePointerDisplay
  TechXR.Core.Sense.Defs.PointerDisplayMode:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Defs.PointerDisplayMode
        name: Defs.PointerDisplayMode
        nameWithType: Defs.PointerDisplayMode
        qualifiedName: TechXR.Core.Sense.Defs.PointerDisplayMode
      VB:
      - id: TechXR.Core.Sense.Defs.PointerDisplayMode
        name: Defs.PointerDisplayMode
        nameWithType: Defs.PointerDisplayMode
        qualifiedName: TechXR.Core.Sense.Defs.PointerDisplayMode
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.Defs.PointerDisplayMode
  TechXR.Core.Sense.IXR.SetPointerDisplayMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: IXR.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerDisplayMode
      VB:
      - id: TechXR.Core.Sense.IXR.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: IXR.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerDisplayMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.SetPointerDisplayMode
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  TechXR.Core.Sense.IXR.SetPointerColor*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.SetPointerColor*
        name: SetPointerColor
        nameWithType: IXR.SetPointerColor
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerColor
      VB:
      - id: TechXR.Core.Sense.IXR.SetPointerColor*
        name: SetPointerColor
        nameWithType: IXR.SetPointerColor
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerColor
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IXR.SetPointerColor
  TechXR.Core.Sense.IXR:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR
        name: IXR
        nameWithType: IXR
        qualifiedName: TechXR.Core.Sense.IXR
      VB:
      - id: TechXR.Core.Sense.IXR
        name: IXR
        nameWithType: IXR
        qualifiedName: TechXR.Core.Sense.IXR
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.IXR
  TechXR.Core.Sense.SenseInput:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseInput
        name: SenseInput
        nameWithType: SenseInput
        qualifiedName: TechXR.Core.Sense.SenseInput
      VB:
      - id: TechXR.Core.Sense.SenseInput
        name: SenseInput
        nameWithType: SenseInput
        qualifiedName: TechXR.Core.Sense.SenseInput
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.SenseInput
  TechXR.Core.Sense.SenseInput.JoystickMovement*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseInput.JoystickMovement*
        name: JoystickMovement
        nameWithType: SenseInput.JoystickMovement
        qualifiedName: TechXR.Core.Sense.SenseInput.JoystickMovement
      VB:
      - id: TechXR.Core.Sense.SenseInput.JoystickMovement*
        name: JoystickMovement
        nameWithType: SenseInput.JoystickMovement
        qualifiedName: TechXR.Core.Sense.SenseInput.JoystickMovement
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseInput.JoystickMovement
  TechXR.Core.Sense.SenseInput.TeleportMovement*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseInput.TeleportMovement*
        name: TeleportMovement
        nameWithType: SenseInput.TeleportMovement
        qualifiedName: TechXR.Core.Sense.SenseInput.TeleportMovement
      VB:
      - id: TechXR.Core.Sense.SenseInput.TeleportMovement*
        name: TeleportMovement
        nameWithType: SenseInput.TeleportMovement
        qualifiedName: TechXR.Core.Sense.SenseInput.TeleportMovement
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseInput.TeleportMovement
  TechXR.Core.Sense.SenseXR.GetCurrentObject*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.GetCurrentObject*
        name: GetCurrentObject
        nameWithType: SenseXR.GetCurrentObject
        qualifiedName: TechXR.Core.Sense.SenseXR.GetCurrentObject
      VB:
      - id: TechXR.Core.Sense.SenseXR.GetCurrentObject*
        name: GetCurrentObject
        nameWithType: SenseXR.GetCurrentObject
        qualifiedName: TechXR.Core.Sense.SenseXR.GetCurrentObject
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.GetCurrentObject
  TechXR.Core.Sense.IXR.GetCurrentObject:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetCurrentObject
        name: GetCurrentObject
        nameWithType: IXR.GetCurrentObject
        qualifiedName: TechXR.Core.Sense.IXR.GetCurrentObject
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.GetCurrentObject
        name: GetCurrentObject
        nameWithType: IXR.GetCurrentObject
        qualifiedName: TechXR.Core.Sense.IXR.GetCurrentObject
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.GetCurrentObject
  TechXR.Core.Sense.SenseXR.GetController*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.GetController*
        name: GetController
        nameWithType: SenseXR.GetController
        qualifiedName: TechXR.Core.Sense.SenseXR.GetController
      VB:
      - id: TechXR.Core.Sense.SenseXR.GetController*
        name: GetController
        nameWithType: SenseXR.GetController
        qualifiedName: TechXR.Core.Sense.SenseXR.GetController
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.GetController
  TechXR.Core.Sense.IXR.GetController:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetController
        name: GetController
        nameWithType: IXR.GetController
        qualifiedName: TechXR.Core.Sense.IXR.GetController
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.GetController
        name: GetController
        nameWithType: IXR.GetController
        qualifiedName: TechXR.Core.Sense.IXR.GetController
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.GetController
  TechXR.Core.Sense.LaserPointer:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer
        name: LaserPointer
        nameWithType: LaserPointer
        qualifiedName: TechXR.Core.Sense.LaserPointer
      VB:
      - id: TechXR.Core.Sense.LaserPointer
        name: LaserPointer
        nameWithType: LaserPointer
        qualifiedName: TechXR.Core.Sense.LaserPointer
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.LaserPointer
  TechXR.Core.Sense.SenseXR.GetLaserPointer*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.GetLaserPointer*
        name: GetLaserPointer
        nameWithType: SenseXR.GetLaserPointer
        qualifiedName: TechXR.Core.Sense.SenseXR.GetLaserPointer
      VB:
      - id: TechXR.Core.Sense.SenseXR.GetLaserPointer*
        name: GetLaserPointer
        nameWithType: SenseXR.GetLaserPointer
        qualifiedName: TechXR.Core.Sense.SenseXR.GetLaserPointer
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.GetLaserPointer
  TechXR.Core.Sense.SenseXR.GetXRPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.GetXRPosition*
        name: GetXRPosition
        nameWithType: SenseXR.GetXRPosition
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRPosition
      VB:
      - id: TechXR.Core.Sense.SenseXR.GetXRPosition*
        name: GetXRPosition
        nameWithType: SenseXR.GetXRPosition
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.GetXRPosition
  TechXR.Core.Sense.IXR.GetXRPosition:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRPosition
        name: GetXRPosition
        nameWithType: IXR.GetXRPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRPosition
        name: GetXRPosition
        nameWithType: IXR.GetXRPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.GetXRPosition
  TechXR.Core.Sense.SenseXR.GetXRLocalPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.GetXRLocalPosition*
        name: GetXRLocalPosition
        nameWithType: SenseXR.GetXRLocalPosition
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRLocalPosition
      VB:
      - id: TechXR.Core.Sense.SenseXR.GetXRLocalPosition*
        name: GetXRLocalPosition
        nameWithType: SenseXR.GetXRLocalPosition
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRLocalPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.GetXRLocalPosition
  TechXR.Core.Sense.IXR.GetXRLocalPosition:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRLocalPosition
        name: GetXRLocalPosition
        nameWithType: IXR.GetXRLocalPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRLocalPosition
        name: GetXRLocalPosition
        nameWithType: IXR.GetXRLocalPosition
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.GetXRLocalPosition
  TechXR.Core.Sense.SenseXR.GetXRRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.GetXRRotation*
        name: GetXRRotation
        nameWithType: SenseXR.GetXRRotation
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRRotation
      VB:
      - id: TechXR.Core.Sense.SenseXR.GetXRRotation*
        name: GetXRRotation
        nameWithType: SenseXR.GetXRRotation
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.GetXRRotation
  TechXR.Core.Sense.IXR.GetXRRotation:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRRotation
        name: GetXRRotation
        nameWithType: IXR.GetXRRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRRotation
        name: GetXRRotation
        nameWithType: IXR.GetXRRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.GetXRRotation
  TechXR.Core.Sense.SenseXR.GetXRLocalRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.GetXRLocalRotation*
        name: GetXRLocalRotation
        nameWithType: SenseXR.GetXRLocalRotation
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRLocalRotation
      VB:
      - id: TechXR.Core.Sense.SenseXR.GetXRLocalRotation*
        name: GetXRLocalRotation
        nameWithType: SenseXR.GetXRLocalRotation
        qualifiedName: TechXR.Core.Sense.SenseXR.GetXRLocalRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.GetXRLocalRotation
  TechXR.Core.Sense.IXR.GetXRLocalRotation:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.GetXRLocalRotation
        name: GetXRLocalRotation
        nameWithType: IXR.GetXRLocalRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.GetXRLocalRotation
        name: GetXRLocalRotation
        nameWithType: IXR.GetXRLocalRotation
        qualifiedName: TechXR.Core.Sense.IXR.GetXRLocalRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.GetXRLocalRotation
  TechXR.Core.Sense.SenseXR.SetObjectInteractionMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode*
        name: SetObjectInteractionMode
        nameWithType: SenseXR.SetObjectInteractionMode
        qualifiedName: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode
      VB:
      - id: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode*
        name: SetObjectInteractionMode
        nameWithType: SenseXR.SetObjectInteractionMode
        qualifiedName: TechXR.Core.Sense.SenseXR.SetObjectInteractionMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.SetObjectInteractionMode
  TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject,System.Boolean):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject,System.Boolean)
        name: SetObjectInteractionMode
        nameWithType: IXR.SetObjectInteractionMode
        qualifiedName: TechXR.Core.Sense.IXR.SetObjectInteractionMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject,System.Boolean)
        name: SetObjectInteractionMode
        nameWithType: IXR.SetObjectInteractionMode
        qualifiedName: TechXR.Core.Sense.IXR.SetObjectInteractionMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.SetObjectInteractionMode(GameObject,System.Boolean)
  TechXR.Core.Sense.SenseXR.AddEventListener*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.AddEventListener*
        name: AddEventListener
        nameWithType: SenseXR.AddEventListener
        qualifiedName: TechXR.Core.Sense.SenseXR.AddEventListener
      VB:
      - id: TechXR.Core.Sense.SenseXR.AddEventListener*
        name: AddEventListener
        nameWithType: SenseXR.AddEventListener
        qualifiedName: TechXR.Core.Sense.SenseXR.AddEventListener
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.AddEventListener
  TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
        name: AddEventListener
        nameWithType: IXR.AddEventListener
        qualifiedName: TechXR.Core.Sense.IXR.AddEventListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: TechXR.Core.Sense.SenseEvent
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TechXR.Core.Sense.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: TechXR.Core.Sense.SenseEventDelegate
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
        name: AddEventListener
        nameWithType: IXR.AddEventListener
        qualifiedName: TechXR.Core.Sense.IXR.AddEventListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: TechXR.Core.Sense.SenseEvent
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TechXR.Core.Sense.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: TechXR.Core.Sense.SenseEventDelegate
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.AddEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
  TechXR.Core.Sense.SenseXR.RemoveEventListener*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.RemoveEventListener*
        name: RemoveEventListener
        nameWithType: SenseXR.RemoveEventListener
        qualifiedName: TechXR.Core.Sense.SenseXR.RemoveEventListener
      VB:
      - id: TechXR.Core.Sense.SenseXR.RemoveEventListener*
        name: RemoveEventListener
        nameWithType: SenseXR.RemoveEventListener
        qualifiedName: TechXR.Core.Sense.SenseXR.RemoveEventListener
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.RemoveEventListener
  TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
        name: RemoveEventListener
        nameWithType: IXR.RemoveEventListener
        qualifiedName: TechXR.Core.Sense.IXR.RemoveEventListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: TechXR.Core.Sense.SenseEvent
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TechXR.Core.Sense.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: TechXR.Core.Sense.SenseEventDelegate
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
        name: RemoveEventListener
        nameWithType: IXR.RemoveEventListener
        qualifiedName: TechXR.Core.Sense.IXR.RemoveEventListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: TechXR.Core.Sense.SenseEvent
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TechXR.Core.Sense.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: TechXR.Core.Sense.SenseEventDelegate
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.RemoveEventListener(TechXR.Core.Sense.SenseEvent,TechXR.Core.Sense.SenseEventDelegate)
  TechXR.Core.Sense.SenseXR.TriggerEvent*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.TriggerEvent*
        name: TriggerEvent
        nameWithType: SenseXR.TriggerEvent
        qualifiedName: TechXR.Core.Sense.SenseXR.TriggerEvent
      VB:
      - id: TechXR.Core.Sense.SenseXR.TriggerEvent*
        name: TriggerEvent
        nameWithType: SenseXR.TriggerEvent
        qualifiedName: TechXR.Core.Sense.SenseXR.TriggerEvent
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.TriggerEvent
  System.Object[]:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TechXR.Core.Sense.SenseXR.TogglePointerDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.TogglePointerDisplay*
        name: TogglePointerDisplay
        nameWithType: SenseXR.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.SenseXR.TogglePointerDisplay
      VB:
      - id: TechXR.Core.Sense.SenseXR.TogglePointerDisplay*
        name: TogglePointerDisplay
        nameWithType: SenseXR.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.SenseXR.TogglePointerDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.TogglePointerDisplay
  TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
        name: TogglePointerDisplay
        nameWithType: IXR.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.IXR.TogglePointerDisplay
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
        name: TogglePointerDisplay
        nameWithType: IXR.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.IXR.TogglePointerDisplay
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.TogglePointerDisplay(System.Boolean)
  TechXR.Core.Sense.SenseXR.SetPointerDisplayMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: SenseXR.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode
      VB:
      - id: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: SenseXR.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.SenseXR.SetPointerDisplayMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.SetPointerDisplayMode
  TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        name: SetPointerDisplayMode
        nameWithType: IXR.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerDisplayMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.Defs.PointerDisplayMode
        name: Defs.PointerDisplayMode
        nameWithType: Defs.PointerDisplayMode
        qualifiedName: TechXR.Core.Sense.Defs.PointerDisplayMode
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        name: SetPointerDisplayMode
        nameWithType: IXR.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerDisplayMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.Defs.PointerDisplayMode
        name: Defs.PointerDisplayMode
        nameWithType: Defs.PointerDisplayMode
        qualifiedName: TechXR.Core.Sense.Defs.PointerDisplayMode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
  TechXR.Core.Sense.SenseXR.SetPointerColor*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR.SetPointerColor*
        name: SetPointerColor
        nameWithType: SenseXR.SetPointerColor
        qualifiedName: TechXR.Core.Sense.SenseXR.SetPointerColor
      VB:
      - id: TechXR.Core.Sense.SenseXR.SetPointerColor*
        name: SetPointerColor
        nameWithType: SenseXR.SetPointerColor
        qualifiedName: TechXR.Core.Sense.SenseXR.SetPointerColor
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseXR.SetPointerColor
  TechXR.Core.Sense.IXR.SetPointerColor(Color):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IXR.SetPointerColor(Color)
        name: SetPointerColor
        nameWithType: IXR.SetPointerColor
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerColor
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IXR.SetPointerColor(Color)
        name: SetPointerColor
        nameWithType: IXR.SetPointerColor
        qualifiedName: TechXR.Core.Sense.IXR.SetPointerColor
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IXR
    commentId: M:TechXR.Core.Sense.IXR.SetPointerColor(Color)
  TechXR.Core.Sense.SenseXR:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseXR
        name: SenseXR
        nameWithType: SenseXR
        qualifiedName: TechXR.Core.Sense.SenseXR
      VB:
      - id: TechXR.Core.Sense.SenseXR
        name: SenseXR
        nameWithType: SenseXR
        qualifiedName: TechXR.Core.Sense.SenseXR
    isDefinition: true
    commentId: T:TechXR.Core.Sense.SenseXR
  TechXR.Core.Sense.JoystickController.SetPlayerReference*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.JoystickController.SetPlayerReference*
        name: SetPlayerReference
        nameWithType: JoystickController.SetPlayerReference
        qualifiedName: TechXR.Core.Sense.JoystickController.SetPlayerReference
      VB:
      - id: TechXR.Core.Sense.JoystickController.SetPlayerReference*
        name: SetPlayerReference
        nameWithType: JoystickController.SetPlayerReference
        qualifiedName: TechXR.Core.Sense.JoystickController.SetPlayerReference
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.JoystickController.SetPlayerReference
  TechXR.Core.Sense.JoystickController:
    name:
      CSharp:
      - id: TechXR.Core.Sense.JoystickController
        name: JoystickController
        nameWithType: JoystickController
        qualifiedName: TechXR.Core.Sense.JoystickController
      VB:
      - id: TechXR.Core.Sense.JoystickController
        name: JoystickController
        nameWithType: JoystickController
        qualifiedName: TechXR.Core.Sense.JoystickController
    isDefinition: true
    commentId: T:TechXR.Core.Sense.JoystickController
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  TechXR.Core.Sense.Defs:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Defs
        name: Defs
        nameWithType: Defs
        qualifiedName: TechXR.Core.Sense.Defs
      VB:
      - id: TechXR.Core.Sense.Defs
        name: Defs
        nameWithType: Defs
        qualifiedName: TechXR.Core.Sense.Defs
    isDefinition: true
    commentId: T:TechXR.Core.Sense.Defs
  TechXR.Core.Sense.LaserPointerEventData:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerEventData
        name: LaserPointerEventData
        nameWithType: LaserPointerEventData
        qualifiedName: TechXR.Core.Sense.LaserPointerEventData
      VB:
      - id: TechXR.Core.Sense.LaserPointerEventData
        name: LaserPointerEventData
        nameWithType: LaserPointerEventData
        qualifiedName: TechXR.Core.Sense.LaserPointerEventData
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.LaserPointerEventData
  TechXR.Core.Sense.ControllerData:
    name:
      CSharp:
      - id: TechXR.Core.Sense.ControllerData
        name: ControllerData
        nameWithType: ControllerData
        qualifiedName: TechXR.Core.Sense.ControllerData
      VB:
      - id: TechXR.Core.Sense.ControllerData
        name: ControllerData
        nameWithType: ControllerData
        qualifiedName: TechXR.Core.Sense.ControllerData
    isDefinition: true
    commentId: T:TechXR.Core.Sense.ControllerData
  TechXR.Core.Sense.IUILaserPointer:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer
        name: IUILaserPointer
        nameWithType: IUILaserPointer
        qualifiedName: TechXR.Core.Sense.IUILaserPointer
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer
        name: IUILaserPointer
        nameWithType: IUILaserPointer
        qualifiedName: TechXR.Core.Sense.IUILaserPointer
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.IUILaserPointer
  Global.EventSystem:
    name:
      CSharp:
      - id: Global.EventSystem
        name: EventSystem
        nameWithType: EventSystem
        qualifiedName: EventSystem
        isExternal: true
      VB:
      - id: Global.EventSystem
        name: EventSystem
        nameWithType: EventSystem
        qualifiedName: EventSystem
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EventSystem'
  TechXR.Core.Sense.LaserPointerEventData.#ctor*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerEventData.#ctor*
        name: LaserPointerEventData
        nameWithType: LaserPointerEventData.LaserPointerEventData
        qualifiedName: TechXR.Core.Sense.LaserPointerEventData.LaserPointerEventData
      VB:
      - id: TechXR.Core.Sense.LaserPointerEventData.#ctor*
        name: LaserPointerEventData
        nameWithType: LaserPointerEventData.LaserPointerEventData
        qualifiedName: TechXR.Core.Sense.LaserPointerEventData.LaserPointerEventData
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerEventData.#ctor
  TechXR.Core.Sense.LaserPointerEventData.Reset*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerEventData.Reset*
        name: Reset
        nameWithType: LaserPointerEventData.Reset
        qualifiedName: TechXR.Core.Sense.LaserPointerEventData.Reset
      VB:
      - id: TechXR.Core.Sense.LaserPointerEventData.Reset*
        name: Reset
        nameWithType: LaserPointerEventData.Reset
        qualifiedName: TechXR.Core.Sense.LaserPointerEventData.Reset
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerEventData.Reset
  TechXR.Core.Sense.SenseManager:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager
        name: SenseManager
        nameWithType: SenseManager
        qualifiedName: TechXR.Core.Sense.SenseManager
      VB:
      - id: TechXR.Core.Sense.SenseManager
        name: SenseManager
        nameWithType: SenseManager
        qualifiedName: TechXR.Core.Sense.SenseManager
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.SenseManager
  TechXR.Core.Sense.SenseManager.CurrentPointerMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.CurrentPointerMode*
        name: CurrentPointerMode
        nameWithType: SenseManager.CurrentPointerMode
        qualifiedName: TechXR.Core.Sense.SenseManager.CurrentPointerMode
      VB:
      - id: TechXR.Core.Sense.SenseManager.CurrentPointerMode*
        name: CurrentPointerMode
        nameWithType: SenseManager.CurrentPointerMode
        qualifiedName: TechXR.Core.Sense.SenseManager.CurrentPointerMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.CurrentPointerMode
  TechXR.Core.Sense.SenseManager.TogglePointerDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.TogglePointerDisplay*
        name: TogglePointerDisplay
        nameWithType: SenseManager.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.SenseManager.TogglePointerDisplay
      VB:
      - id: TechXR.Core.Sense.SenseManager.TogglePointerDisplay*
        name: TogglePointerDisplay
        nameWithType: SenseManager.TogglePointerDisplay
        qualifiedName: TechXR.Core.Sense.SenseManager.TogglePointerDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.TogglePointerDisplay
  TechXR.Core.Sense.SenseManager.SetPointerDisplayMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: SenseManager.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode
      VB:
      - id: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: SenseManager.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.SenseManager.SetPointerDisplayMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.SetPointerDisplayMode
  TechXR.Core.Sense.SenseManager.SetPointerColor*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.SetPointerColor*
        name: SetPointerColor
        nameWithType: SenseManager.SetPointerColor
        qualifiedName: TechXR.Core.Sense.SenseManager.SetPointerColor
      VB:
      - id: TechXR.Core.Sense.SenseManager.SetPointerColor*
        name: SetPointerColor
        nameWithType: SenseManager.SetPointerColor
        qualifiedName: TechXR.Core.Sense.SenseManager.SetPointerColor
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.SetPointerColor
  TechXR.Core.Sense.SenseManager.GetCurrentGameObject*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.GetCurrentGameObject*
        name: GetCurrentGameObject
        nameWithType: SenseManager.GetCurrentGameObject
        qualifiedName: TechXR.Core.Sense.SenseManager.GetCurrentGameObject
      VB:
      - id: TechXR.Core.Sense.SenseManager.GetCurrentGameObject*
        name: GetCurrentGameObject
        nameWithType: SenseManager.GetCurrentGameObject
        qualifiedName: TechXR.Core.Sense.SenseManager.GetCurrentGameObject
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.GetCurrentGameObject
  TechXR.Core.Sense.SenseManager.GetController*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.GetController*
        name: GetController
        nameWithType: SenseManager.GetController
        qualifiedName: TechXR.Core.Sense.SenseManager.GetController
      VB:
      - id: TechXR.Core.Sense.SenseManager.GetController*
        name: GetController
        nameWithType: SenseManager.GetController
        qualifiedName: TechXR.Core.Sense.SenseManager.GetController
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.GetController
  TechXR.Core.Sense.SenseManager.GetLaserPointer*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.GetLaserPointer*
        name: GetLaserPointer
        nameWithType: SenseManager.GetLaserPointer
        qualifiedName: TechXR.Core.Sense.SenseManager.GetLaserPointer
      VB:
      - id: TechXR.Core.Sense.SenseManager.GetLaserPointer*
        name: GetLaserPointer
        nameWithType: SenseManager.GetLaserPointer
        qualifiedName: TechXR.Core.Sense.SenseManager.GetLaserPointer
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.GetLaserPointer
  TechXR.Core.Sense.SenseManager.ToggleTeleportMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.ToggleTeleportMode*
        name: ToggleTeleportMode
        nameWithType: SenseManager.ToggleTeleportMode
        qualifiedName: TechXR.Core.Sense.SenseManager.ToggleTeleportMode
      VB:
      - id: TechXR.Core.Sense.SenseManager.ToggleTeleportMode*
        name: ToggleTeleportMode
        nameWithType: SenseManager.ToggleTeleportMode
        qualifiedName: TechXR.Core.Sense.SenseManager.ToggleTeleportMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.ToggleTeleportMode
  TechXR.Core.Sense.SenseManager.PopulateClassObjects*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseManager.PopulateClassObjects*
        name: PopulateClassObjects
        nameWithType: SenseManager.PopulateClassObjects
        qualifiedName: TechXR.Core.Sense.SenseManager.PopulateClassObjects
      VB:
      - id: TechXR.Core.Sense.SenseManager.PopulateClassObjects*
        name: PopulateClassObjects
        nameWithType: SenseManager.PopulateClassObjects
        qualifiedName: TechXR.Core.Sense.SenseManager.PopulateClassObjects
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseManager.PopulateClassObjects
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  TechXR.Core.Sense.GyroScript.SetEnabled*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.GyroScript.SetEnabled*
        name: SetEnabled
        nameWithType: GyroScript.SetEnabled
        qualifiedName: TechXR.Core.Sense.GyroScript.SetEnabled
      VB:
      - id: TechXR.Core.Sense.GyroScript.SetEnabled*
        name: SetEnabled
        nameWithType: GyroScript.SetEnabled
        qualifiedName: TechXR.Core.Sense.GyroScript.SetEnabled
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.GyroScript.SetEnabled
  TechXR.Core.Sense.GyroScript:
    name:
      CSharp:
      - id: TechXR.Core.Sense.GyroScript
        name: GyroScript
        nameWithType: GyroScript
        qualifiedName: TechXR.Core.Sense.GyroScript
      VB:
      - id: TechXR.Core.Sense.GyroScript
        name: GyroScript
        nameWithType: GyroScript
        qualifiedName: TechXR.Core.Sense.GyroScript
    isDefinition: true
    commentId: T:TechXR.Core.Sense.GyroScript
  Global.IPointerClickHandler:
    name:
      CSharp:
      - id: Global.IPointerClickHandler
        name: IPointerClickHandler
        nameWithType: IPointerClickHandler
        qualifiedName: IPointerClickHandler
        isExternal: true
      VB:
      - id: Global.IPointerClickHandler
        name: IPointerClickHandler
        nameWithType: IPointerClickHandler
        qualifiedName: IPointerClickHandler
        isExternal: true
    isDefinition: true
    commentId: '!:Global.IPointerClickHandler'
  TechXR.Core.Sense.Grabbable.GetObjectLocalPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition*
        name: GetObjectLocalPosition
        nameWithType: Grabbable.GetObjectLocalPosition
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition
      VB:
      - id: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition*
        name: GetObjectLocalPosition
        nameWithType: Grabbable.GetObjectLocalPosition
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectLocalPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabbable.GetObjectLocalPosition
  TechXR.Core.Sense.IObject.GetObjectLocalPosition:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalPosition
        name: GetObjectLocalPosition
        nameWithType: IObject.GetObjectLocalPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalPosition
        name: GetObjectLocalPosition
        nameWithType: IObject.GetObjectLocalPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IObject
    commentId: M:TechXR.Core.Sense.IObject.GetObjectLocalPosition
  TechXR.Core.Sense.Grabbable.GetObjectLocalRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation*
        name: GetObjectLocalRotation
        nameWithType: Grabbable.GetObjectLocalRotation
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation
      VB:
      - id: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation*
        name: GetObjectLocalRotation
        nameWithType: Grabbable.GetObjectLocalRotation
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectLocalRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabbable.GetObjectLocalRotation
  TechXR.Core.Sense.IObject.GetObjectLocalRotation:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalRotation
        name: GetObjectLocalRotation
        nameWithType: IObject.GetObjectLocalRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectLocalRotation
        name: GetObjectLocalRotation
        nameWithType: IObject.GetObjectLocalRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectLocalRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IObject
    commentId: M:TechXR.Core.Sense.IObject.GetObjectLocalRotation
  TechXR.Core.Sense.Grabbable.GetObjectPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable.GetObjectPosition*
        name: GetObjectPosition
        nameWithType: Grabbable.GetObjectPosition
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectPosition
      VB:
      - id: TechXR.Core.Sense.Grabbable.GetObjectPosition*
        name: GetObjectPosition
        nameWithType: Grabbable.GetObjectPosition
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabbable.GetObjectPosition
  TechXR.Core.Sense.IObject.GetObjectPosition:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectPosition
        name: GetObjectPosition
        nameWithType: IObject.GetObjectPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectPosition
        name: GetObjectPosition
        nameWithType: IObject.GetObjectPosition
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IObject
    commentId: M:TechXR.Core.Sense.IObject.GetObjectPosition
  TechXR.Core.Sense.Grabbable.GetObjectRotation*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable.GetObjectRotation*
        name: GetObjectRotation
        nameWithType: Grabbable.GetObjectRotation
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectRotation
      VB:
      - id: TechXR.Core.Sense.Grabbable.GetObjectRotation*
        name: GetObjectRotation
        nameWithType: Grabbable.GetObjectRotation
        qualifiedName: TechXR.Core.Sense.Grabbable.GetObjectRotation
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabbable.GetObjectRotation
  TechXR.Core.Sense.IObject.GetObjectRotation:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IObject.GetObjectRotation
        name: GetObjectRotation
        nameWithType: IObject.GetObjectRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IObject.GetObjectRotation
        name: GetObjectRotation
        nameWithType: IObject.GetObjectRotation
        qualifiedName: TechXR.Core.Sense.IObject.GetObjectRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IObject
    commentId: M:TechXR.Core.Sense.IObject.GetObjectRotation
  TechXR.Core.Sense.Grabbable.OnPointerDown*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable.OnPointerDown*
        name: OnPointerDown
        nameWithType: Grabbable.OnPointerDown
        qualifiedName: TechXR.Core.Sense.Grabbable.OnPointerDown
      VB:
      - id: TechXR.Core.Sense.Grabbable.OnPointerDown*
        name: OnPointerDown
        nameWithType: Grabbable.OnPointerDown
        qualifiedName: TechXR.Core.Sense.Grabbable.OnPointerDown
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabbable.OnPointerDown
  TechXR.Core.Sense.Grabbable.OnPointerUp*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable.OnPointerUp*
        name: OnPointerUp
        nameWithType: Grabbable.OnPointerUp
        qualifiedName: TechXR.Core.Sense.Grabbable.OnPointerUp
      VB:
      - id: TechXR.Core.Sense.Grabbable.OnPointerUp*
        name: OnPointerUp
        nameWithType: Grabbable.OnPointerUp
        qualifiedName: TechXR.Core.Sense.Grabbable.OnPointerUp
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabbable.OnPointerUp
  TechXR.Core.Sense.Grabbable.OnPointerClick*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable.OnPointerClick*
        name: OnPointerClick
        nameWithType: Grabbable.OnPointerClick
        qualifiedName: TechXR.Core.Sense.Grabbable.OnPointerClick
      VB:
      - id: TechXR.Core.Sense.Grabbable.OnPointerClick*
        name: OnPointerClick
        nameWithType: Grabbable.OnPointerClick
        qualifiedName: TechXR.Core.Sense.Grabbable.OnPointerClick
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabbable.OnPointerClick
  TechXR.Core.Sense.Grabbable:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabbable
        name: Grabbable
        nameWithType: Grabbable
        qualifiedName: TechXR.Core.Sense.Grabbable
      VB:
      - id: TechXR.Core.Sense.Grabbable
        name: Grabbable
        nameWithType: Grabbable
        qualifiedName: TechXR.Core.Sense.Grabbable
    isDefinition: true
    commentId: T:TechXR.Core.Sense.Grabbable
  TechXR.Core.Sense.Grabber.TryGrabObject*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabber.TryGrabObject*
        name: TryGrabObject
        nameWithType: Grabber.TryGrabObject
        qualifiedName: TechXR.Core.Sense.Grabber.TryGrabObject
      VB:
      - id: TechXR.Core.Sense.Grabber.TryGrabObject*
        name: TryGrabObject
        nameWithType: Grabber.TryGrabObject
        qualifiedName: TechXR.Core.Sense.Grabber.TryGrabObject
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabber.TryGrabObject
  TechXR.Core.Sense.Grabber.DropObject*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabber.DropObject*
        name: DropObject
        nameWithType: Grabber.DropObject
        qualifiedName: TechXR.Core.Sense.Grabber.DropObject
      VB:
      - id: TechXR.Core.Sense.Grabber.DropObject*
        name: DropObject
        nameWithType: Grabber.DropObject
        qualifiedName: TechXR.Core.Sense.Grabber.DropObject
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabber.DropObject
  TechXR.Core.Sense.Grabber.CheckIfGrabbableObject*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject*
        name: CheckIfGrabbableObject
        nameWithType: Grabber.CheckIfGrabbableObject
        qualifiedName: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject
      VB:
      - id: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject*
        name: CheckIfGrabbableObject
        nameWithType: Grabber.CheckIfGrabbableObject
        qualifiedName: TechXR.Core.Sense.Grabber.CheckIfGrabbableObject
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Grabber.CheckIfGrabbableObject
  TechXR.Core.Sense.Grabber:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Grabber
        name: Grabber
        nameWithType: Grabber
        qualifiedName: TechXR.Core.Sense.Grabber
      VB:
      - id: TechXR.Core.Sense.Grabber
        name: Grabber
        nameWithType: Grabber
        qualifiedName: TechXR.Core.Sense.Grabber
    isDefinition: true
    commentId: T:TechXR.Core.Sense.Grabber
  TechXR.Core.Sense.SenseController.ToggleJoystickMovement*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseController.ToggleJoystickMovement*
        name: ToggleJoystickMovement
        nameWithType: SenseController.ToggleJoystickMovement
        qualifiedName: TechXR.Core.Sense.SenseController.ToggleJoystickMovement
      VB:
      - id: TechXR.Core.Sense.SenseController.ToggleJoystickMovement*
        name: ToggleJoystickMovement
        nameWithType: SenseController.ToggleJoystickMovement
        qualifiedName: TechXR.Core.Sense.SenseController.ToggleJoystickMovement
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseController.ToggleJoystickMovement
  TechXR.Core.Sense.SenseController.ToggleTeleportMovement*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseController.ToggleTeleportMovement*
        name: ToggleTeleportMovement
        nameWithType: SenseController.ToggleTeleportMovement
        qualifiedName: TechXR.Core.Sense.SenseController.ToggleTeleportMovement
      VB:
      - id: TechXR.Core.Sense.SenseController.ToggleTeleportMovement*
        name: ToggleTeleportMovement
        nameWithType: SenseController.ToggleTeleportMovement
        qualifiedName: TechXR.Core.Sense.SenseController.ToggleTeleportMovement
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseController.ToggleTeleportMovement
  TechXR.Core.Sense.SenseController.SetPointerType*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseController.SetPointerType*
        name: SetPointerType
        nameWithType: SenseController.SetPointerType
        qualifiedName: TechXR.Core.Sense.SenseController.SetPointerType
      VB:
      - id: TechXR.Core.Sense.SenseController.SetPointerType*
        name: SetPointerType
        nameWithType: SenseController.SetPointerType
        qualifiedName: TechXR.Core.Sense.SenseController.SetPointerType
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseController.SetPointerType
  TechXR.Core.Sense.SenseController.ToggleDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseController.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: SenseController.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.SenseController.ToggleDisplay
      VB:
      - id: TechXR.Core.Sense.SenseController.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: SenseController.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.SenseController.ToggleDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.SenseController.ToggleDisplay
  TechXR.Core.Sense.SenseController:
    name:
      CSharp:
      - id: TechXR.Core.Sense.SenseController
        name: SenseController
        nameWithType: SenseController
        qualifiedName: TechXR.Core.Sense.SenseController
      VB:
      - id: TechXR.Core.Sense.SenseController
        name: SenseController
        nameWithType: SenseController
        qualifiedName: TechXR.Core.Sense.SenseController
    isDefinition: true
    commentId: T:TechXR.Core.Sense.SenseController
  TechXR.Core.Sense.IUILaserPointer.Start*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.Start*
        name: Start
        nameWithType: IUILaserPointer.Start
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Start
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.Start*
        name: Start
        nameWithType: IUILaserPointer.Start
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Start
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.Start
  TechXR.Core.Sense.IUILaserPointer.Update*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.Update*
        name: Update
        nameWithType: IUILaserPointer.Update
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Update
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.Update*
        name: Update
        nameWithType: IUILaserPointer.Update
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Update
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.Update
  TechXR.Core.Sense.IUILaserPointer.Initialize*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.Initialize*
        name: Initialize
        nameWithType: IUILaserPointer.Initialize
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Initialize
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.Initialize*
        name: Initialize
        nameWithType: IUILaserPointer.Initialize
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Initialize
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.Initialize
  TechXR.Core.Sense.IUILaserPointer.OnEnterControl*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.OnEnterControl*
        name: OnEnterControl
        nameWithType: IUILaserPointer.OnEnterControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnEnterControl
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.OnEnterControl*
        name: OnEnterControl
        nameWithType: IUILaserPointer.OnEnterControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnEnterControl
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.OnEnterControl
  TechXR.Core.Sense.IUILaserPointer.OnExitControl*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.OnExitControl*
        name: OnExitControl
        nameWithType: IUILaserPointer.OnExitControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnExitControl
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.OnExitControl*
        name: OnExitControl
        nameWithType: IUILaserPointer.OnExitControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnExitControl
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.OnExitControl
  TechXR.Core.Sense.IUILaserPointer.ToggleDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: IUILaserPointer.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: IUILaserPointer.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.ToggleDisplay
  TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: IUILaserPointer.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode*
        name: SetPointerDisplayMode
        nameWithType: IUILaserPointer.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode
  TechXR.Core.Sense.IUILaserPointer.ButtonDown*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonDown*
        name: ButtonDown
        nameWithType: IUILaserPointer.ButtonDown
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonDown
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonDown*
        name: ButtonDown
        nameWithType: IUILaserPointer.ButtonDown
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonDown
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.ButtonDown
  TechXR.Core.Sense.IUILaserPointer.ButtonUp*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonUp*
        name: ButtonUp
        nameWithType: IUILaserPointer.ButtonUp
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonUp
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonUp*
        name: ButtonUp
        nameWithType: IUILaserPointer.ButtonUp
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonUp
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.ButtonUp
  TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance*
        name: LimitLaserDistance
        nameWithType: IUILaserPointer.LimitLaserDistance
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance*
        name: LimitLaserDistance
        nameWithType: IUILaserPointer.LimitLaserDistance
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance
  TechXR.Core.Sense.IUILaserPointer.SetColor*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.SetColor*
        name: SetColor
        nameWithType: IUILaserPointer.SetColor
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetColor
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.SetColor*
        name: SetColor
        nameWithType: IUILaserPointer.SetColor
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetColor
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.IUILaserPointer.SetColor
  TechXR.Core.Sense.IUILaserPointer.LaserThickness:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.LaserThickness
        name: LaserThickness
        nameWithType: IUILaserPointer.LaserThickness
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LaserThickness
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.LaserThickness
        name: LaserThickness
        nameWithType: IUILaserPointer.LaserThickness
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LaserThickness
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: F:TechXR.Core.Sense.IUILaserPointer.LaserThickness
  TechXR.Core.Sense.IUILaserPointer.LaserHitScale:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.LaserHitScale
        name: LaserHitScale
        nameWithType: IUILaserPointer.LaserHitScale
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LaserHitScale
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.LaserHitScale
        name: LaserHitScale
        nameWithType: IUILaserPointer.LaserHitScale
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LaserHitScale
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: F:TechXR.Core.Sense.IUILaserPointer.LaserHitScale
  TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
        name: LaserAlwaysOn
        nameWithType: IUILaserPointer.LaserAlwaysOn
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
        name: LaserAlwaysOn
        nameWithType: IUILaserPointer.LaserAlwaysOn
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: F:TechXR.Core.Sense.IUILaserPointer.LaserAlwaysOn
  TechXR.Core.Sense.IUILaserPointer.Color:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.Color
        name: Color
        nameWithType: IUILaserPointer.Color
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Color
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.Color
        name: Color
        nameWithType: IUILaserPointer.Color
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Color
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: F:TechXR.Core.Sense.IUILaserPointer.Color
  TechXR.Core.Sense.IUILaserPointer.Initialize:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.Initialize
        name: Initialize
        nameWithType: IUILaserPointer.Initialize
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.Initialize
        name: Initialize
        nameWithType: IUILaserPointer.Initialize
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.Initialize
  TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        name: SetPointerDisplayMode
        nameWithType: IUILaserPointer.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.Defs.PointerDisplayMode
        name: Defs.PointerDisplayMode
        nameWithType: Defs.PointerDisplayMode
        qualifiedName: TechXR.Core.Sense.Defs.PointerDisplayMode
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
        name: SetPointerDisplayMode
        nameWithType: IUILaserPointer.SetPointerDisplayMode
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: TechXR.Core.Sense.Defs.PointerDisplayMode
        name: Defs.PointerDisplayMode
        nameWithType: Defs.PointerDisplayMode
        qualifiedName: TechXR.Core.Sense.Defs.PointerDisplayMode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.SetPointerDisplayMode(TechXR.Core.Sense.Defs.PointerDisplayMode)
  TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
        name: LimitLaserDistance
        nameWithType: IUILaserPointer.LimitLaserDistance
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
        name: LimitLaserDistance
        nameWithType: IUILaserPointer.LimitLaserDistance
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.LimitLaserDistance(System.Single)
  TechXR.Core.Sense.IUILaserPointer.SetColor(Color):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
        name: SetColor
        nameWithType: IUILaserPointer.SetColor
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetColor
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
        name: SetColor
        nameWithType: IUILaserPointer.SetColor
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.SetColor
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.SetColor(Color)
  TechXR.Core.Sense.IUILaserPointer.Start:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.Start
        name: Start
        nameWithType: IUILaserPointer.Start
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.Start
        name: Start
        nameWithType: IUILaserPointer.Start
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.Start
  TechXR.Core.Sense.LaserPointer.Start*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.Start*
        name: Start
        nameWithType: LaserPointer.Start
        qualifiedName: TechXR.Core.Sense.LaserPointer.Start
      VB:
      - id: TechXR.Core.Sense.LaserPointer.Start*
        name: Start
        nameWithType: LaserPointer.Start
        qualifiedName: TechXR.Core.Sense.LaserPointer.Start
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.Start
  TechXR.Core.Sense.IUILaserPointer.Update:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.Update
        name: Update
        nameWithType: IUILaserPointer.Update
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.Update
        name: Update
        nameWithType: IUILaserPointer.Update
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.Update
  TechXR.Core.Sense.LaserPointer.Update*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.Update*
        name: Update
        nameWithType: LaserPointer.Update
        qualifiedName: TechXR.Core.Sense.LaserPointer.Update
      VB:
      - id: TechXR.Core.Sense.LaserPointer.Update*
        name: Update
        nameWithType: LaserPointer.Update
        qualifiedName: TechXR.Core.Sense.LaserPointer.Update
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.Update
  TechXR.Core.Sense.IUILaserPointer.ButtonDown:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonDown
        name: ButtonDown
        nameWithType: IUILaserPointer.ButtonDown
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonDown
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonDown
        name: ButtonDown
        nameWithType: IUILaserPointer.ButtonDown
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonDown
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.ButtonDown
  TechXR.Core.Sense.LaserPointer.ButtonDown*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.ButtonDown*
        name: ButtonDown
        nameWithType: LaserPointer.ButtonDown
        qualifiedName: TechXR.Core.Sense.LaserPointer.ButtonDown
      VB:
      - id: TechXR.Core.Sense.LaserPointer.ButtonDown*
        name: ButtonDown
        nameWithType: LaserPointer.ButtonDown
        qualifiedName: TechXR.Core.Sense.LaserPointer.ButtonDown
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.ButtonDown
  TechXR.Core.Sense.IUILaserPointer.ButtonUp:
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonUp
        name: ButtonUp
        nameWithType: IUILaserPointer.ButtonUp
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonUp
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.ButtonUp
        name: ButtonUp
        nameWithType: IUILaserPointer.ButtonUp
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ButtonUp
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.ButtonUp
  TechXR.Core.Sense.LaserPointer.ButtonUp*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.ButtonUp*
        name: ButtonUp
        nameWithType: LaserPointer.ButtonUp
        qualifiedName: TechXR.Core.Sense.LaserPointer.ButtonUp
      VB:
      - id: TechXR.Core.Sense.LaserPointer.ButtonUp*
        name: ButtonUp
        nameWithType: LaserPointer.ButtonUp
        qualifiedName: TechXR.Core.Sense.LaserPointer.ButtonUp
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.ButtonUp
  TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
        name: OnEnterControl
        nameWithType: IUILaserPointer.OnEnterControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnEnterControl
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
        name: OnEnterControl
        nameWithType: IUILaserPointer.OnEnterControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnEnterControl
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.OnEnterControl(GameObject)
  TechXR.Core.Sense.LaserPointer.OnEnterControl*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.OnEnterControl*
        name: OnEnterControl
        nameWithType: LaserPointer.OnEnterControl
        qualifiedName: TechXR.Core.Sense.LaserPointer.OnEnterControl
      VB:
      - id: TechXR.Core.Sense.LaserPointer.OnEnterControl*
        name: OnEnterControl
        nameWithType: LaserPointer.OnEnterControl
        qualifiedName: TechXR.Core.Sense.LaserPointer.OnEnterControl
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.OnEnterControl
  TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
        name: OnExitControl
        nameWithType: IUILaserPointer.OnExitControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnExitControl
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
        name: OnExitControl
        nameWithType: IUILaserPointer.OnExitControl
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.OnExitControl
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.OnExitControl(GameObject)
  TechXR.Core.Sense.LaserPointer.OnExitControl*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.OnExitControl*
        name: OnExitControl
        nameWithType: LaserPointer.OnExitControl
        qualifiedName: TechXR.Core.Sense.LaserPointer.OnExitControl
      VB:
      - id: TechXR.Core.Sense.LaserPointer.OnExitControl*
        name: OnExitControl
        nameWithType: LaserPointer.OnExitControl
        qualifiedName: TechXR.Core.Sense.LaserPointer.OnExitControl
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.OnExitControl
  TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean):
    name:
      CSharp:
      - id: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
        name: ToggleDisplay
        nameWithType: IUILaserPointer.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
        name: ToggleDisplay
        nameWithType: IUILaserPointer.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.IUILaserPointer.ToggleDisplay
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TechXR.Core.Sense.IUILaserPointer
    commentId: M:TechXR.Core.Sense.IUILaserPointer.ToggleDisplay(System.Boolean)
  TechXR.Core.Sense.LaserPointer.ToggleDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: LaserPointer.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.LaserPointer.ToggleDisplay
      VB:
      - id: TechXR.Core.Sense.LaserPointer.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: LaserPointer.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.LaserPointer.ToggleDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.ToggleDisplay
  TechXR.Core.Sense.LaserPointer.GetCurrentGameObject*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject*
        name: GetCurrentGameObject
        nameWithType: LaserPointer.GetCurrentGameObject
        qualifiedName: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject
      VB:
      - id: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject*
        name: GetCurrentGameObject
        nameWithType: LaserPointer.GetCurrentGameObject
        qualifiedName: TechXR.Core.Sense.LaserPointer.GetCurrentGameObject
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointer.GetCurrentGameObject
  TechXR.Core.Sense.LaserPointerInputModule:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule
        name: LaserPointerInputModule
        nameWithType: LaserPointerInputModule
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule
        name: LaserPointerInputModule
        nameWithType: LaserPointerInputModule
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule
    isDefinition: true
    parent: TechXR.Core.Sense
    commentId: T:TechXR.Core.Sense.LaserPointerInputModule
  TechXR.Core.Sense.LaserPointerInputModule.instance*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.instance*
        name: instance
        nameWithType: LaserPointerInputModule.instance
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.instance
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.instance*
        name: instance
        nameWithType: LaserPointerInputModule.instance
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.instance
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.instance
  Global.LayerMask:
    name:
      CSharp:
      - id: Global.LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      VB:
      - id: Global.LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
    isDefinition: true
  TechXR.Core.Sense.LaserPointerInputModule.Awake*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.Awake*
        name: Awake
        nameWithType: LaserPointerInputModule.Awake
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.Awake
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.Awake*
        name: Awake
        nameWithType: LaserPointerInputModule.Awake
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.Awake
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.Awake
  TechXR.Core.Sense.LaserPointerInputModule.Start*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.Start*
        name: Start
        nameWithType: LaserPointerInputModule.Start
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.Start
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.Start*
        name: Start
        nameWithType: LaserPointerInputModule.Start
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.Start
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.Start
  TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition*
        name: UpdateCameraPosition
        nameWithType: LaserPointerInputModule.UpdateCameraPosition
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition*
        name: UpdateCameraPosition
        nameWithType: LaserPointerInputModule.UpdateCameraPosition
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.UpdateCameraPosition
  TechXR.Core.Sense.LaserPointerInputModule.AddController*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.AddController*
        name: AddController
        nameWithType: LaserPointerInputModule.AddController
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.AddController
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.AddController*
        name: AddController
        nameWithType: LaserPointerInputModule.AddController
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.AddController
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.AddController
  TechXR.Core.Sense.LaserPointerInputModule.RemoveController*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.RemoveController*
        name: RemoveController
        nameWithType: LaserPointerInputModule.RemoveController
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.RemoveController
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.RemoveController*
        name: RemoveController
        nameWithType: LaserPointerInputModule.RemoveController
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.RemoveController
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.RemoveController
  TechXR.Core.Sense.LaserPointerInputModule.ClearSelection*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection*
        name: ClearSelection
        nameWithType: LaserPointerInputModule.ClearSelection
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection*
        name: ClearSelection
        nameWithType: LaserPointerInputModule.ClearSelection
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.ClearSelection
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.ClearSelection
  TechXR.Core.Sense.LaserPointerInputModule.Process*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.LaserPointerInputModule.Process*
        name: Process
        nameWithType: LaserPointerInputModule.Process
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.Process
      VB:
      - id: TechXR.Core.Sense.LaserPointerInputModule.Process*
        name: Process
        nameWithType: LaserPointerInputModule.Process
        qualifiedName: TechXR.Core.Sense.LaserPointerInputModule.Process
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.LaserPointerInputModule.Process
  TechXR.Core.Sense.Teleporter.Teleport*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Teleporter.Teleport*
        name: Teleport
        nameWithType: Teleporter.Teleport
        qualifiedName: TechXR.Core.Sense.Teleporter.Teleport
      VB:
      - id: TechXR.Core.Sense.Teleporter.Teleport*
        name: Teleport
        nameWithType: Teleporter.Teleport
        qualifiedName: TechXR.Core.Sense.Teleporter.Teleport
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Teleporter.Teleport
  TechXR.Core.Sense.Teleporter.ToggleDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Teleporter.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: Teleporter.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.Teleporter.ToggleDisplay
      VB:
      - id: TechXR.Core.Sense.Teleporter.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: Teleporter.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.Teleporter.ToggleDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.Teleporter.ToggleDisplay
  TechXR.Core.Sense.Teleporter:
    name:
      CSharp:
      - id: TechXR.Core.Sense.Teleporter
        name: Teleporter
        nameWithType: Teleporter
        qualifiedName: TechXR.Core.Sense.Teleporter
      VB:
      - id: TechXR.Core.Sense.Teleporter
        name: Teleporter
        nameWithType: Teleporter
        qualifiedName: TechXR.Core.Sense.Teleporter
    isDefinition: true
    commentId: T:TechXR.Core.Sense.Teleporter
  TechXR.Core.Sense.TeleportManager.TeleportMode*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.TeleportManager.TeleportMode*
        name: TeleportMode
        nameWithType: TeleportManager.TeleportMode
        qualifiedName: TechXR.Core.Sense.TeleportManager.TeleportMode
      VB:
      - id: TechXR.Core.Sense.TeleportManager.TeleportMode*
        name: TeleportMode
        nameWithType: TeleportManager.TeleportMode
        qualifiedName: TechXR.Core.Sense.TeleportManager.TeleportMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.TeleportManager.TeleportMode
  TechXR.Core.Sense.TeleportManager.ToggleDisplay*:
    name:
      CSharp:
      - id: TechXR.Core.Sense.TeleportManager.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: TeleportManager.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.TeleportManager.ToggleDisplay
      VB:
      - id: TechXR.Core.Sense.TeleportManager.ToggleDisplay*
        name: ToggleDisplay
        nameWithType: TeleportManager.ToggleDisplay
        qualifiedName: TechXR.Core.Sense.TeleportManager.ToggleDisplay
    isDefinition: true
    commentId: Overload:TechXR.Core.Sense.TeleportManager.ToggleDisplay
  TechXR.Core.Sense.TeleportManager:
    name:
      CSharp:
      - id: TechXR.Core.Sense.TeleportManager
        name: TeleportManager
        nameWithType: TeleportManager
        qualifiedName: TechXR.Core.Sense.TeleportManager
      VB:
      - id: TechXR.Core.Sense.TeleportManager
        name: TeleportManager
        nameWithType: TeleportManager
        qualifiedName: TechXR.Core.Sense.TeleportManager
    isDefinition: true
    commentId: T:TechXR.Core.Sense.TeleportManager
  TechXR.Core.Sense.PlayerMovement:
    name:
      CSharp:
      - id: TechXR.Core.Sense.PlayerMovement
        name: PlayerMovement
        nameWithType: PlayerMovement
        qualifiedName: TechXR.Core.Sense.PlayerMovement
      VB:
      - id: TechXR.Core.Sense.PlayerMovement
        name: PlayerMovement
        nameWithType: PlayerMovement
        qualifiedName: TechXR.Core.Sense.PlayerMovement
    isDefinition: true
    commentId: T:TechXR.Core.Sense.PlayerMovement
  TechXR.Core.Utils.Singleton`1:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:TechXR.Core.Utils.Singleton`1
  TechXR.Core.Utils:
    name:
      CSharp:
      - name: TechXR.Core.Utils
        nameWithType: TechXR.Core.Utils
        qualifiedName: TechXR.Core.Utils
      VB:
      - name: TechXR.Core.Utils
        nameWithType: TechXR.Core.Utils
        qualifiedName: TechXR.Core.Utils
    isDefinition: true
    commentId: N:TechXR.Core.Utils
  TechXR.Core.Utils.Singleton{TechXR.Core.Utils.DataManager}:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TechXR.Core.Utils.DataManager
        name: DataManager
        nameWithType: DataManager
        qualifiedName: TechXR.Core.Utils.DataManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TechXR.Core.Utils.DataManager
        name: DataManager
        nameWithType: DataManager
        qualifiedName: TechXR.Core.Utils.DataManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: TechXR.Core.Utils.Singleton`1
    parent: TechXR.Core.Utils
    commentId: T:TechXR.Core.Utils.Singleton{TechXR.Core.Utils.DataManager}
  TechXR.Core.Utils.Singleton`1.Instance:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<T>.Instance
        qualifiedName: TechXR.Core.Utils.Singleton<T>.Instance
      VB:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of T).Instance
        qualifiedName: TechXR.Core.Utils.Singleton(Of T).Instance
    isDefinition: true
    commentId: P:TechXR.Core.Utils.Singleton`1.Instance
  TechXR.Core.Utils.Singleton{TechXR.Core.Utils.DataManager}.Instance:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<DataManager>.Instance
        qualifiedName: TechXR.Core.Utils.Singleton<TechXR.Core.Utils.DataManager>.Instance
      VB:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of DataManager).Instance
        qualifiedName: TechXR.Core.Utils.Singleton(Of TechXR.Core.Utils.DataManager).Instance
    isDefinition: false
    definition: TechXR.Core.Utils.Singleton`1.Instance
    parent: TechXR.Core.Utils.Singleton{TechXR.Core.Utils.DataManager}
    commentId: P:TechXR.Core.Utils.Singleton{TechXR.Core.Utils.DataManager}.Instance
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  TechXR.Core.Utils.DataManager.Init*:
    name:
      CSharp:
      - id: TechXR.Core.Utils.DataManager.Init*
        name: Init
        nameWithType: DataManager.Init
        qualifiedName: TechXR.Core.Utils.DataManager.Init
      VB:
      - id: TechXR.Core.Utils.DataManager.Init*
        name: Init
        nameWithType: DataManager.Init
        qualifiedName: TechXR.Core.Utils.DataManager.Init
    isDefinition: true
    commentId: Overload:TechXR.Core.Utils.DataManager.Init
  TechXR.Core.Utils.DataManager:
    name:
      CSharp:
      - id: TechXR.Core.Utils.DataManager
        name: DataManager
        nameWithType: DataManager
        qualifiedName: TechXR.Core.Utils.DataManager
      VB:
      - id: TechXR.Core.Utils.DataManager
        name: DataManager
        nameWithType: DataManager
        qualifiedName: TechXR.Core.Utils.DataManager
    isDefinition: true
    commentId: T:TechXR.Core.Utils.DataManager
  TechXR.Core.Utils.Singleton{TechXR.Core.Utils.EventManager}:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TechXR.Core.Utils.EventManager
        name: EventManager
        nameWithType: EventManager
        qualifiedName: TechXR.Core.Utils.EventManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TechXR.Core.Utils.EventManager
        name: EventManager
        nameWithType: EventManager
        qualifiedName: TechXR.Core.Utils.EventManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: TechXR.Core.Utils.Singleton`1
    parent: TechXR.Core.Utils
    commentId: T:TechXR.Core.Utils.Singleton{TechXR.Core.Utils.EventManager}
  TechXR.Core.Utils.Singleton{TechXR.Core.Utils.EventManager}.Instance:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<EventManager>.Instance
        qualifiedName: TechXR.Core.Utils.Singleton<TechXR.Core.Utils.EventManager>.Instance
      VB:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of EventManager).Instance
        qualifiedName: TechXR.Core.Utils.Singleton(Of TechXR.Core.Utils.EventManager).Instance
    isDefinition: false
    definition: TechXR.Core.Utils.Singleton`1.Instance
    parent: TechXR.Core.Utils.Singleton{TechXR.Core.Utils.EventManager}
    commentId: P:TechXR.Core.Utils.Singleton{TechXR.Core.Utils.EventManager}.Instance
  TechXR.Core.Utils.EventManager.OnInstanceCreated*:
    name:
      CSharp:
      - id: TechXR.Core.Utils.EventManager.OnInstanceCreated*
        name: OnInstanceCreated
        nameWithType: EventManager.OnInstanceCreated
        qualifiedName: TechXR.Core.Utils.EventManager.OnInstanceCreated
      VB:
      - id: TechXR.Core.Utils.EventManager.OnInstanceCreated*
        name: OnInstanceCreated
        nameWithType: EventManager.OnInstanceCreated
        qualifiedName: TechXR.Core.Utils.EventManager.OnInstanceCreated
    isDefinition: true
    commentId: Overload:TechXR.Core.Utils.EventManager.OnInstanceCreated
  Global.SenseEvent:
    name:
      CSharp:
      - id: Global.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: SenseEvent
        isExternal: true
      VB:
      - id: Global.SenseEvent
        name: SenseEvent
        nameWithType: SenseEvent
        qualifiedName: SenseEvent
        isExternal: true
    isDefinition: true
  Global.SenseEventDelegate:
    name:
      CSharp:
      - id: Global.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: SenseEventDelegate
        isExternal: true
      VB:
      - id: Global.SenseEventDelegate
        name: SenseEventDelegate
        nameWithType: SenseEventDelegate
        qualifiedName: SenseEventDelegate
        isExternal: true
    isDefinition: true
  TechXR.Core.Utils.EventManager.RegisterEvent*:
    name:
      CSharp:
      - id: TechXR.Core.Utils.EventManager.RegisterEvent*
        name: RegisterEvent
        nameWithType: EventManager.RegisterEvent
        qualifiedName: TechXR.Core.Utils.EventManager.RegisterEvent
      VB:
      - id: TechXR.Core.Utils.EventManager.RegisterEvent*
        name: RegisterEvent
        nameWithType: EventManager.RegisterEvent
        qualifiedName: TechXR.Core.Utils.EventManager.RegisterEvent
    isDefinition: true
    commentId: Overload:TechXR.Core.Utils.EventManager.RegisterEvent
  TechXR.Core.Utils.EventManager.DeRegisterEvent*:
    name:
      CSharp:
      - id: TechXR.Core.Utils.EventManager.DeRegisterEvent*
        name: DeRegisterEvent
        nameWithType: EventManager.DeRegisterEvent
        qualifiedName: TechXR.Core.Utils.EventManager.DeRegisterEvent
      VB:
      - id: TechXR.Core.Utils.EventManager.DeRegisterEvent*
        name: DeRegisterEvent
        nameWithType: EventManager.DeRegisterEvent
        qualifiedName: TechXR.Core.Utils.EventManager.DeRegisterEvent
    isDefinition: true
    commentId: Overload:TechXR.Core.Utils.EventManager.DeRegisterEvent
  TechXR.Core.Utils.EventManager.TriggerEvent*:
    name:
      CSharp:
      - id: TechXR.Core.Utils.EventManager.TriggerEvent*
        name: TriggerEvent
        nameWithType: EventManager.TriggerEvent
        qualifiedName: TechXR.Core.Utils.EventManager.TriggerEvent
      VB:
      - id: TechXR.Core.Utils.EventManager.TriggerEvent*
        name: TriggerEvent
        nameWithType: EventManager.TriggerEvent
        qualifiedName: TechXR.Core.Utils.EventManager.TriggerEvent
    isDefinition: true
    commentId: Overload:TechXR.Core.Utils.EventManager.TriggerEvent
  TechXR.Core.Utils.EventManager:
    name:
      CSharp:
      - id: TechXR.Core.Utils.EventManager
        name: EventManager
        nameWithType: EventManager
        qualifiedName: TechXR.Core.Utils.EventManager
      VB:
      - id: TechXR.Core.Utils.EventManager
        name: EventManager
        nameWithType: EventManager
        qualifiedName: TechXR.Core.Utils.EventManager
    isDefinition: true
    commentId: T:TechXR.Core.Utils.EventManager
  TechXR.Core.Utils.Singleton{TechXR.Core.Utils.StateManager}:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TechXR.Core.Utils.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: TechXR.Core.Utils.StateManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: TechXR.Core.Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: TechXR.Core.Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TechXR.Core.Utils.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: TechXR.Core.Utils.StateManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: TechXR.Core.Utils.Singleton`1
    parent: TechXR.Core.Utils
    commentId: T:TechXR.Core.Utils.Singleton{TechXR.Core.Utils.StateManager}
  TechXR.Core.Utils.Singleton{TechXR.Core.Utils.StateManager}.Instance:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton<StateManager>.Instance
        qualifiedName: TechXR.Core.Utils.Singleton<TechXR.Core.Utils.StateManager>.Instance
      VB:
      - id: TechXR.Core.Utils.Singleton`1.Instance
        name: Instance
        nameWithType: Singleton(Of StateManager).Instance
        qualifiedName: TechXR.Core.Utils.Singleton(Of TechXR.Core.Utils.StateManager).Instance
    isDefinition: false
    definition: TechXR.Core.Utils.Singleton`1.Instance
    parent: TechXR.Core.Utils.Singleton{TechXR.Core.Utils.StateManager}
    commentId: P:TechXR.Core.Utils.Singleton{TechXR.Core.Utils.StateManager}.Instance
  TechXR.Core.Utils.StateManager.GrabMode*:
    name:
      CSharp:
      - id: TechXR.Core.Utils.StateManager.GrabMode*
        name: GrabMode
        nameWithType: StateManager.GrabMode
        qualifiedName: TechXR.Core.Utils.StateManager.GrabMode
      VB:
      - id: TechXR.Core.Utils.StateManager.GrabMode*
        name: GrabMode
        nameWithType: StateManager.GrabMode
        qualifiedName: TechXR.Core.Utils.StateManager.GrabMode
    isDefinition: true
    commentId: Overload:TechXR.Core.Utils.StateManager.GrabMode
  TechXR.Core.Utils.StateManager:
    name:
      CSharp:
      - id: TechXR.Core.Utils.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: TechXR.Core.Utils.StateManager
      VB:
      - id: TechXR.Core.Utils.StateManager
        name: StateManager
        nameWithType: StateManager
        qualifiedName: TechXR.Core.Utils.StateManager
    isDefinition: true
    commentId: T:TechXR.Core.Utils.StateManager
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
    commentId: '!:T'
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  TechXR.Core.Utils.Singleton`1.Instance*:
    name:
      CSharp:
      - id: TechXR.Core.Utils.Singleton`1.Instance*
        name: Instance
        nameWithType: Singleton<T>.Instance
        qualifiedName: TechXR.Core.Utils.Singleton<T>.Instance
      VB:
      - id: TechXR.Core.Utils.Singleton`1.Instance*
        name: Instance
        nameWithType: Singleton(Of T).Instance
        qualifiedName: TechXR.Core.Utils.Singleton(Of T).Instance
    isDefinition: true
    commentId: Overload:TechXR.Core.Utils.Singleton`1.Instance
